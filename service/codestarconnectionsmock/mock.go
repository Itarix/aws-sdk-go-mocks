// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/codestarconnections/codestarconnectionsiface (interfaces: CodeStarConnectionsAPI)

// Package codestarconnectionsmock is a generated GoMock package.
package codestarconnectionsmock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	codestarconnections "github.com/aws/aws-sdk-go/service/codestarconnections"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCodeStarConnectionsAPI is a mock of CodeStarConnectionsAPI interface
type MockCodeStarConnectionsAPI struct {
	ctrl     *gomock.Controller
	recorder *MockCodeStarConnectionsAPIMockRecorder
}

// MockCodeStarConnectionsAPIMockRecorder is the mock recorder for MockCodeStarConnectionsAPI
type MockCodeStarConnectionsAPIMockRecorder struct {
	mock *MockCodeStarConnectionsAPI
}

// NewMockCodeStarConnectionsAPI creates a new mock instance
func NewMockCodeStarConnectionsAPI(ctrl *gomock.Controller) *MockCodeStarConnectionsAPI {
	mock := &MockCodeStarConnectionsAPI{ctrl: ctrl}
	mock.recorder = &MockCodeStarConnectionsAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCodeStarConnectionsAPI) EXPECT() *MockCodeStarConnectionsAPIMockRecorder {
	return m.recorder
}

// CreateConnection mocks base method
func (m *MockCodeStarConnectionsAPI) CreateConnection(arg0 *codestarconnections.CreateConnectionInput) (*codestarconnections.CreateConnectionOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConnection", arg0)
	ret0, _ := ret[0].(*codestarconnections.CreateConnectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConnection indicates an expected call of CreateConnection
func (mr *MockCodeStarConnectionsAPIMockRecorder) CreateConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConnection", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).CreateConnection), arg0)
}

// CreateConnectionRequest mocks base method
func (m *MockCodeStarConnectionsAPI) CreateConnectionRequest(arg0 *codestarconnections.CreateConnectionInput) (*request.Request, *codestarconnections.CreateConnectionOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConnectionRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codestarconnections.CreateConnectionOutput)
	return ret0, ret1
}

// CreateConnectionRequest indicates an expected call of CreateConnectionRequest
func (mr *MockCodeStarConnectionsAPIMockRecorder) CreateConnectionRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConnectionRequest", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).CreateConnectionRequest), arg0)
}

// CreateConnectionWithContext mocks base method
func (m *MockCodeStarConnectionsAPI) CreateConnectionWithContext(arg0 context.Context, arg1 *codestarconnections.CreateConnectionInput, arg2 ...request.Option) (*codestarconnections.CreateConnectionOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateConnectionWithContext", varargs...)
	ret0, _ := ret[0].(*codestarconnections.CreateConnectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConnectionWithContext indicates an expected call of CreateConnectionWithContext
func (mr *MockCodeStarConnectionsAPIMockRecorder) CreateConnectionWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConnectionWithContext", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).CreateConnectionWithContext), varargs...)
}

// DeleteConnection mocks base method
func (m *MockCodeStarConnectionsAPI) DeleteConnection(arg0 *codestarconnections.DeleteConnectionInput) (*codestarconnections.DeleteConnectionOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConnection", arg0)
	ret0, _ := ret[0].(*codestarconnections.DeleteConnectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteConnection indicates an expected call of DeleteConnection
func (mr *MockCodeStarConnectionsAPIMockRecorder) DeleteConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConnection", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).DeleteConnection), arg0)
}

// DeleteConnectionRequest mocks base method
func (m *MockCodeStarConnectionsAPI) DeleteConnectionRequest(arg0 *codestarconnections.DeleteConnectionInput) (*request.Request, *codestarconnections.DeleteConnectionOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConnectionRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codestarconnections.DeleteConnectionOutput)
	return ret0, ret1
}

// DeleteConnectionRequest indicates an expected call of DeleteConnectionRequest
func (mr *MockCodeStarConnectionsAPIMockRecorder) DeleteConnectionRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConnectionRequest", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).DeleteConnectionRequest), arg0)
}

// DeleteConnectionWithContext mocks base method
func (m *MockCodeStarConnectionsAPI) DeleteConnectionWithContext(arg0 context.Context, arg1 *codestarconnections.DeleteConnectionInput, arg2 ...request.Option) (*codestarconnections.DeleteConnectionOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteConnectionWithContext", varargs...)
	ret0, _ := ret[0].(*codestarconnections.DeleteConnectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteConnectionWithContext indicates an expected call of DeleteConnectionWithContext
func (mr *MockCodeStarConnectionsAPIMockRecorder) DeleteConnectionWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConnectionWithContext", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).DeleteConnectionWithContext), varargs...)
}

// GetConnection mocks base method
func (m *MockCodeStarConnectionsAPI) GetConnection(arg0 *codestarconnections.GetConnectionInput) (*codestarconnections.GetConnectionOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnection", arg0)
	ret0, _ := ret[0].(*codestarconnections.GetConnectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnection indicates an expected call of GetConnection
func (mr *MockCodeStarConnectionsAPIMockRecorder) GetConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnection", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).GetConnection), arg0)
}

// GetConnectionRequest mocks base method
func (m *MockCodeStarConnectionsAPI) GetConnectionRequest(arg0 *codestarconnections.GetConnectionInput) (*request.Request, *codestarconnections.GetConnectionOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectionRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codestarconnections.GetConnectionOutput)
	return ret0, ret1
}

// GetConnectionRequest indicates an expected call of GetConnectionRequest
func (mr *MockCodeStarConnectionsAPIMockRecorder) GetConnectionRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectionRequest", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).GetConnectionRequest), arg0)
}

// GetConnectionWithContext mocks base method
func (m *MockCodeStarConnectionsAPI) GetConnectionWithContext(arg0 context.Context, arg1 *codestarconnections.GetConnectionInput, arg2 ...request.Option) (*codestarconnections.GetConnectionOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetConnectionWithContext", varargs...)
	ret0, _ := ret[0].(*codestarconnections.GetConnectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnectionWithContext indicates an expected call of GetConnectionWithContext
func (mr *MockCodeStarConnectionsAPIMockRecorder) GetConnectionWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectionWithContext", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).GetConnectionWithContext), varargs...)
}

// ListConnections mocks base method
func (m *MockCodeStarConnectionsAPI) ListConnections(arg0 *codestarconnections.ListConnectionsInput) (*codestarconnections.ListConnectionsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConnections", arg0)
	ret0, _ := ret[0].(*codestarconnections.ListConnectionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConnections indicates an expected call of ListConnections
func (mr *MockCodeStarConnectionsAPIMockRecorder) ListConnections(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConnections", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).ListConnections), arg0)
}

// ListConnectionsPages mocks base method
func (m *MockCodeStarConnectionsAPI) ListConnectionsPages(arg0 *codestarconnections.ListConnectionsInput, arg1 func(*codestarconnections.ListConnectionsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConnectionsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListConnectionsPages indicates an expected call of ListConnectionsPages
func (mr *MockCodeStarConnectionsAPIMockRecorder) ListConnectionsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConnectionsPages", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).ListConnectionsPages), arg0, arg1)
}

// ListConnectionsPagesWithContext mocks base method
func (m *MockCodeStarConnectionsAPI) ListConnectionsPagesWithContext(arg0 context.Context, arg1 *codestarconnections.ListConnectionsInput, arg2 func(*codestarconnections.ListConnectionsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListConnectionsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListConnectionsPagesWithContext indicates an expected call of ListConnectionsPagesWithContext
func (mr *MockCodeStarConnectionsAPIMockRecorder) ListConnectionsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConnectionsPagesWithContext", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).ListConnectionsPagesWithContext), varargs...)
}

// ListConnectionsRequest mocks base method
func (m *MockCodeStarConnectionsAPI) ListConnectionsRequest(arg0 *codestarconnections.ListConnectionsInput) (*request.Request, *codestarconnections.ListConnectionsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConnectionsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codestarconnections.ListConnectionsOutput)
	return ret0, ret1
}

// ListConnectionsRequest indicates an expected call of ListConnectionsRequest
func (mr *MockCodeStarConnectionsAPIMockRecorder) ListConnectionsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConnectionsRequest", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).ListConnectionsRequest), arg0)
}

// ListConnectionsWithContext mocks base method
func (m *MockCodeStarConnectionsAPI) ListConnectionsWithContext(arg0 context.Context, arg1 *codestarconnections.ListConnectionsInput, arg2 ...request.Option) (*codestarconnections.ListConnectionsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListConnectionsWithContext", varargs...)
	ret0, _ := ret[0].(*codestarconnections.ListConnectionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConnectionsWithContext indicates an expected call of ListConnectionsWithContext
func (mr *MockCodeStarConnectionsAPIMockRecorder) ListConnectionsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConnectionsWithContext", reflect.TypeOf((*MockCodeStarConnectionsAPI)(nil).ListConnectionsWithContext), varargs...)
}
