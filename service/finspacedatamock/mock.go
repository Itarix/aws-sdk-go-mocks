// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/finspacedata/finspacedataiface (interfaces: FinSpaceDataAPI)

// Package finspacedatamock is a generated GoMock package.
package finspacedatamock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	finspacedata "github.com/aws/aws-sdk-go/service/finspacedata"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFinSpaceDataAPI is a mock of FinSpaceDataAPI interface
type MockFinSpaceDataAPI struct {
	ctrl     *gomock.Controller
	recorder *MockFinSpaceDataAPIMockRecorder
}

// MockFinSpaceDataAPIMockRecorder is the mock recorder for MockFinSpaceDataAPI
type MockFinSpaceDataAPIMockRecorder struct {
	mock *MockFinSpaceDataAPI
}

// NewMockFinSpaceDataAPI creates a new mock instance
func NewMockFinSpaceDataAPI(ctrl *gomock.Controller) *MockFinSpaceDataAPI {
	mock := &MockFinSpaceDataAPI{ctrl: ctrl}
	mock.recorder = &MockFinSpaceDataAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFinSpaceDataAPI) EXPECT() *MockFinSpaceDataAPIMockRecorder {
	return m.recorder
}

// CreateChangeset mocks base method
func (m *MockFinSpaceDataAPI) CreateChangeset(arg0 *finspacedata.CreateChangesetInput) (*finspacedata.CreateChangesetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateChangeset", arg0)
	ret0, _ := ret[0].(*finspacedata.CreateChangesetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateChangeset indicates an expected call of CreateChangeset
func (mr *MockFinSpaceDataAPIMockRecorder) CreateChangeset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChangeset", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateChangeset), arg0)
}

// CreateChangesetRequest mocks base method
func (m *MockFinSpaceDataAPI) CreateChangesetRequest(arg0 *finspacedata.CreateChangesetInput) (*request.Request, *finspacedata.CreateChangesetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateChangesetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.CreateChangesetOutput)
	return ret0, ret1
}

// CreateChangesetRequest indicates an expected call of CreateChangesetRequest
func (mr *MockFinSpaceDataAPIMockRecorder) CreateChangesetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChangesetRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateChangesetRequest), arg0)
}

// CreateChangesetWithContext mocks base method
func (m *MockFinSpaceDataAPI) CreateChangesetWithContext(arg0 context.Context, arg1 *finspacedata.CreateChangesetInput, arg2 ...request.Option) (*finspacedata.CreateChangesetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateChangesetWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.CreateChangesetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateChangesetWithContext indicates an expected call of CreateChangesetWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) CreateChangesetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChangesetWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateChangesetWithContext), varargs...)
}

// CreateDataView mocks base method
func (m *MockFinSpaceDataAPI) CreateDataView(arg0 *finspacedata.CreateDataViewInput) (*finspacedata.CreateDataViewOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataView", arg0)
	ret0, _ := ret[0].(*finspacedata.CreateDataViewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataView indicates an expected call of CreateDataView
func (mr *MockFinSpaceDataAPIMockRecorder) CreateDataView(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataView", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateDataView), arg0)
}

// CreateDataViewRequest mocks base method
func (m *MockFinSpaceDataAPI) CreateDataViewRequest(arg0 *finspacedata.CreateDataViewInput) (*request.Request, *finspacedata.CreateDataViewOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataViewRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.CreateDataViewOutput)
	return ret0, ret1
}

// CreateDataViewRequest indicates an expected call of CreateDataViewRequest
func (mr *MockFinSpaceDataAPIMockRecorder) CreateDataViewRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataViewRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateDataViewRequest), arg0)
}

// CreateDataViewWithContext mocks base method
func (m *MockFinSpaceDataAPI) CreateDataViewWithContext(arg0 context.Context, arg1 *finspacedata.CreateDataViewInput, arg2 ...request.Option) (*finspacedata.CreateDataViewOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateDataViewWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.CreateDataViewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataViewWithContext indicates an expected call of CreateDataViewWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) CreateDataViewWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataViewWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateDataViewWithContext), varargs...)
}

// CreateDataset mocks base method
func (m *MockFinSpaceDataAPI) CreateDataset(arg0 *finspacedata.CreateDatasetInput) (*finspacedata.CreateDatasetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataset", arg0)
	ret0, _ := ret[0].(*finspacedata.CreateDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataset indicates an expected call of CreateDataset
func (mr *MockFinSpaceDataAPIMockRecorder) CreateDataset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataset", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateDataset), arg0)
}

// CreateDatasetRequest mocks base method
func (m *MockFinSpaceDataAPI) CreateDatasetRequest(arg0 *finspacedata.CreateDatasetInput) (*request.Request, *finspacedata.CreateDatasetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDatasetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.CreateDatasetOutput)
	return ret0, ret1
}

// CreateDatasetRequest indicates an expected call of CreateDatasetRequest
func (mr *MockFinSpaceDataAPIMockRecorder) CreateDatasetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDatasetRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateDatasetRequest), arg0)
}

// CreateDatasetWithContext mocks base method
func (m *MockFinSpaceDataAPI) CreateDatasetWithContext(arg0 context.Context, arg1 *finspacedata.CreateDatasetInput, arg2 ...request.Option) (*finspacedata.CreateDatasetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateDatasetWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.CreateDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDatasetWithContext indicates an expected call of CreateDatasetWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) CreateDatasetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDatasetWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).CreateDatasetWithContext), varargs...)
}

// DeleteDataset mocks base method
func (m *MockFinSpaceDataAPI) DeleteDataset(arg0 *finspacedata.DeleteDatasetInput) (*finspacedata.DeleteDatasetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDataset", arg0)
	ret0, _ := ret[0].(*finspacedata.DeleteDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteDataset indicates an expected call of DeleteDataset
func (mr *MockFinSpaceDataAPIMockRecorder) DeleteDataset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDataset", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).DeleteDataset), arg0)
}

// DeleteDatasetRequest mocks base method
func (m *MockFinSpaceDataAPI) DeleteDatasetRequest(arg0 *finspacedata.DeleteDatasetInput) (*request.Request, *finspacedata.DeleteDatasetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDatasetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.DeleteDatasetOutput)
	return ret0, ret1
}

// DeleteDatasetRequest indicates an expected call of DeleteDatasetRequest
func (mr *MockFinSpaceDataAPIMockRecorder) DeleteDatasetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDatasetRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).DeleteDatasetRequest), arg0)
}

// DeleteDatasetWithContext mocks base method
func (m *MockFinSpaceDataAPI) DeleteDatasetWithContext(arg0 context.Context, arg1 *finspacedata.DeleteDatasetInput, arg2 ...request.Option) (*finspacedata.DeleteDatasetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteDatasetWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.DeleteDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteDatasetWithContext indicates an expected call of DeleteDatasetWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) DeleteDatasetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDatasetWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).DeleteDatasetWithContext), varargs...)
}

// GetChangeset mocks base method
func (m *MockFinSpaceDataAPI) GetChangeset(arg0 *finspacedata.GetChangesetInput) (*finspacedata.GetChangesetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChangeset", arg0)
	ret0, _ := ret[0].(*finspacedata.GetChangesetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChangeset indicates an expected call of GetChangeset
func (mr *MockFinSpaceDataAPIMockRecorder) GetChangeset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChangeset", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetChangeset), arg0)
}

// GetChangesetRequest mocks base method
func (m *MockFinSpaceDataAPI) GetChangesetRequest(arg0 *finspacedata.GetChangesetInput) (*request.Request, *finspacedata.GetChangesetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChangesetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.GetChangesetOutput)
	return ret0, ret1
}

// GetChangesetRequest indicates an expected call of GetChangesetRequest
func (mr *MockFinSpaceDataAPIMockRecorder) GetChangesetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChangesetRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetChangesetRequest), arg0)
}

// GetChangesetWithContext mocks base method
func (m *MockFinSpaceDataAPI) GetChangesetWithContext(arg0 context.Context, arg1 *finspacedata.GetChangesetInput, arg2 ...request.Option) (*finspacedata.GetChangesetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetChangesetWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.GetChangesetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChangesetWithContext indicates an expected call of GetChangesetWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) GetChangesetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChangesetWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetChangesetWithContext), varargs...)
}

// GetDataView mocks base method
func (m *MockFinSpaceDataAPI) GetDataView(arg0 *finspacedata.GetDataViewInput) (*finspacedata.GetDataViewOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataView", arg0)
	ret0, _ := ret[0].(*finspacedata.GetDataViewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataView indicates an expected call of GetDataView
func (mr *MockFinSpaceDataAPIMockRecorder) GetDataView(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataView", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetDataView), arg0)
}

// GetDataViewRequest mocks base method
func (m *MockFinSpaceDataAPI) GetDataViewRequest(arg0 *finspacedata.GetDataViewInput) (*request.Request, *finspacedata.GetDataViewOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataViewRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.GetDataViewOutput)
	return ret0, ret1
}

// GetDataViewRequest indicates an expected call of GetDataViewRequest
func (mr *MockFinSpaceDataAPIMockRecorder) GetDataViewRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataViewRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetDataViewRequest), arg0)
}

// GetDataViewWithContext mocks base method
func (m *MockFinSpaceDataAPI) GetDataViewWithContext(arg0 context.Context, arg1 *finspacedata.GetDataViewInput, arg2 ...request.Option) (*finspacedata.GetDataViewOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDataViewWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.GetDataViewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataViewWithContext indicates an expected call of GetDataViewWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) GetDataViewWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataViewWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetDataViewWithContext), varargs...)
}

// GetDataset mocks base method
func (m *MockFinSpaceDataAPI) GetDataset(arg0 *finspacedata.GetDatasetInput) (*finspacedata.GetDatasetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataset", arg0)
	ret0, _ := ret[0].(*finspacedata.GetDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataset indicates an expected call of GetDataset
func (mr *MockFinSpaceDataAPIMockRecorder) GetDataset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataset", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetDataset), arg0)
}

// GetDatasetRequest mocks base method
func (m *MockFinSpaceDataAPI) GetDatasetRequest(arg0 *finspacedata.GetDatasetInput) (*request.Request, *finspacedata.GetDatasetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatasetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.GetDatasetOutput)
	return ret0, ret1
}

// GetDatasetRequest indicates an expected call of GetDatasetRequest
func (mr *MockFinSpaceDataAPIMockRecorder) GetDatasetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatasetRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetDatasetRequest), arg0)
}

// GetDatasetWithContext mocks base method
func (m *MockFinSpaceDataAPI) GetDatasetWithContext(arg0 context.Context, arg1 *finspacedata.GetDatasetInput, arg2 ...request.Option) (*finspacedata.GetDatasetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDatasetWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.GetDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDatasetWithContext indicates an expected call of GetDatasetWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) GetDatasetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatasetWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetDatasetWithContext), varargs...)
}

// GetProgrammaticAccessCredentials mocks base method
func (m *MockFinSpaceDataAPI) GetProgrammaticAccessCredentials(arg0 *finspacedata.GetProgrammaticAccessCredentialsInput) (*finspacedata.GetProgrammaticAccessCredentialsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProgrammaticAccessCredentials", arg0)
	ret0, _ := ret[0].(*finspacedata.GetProgrammaticAccessCredentialsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProgrammaticAccessCredentials indicates an expected call of GetProgrammaticAccessCredentials
func (mr *MockFinSpaceDataAPIMockRecorder) GetProgrammaticAccessCredentials(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProgrammaticAccessCredentials", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetProgrammaticAccessCredentials), arg0)
}

// GetProgrammaticAccessCredentialsRequest mocks base method
func (m *MockFinSpaceDataAPI) GetProgrammaticAccessCredentialsRequest(arg0 *finspacedata.GetProgrammaticAccessCredentialsInput) (*request.Request, *finspacedata.GetProgrammaticAccessCredentialsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProgrammaticAccessCredentialsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.GetProgrammaticAccessCredentialsOutput)
	return ret0, ret1
}

// GetProgrammaticAccessCredentialsRequest indicates an expected call of GetProgrammaticAccessCredentialsRequest
func (mr *MockFinSpaceDataAPIMockRecorder) GetProgrammaticAccessCredentialsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProgrammaticAccessCredentialsRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetProgrammaticAccessCredentialsRequest), arg0)
}

// GetProgrammaticAccessCredentialsWithContext mocks base method
func (m *MockFinSpaceDataAPI) GetProgrammaticAccessCredentialsWithContext(arg0 context.Context, arg1 *finspacedata.GetProgrammaticAccessCredentialsInput, arg2 ...request.Option) (*finspacedata.GetProgrammaticAccessCredentialsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetProgrammaticAccessCredentialsWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.GetProgrammaticAccessCredentialsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProgrammaticAccessCredentialsWithContext indicates an expected call of GetProgrammaticAccessCredentialsWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) GetProgrammaticAccessCredentialsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProgrammaticAccessCredentialsWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetProgrammaticAccessCredentialsWithContext), varargs...)
}

// GetWorkingLocation mocks base method
func (m *MockFinSpaceDataAPI) GetWorkingLocation(arg0 *finspacedata.GetWorkingLocationInput) (*finspacedata.GetWorkingLocationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkingLocation", arg0)
	ret0, _ := ret[0].(*finspacedata.GetWorkingLocationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkingLocation indicates an expected call of GetWorkingLocation
func (mr *MockFinSpaceDataAPIMockRecorder) GetWorkingLocation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkingLocation", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetWorkingLocation), arg0)
}

// GetWorkingLocationRequest mocks base method
func (m *MockFinSpaceDataAPI) GetWorkingLocationRequest(arg0 *finspacedata.GetWorkingLocationInput) (*request.Request, *finspacedata.GetWorkingLocationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkingLocationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.GetWorkingLocationOutput)
	return ret0, ret1
}

// GetWorkingLocationRequest indicates an expected call of GetWorkingLocationRequest
func (mr *MockFinSpaceDataAPIMockRecorder) GetWorkingLocationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkingLocationRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetWorkingLocationRequest), arg0)
}

// GetWorkingLocationWithContext mocks base method
func (m *MockFinSpaceDataAPI) GetWorkingLocationWithContext(arg0 context.Context, arg1 *finspacedata.GetWorkingLocationInput, arg2 ...request.Option) (*finspacedata.GetWorkingLocationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetWorkingLocationWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.GetWorkingLocationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkingLocationWithContext indicates an expected call of GetWorkingLocationWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) GetWorkingLocationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkingLocationWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).GetWorkingLocationWithContext), varargs...)
}

// ListChangesets mocks base method
func (m *MockFinSpaceDataAPI) ListChangesets(arg0 *finspacedata.ListChangesetsInput) (*finspacedata.ListChangesetsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListChangesets", arg0)
	ret0, _ := ret[0].(*finspacedata.ListChangesetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListChangesets indicates an expected call of ListChangesets
func (mr *MockFinSpaceDataAPIMockRecorder) ListChangesets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListChangesets", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListChangesets), arg0)
}

// ListChangesetsPages mocks base method
func (m *MockFinSpaceDataAPI) ListChangesetsPages(arg0 *finspacedata.ListChangesetsInput, arg1 func(*finspacedata.ListChangesetsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListChangesetsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListChangesetsPages indicates an expected call of ListChangesetsPages
func (mr *MockFinSpaceDataAPIMockRecorder) ListChangesetsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListChangesetsPages", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListChangesetsPages), arg0, arg1)
}

// ListChangesetsPagesWithContext mocks base method
func (m *MockFinSpaceDataAPI) ListChangesetsPagesWithContext(arg0 context.Context, arg1 *finspacedata.ListChangesetsInput, arg2 func(*finspacedata.ListChangesetsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListChangesetsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListChangesetsPagesWithContext indicates an expected call of ListChangesetsPagesWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) ListChangesetsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListChangesetsPagesWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListChangesetsPagesWithContext), varargs...)
}

// ListChangesetsRequest mocks base method
func (m *MockFinSpaceDataAPI) ListChangesetsRequest(arg0 *finspacedata.ListChangesetsInput) (*request.Request, *finspacedata.ListChangesetsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListChangesetsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.ListChangesetsOutput)
	return ret0, ret1
}

// ListChangesetsRequest indicates an expected call of ListChangesetsRequest
func (mr *MockFinSpaceDataAPIMockRecorder) ListChangesetsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListChangesetsRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListChangesetsRequest), arg0)
}

// ListChangesetsWithContext mocks base method
func (m *MockFinSpaceDataAPI) ListChangesetsWithContext(arg0 context.Context, arg1 *finspacedata.ListChangesetsInput, arg2 ...request.Option) (*finspacedata.ListChangesetsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListChangesetsWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.ListChangesetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListChangesetsWithContext indicates an expected call of ListChangesetsWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) ListChangesetsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListChangesetsWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListChangesetsWithContext), varargs...)
}

// ListDataViews mocks base method
func (m *MockFinSpaceDataAPI) ListDataViews(arg0 *finspacedata.ListDataViewsInput) (*finspacedata.ListDataViewsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDataViews", arg0)
	ret0, _ := ret[0].(*finspacedata.ListDataViewsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDataViews indicates an expected call of ListDataViews
func (mr *MockFinSpaceDataAPIMockRecorder) ListDataViews(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDataViews", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDataViews), arg0)
}

// ListDataViewsPages mocks base method
func (m *MockFinSpaceDataAPI) ListDataViewsPages(arg0 *finspacedata.ListDataViewsInput, arg1 func(*finspacedata.ListDataViewsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDataViewsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDataViewsPages indicates an expected call of ListDataViewsPages
func (mr *MockFinSpaceDataAPIMockRecorder) ListDataViewsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDataViewsPages", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDataViewsPages), arg0, arg1)
}

// ListDataViewsPagesWithContext mocks base method
func (m *MockFinSpaceDataAPI) ListDataViewsPagesWithContext(arg0 context.Context, arg1 *finspacedata.ListDataViewsInput, arg2 func(*finspacedata.ListDataViewsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDataViewsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDataViewsPagesWithContext indicates an expected call of ListDataViewsPagesWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) ListDataViewsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDataViewsPagesWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDataViewsPagesWithContext), varargs...)
}

// ListDataViewsRequest mocks base method
func (m *MockFinSpaceDataAPI) ListDataViewsRequest(arg0 *finspacedata.ListDataViewsInput) (*request.Request, *finspacedata.ListDataViewsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDataViewsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.ListDataViewsOutput)
	return ret0, ret1
}

// ListDataViewsRequest indicates an expected call of ListDataViewsRequest
func (mr *MockFinSpaceDataAPIMockRecorder) ListDataViewsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDataViewsRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDataViewsRequest), arg0)
}

// ListDataViewsWithContext mocks base method
func (m *MockFinSpaceDataAPI) ListDataViewsWithContext(arg0 context.Context, arg1 *finspacedata.ListDataViewsInput, arg2 ...request.Option) (*finspacedata.ListDataViewsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDataViewsWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.ListDataViewsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDataViewsWithContext indicates an expected call of ListDataViewsWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) ListDataViewsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDataViewsWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDataViewsWithContext), varargs...)
}

// ListDatasets mocks base method
func (m *MockFinSpaceDataAPI) ListDatasets(arg0 *finspacedata.ListDatasetsInput) (*finspacedata.ListDatasetsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDatasets", arg0)
	ret0, _ := ret[0].(*finspacedata.ListDatasetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDatasets indicates an expected call of ListDatasets
func (mr *MockFinSpaceDataAPIMockRecorder) ListDatasets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDatasets", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDatasets), arg0)
}

// ListDatasetsPages mocks base method
func (m *MockFinSpaceDataAPI) ListDatasetsPages(arg0 *finspacedata.ListDatasetsInput, arg1 func(*finspacedata.ListDatasetsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDatasetsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDatasetsPages indicates an expected call of ListDatasetsPages
func (mr *MockFinSpaceDataAPIMockRecorder) ListDatasetsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDatasetsPages", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDatasetsPages), arg0, arg1)
}

// ListDatasetsPagesWithContext mocks base method
func (m *MockFinSpaceDataAPI) ListDatasetsPagesWithContext(arg0 context.Context, arg1 *finspacedata.ListDatasetsInput, arg2 func(*finspacedata.ListDatasetsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDatasetsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDatasetsPagesWithContext indicates an expected call of ListDatasetsPagesWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) ListDatasetsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDatasetsPagesWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDatasetsPagesWithContext), varargs...)
}

// ListDatasetsRequest mocks base method
func (m *MockFinSpaceDataAPI) ListDatasetsRequest(arg0 *finspacedata.ListDatasetsInput) (*request.Request, *finspacedata.ListDatasetsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDatasetsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.ListDatasetsOutput)
	return ret0, ret1
}

// ListDatasetsRequest indicates an expected call of ListDatasetsRequest
func (mr *MockFinSpaceDataAPIMockRecorder) ListDatasetsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDatasetsRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDatasetsRequest), arg0)
}

// ListDatasetsWithContext mocks base method
func (m *MockFinSpaceDataAPI) ListDatasetsWithContext(arg0 context.Context, arg1 *finspacedata.ListDatasetsInput, arg2 ...request.Option) (*finspacedata.ListDatasetsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDatasetsWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.ListDatasetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDatasetsWithContext indicates an expected call of ListDatasetsWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) ListDatasetsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDatasetsWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).ListDatasetsWithContext), varargs...)
}

// UpdateChangeset mocks base method
func (m *MockFinSpaceDataAPI) UpdateChangeset(arg0 *finspacedata.UpdateChangesetInput) (*finspacedata.UpdateChangesetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateChangeset", arg0)
	ret0, _ := ret[0].(*finspacedata.UpdateChangesetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateChangeset indicates an expected call of UpdateChangeset
func (mr *MockFinSpaceDataAPIMockRecorder) UpdateChangeset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateChangeset", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).UpdateChangeset), arg0)
}

// UpdateChangesetRequest mocks base method
func (m *MockFinSpaceDataAPI) UpdateChangesetRequest(arg0 *finspacedata.UpdateChangesetInput) (*request.Request, *finspacedata.UpdateChangesetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateChangesetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.UpdateChangesetOutput)
	return ret0, ret1
}

// UpdateChangesetRequest indicates an expected call of UpdateChangesetRequest
func (mr *MockFinSpaceDataAPIMockRecorder) UpdateChangesetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateChangesetRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).UpdateChangesetRequest), arg0)
}

// UpdateChangesetWithContext mocks base method
func (m *MockFinSpaceDataAPI) UpdateChangesetWithContext(arg0 context.Context, arg1 *finspacedata.UpdateChangesetInput, arg2 ...request.Option) (*finspacedata.UpdateChangesetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateChangesetWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.UpdateChangesetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateChangesetWithContext indicates an expected call of UpdateChangesetWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) UpdateChangesetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateChangesetWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).UpdateChangesetWithContext), varargs...)
}

// UpdateDataset mocks base method
func (m *MockFinSpaceDataAPI) UpdateDataset(arg0 *finspacedata.UpdateDatasetInput) (*finspacedata.UpdateDatasetOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDataset", arg0)
	ret0, _ := ret[0].(*finspacedata.UpdateDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateDataset indicates an expected call of UpdateDataset
func (mr *MockFinSpaceDataAPIMockRecorder) UpdateDataset(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDataset", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).UpdateDataset), arg0)
}

// UpdateDatasetRequest mocks base method
func (m *MockFinSpaceDataAPI) UpdateDatasetRequest(arg0 *finspacedata.UpdateDatasetInput) (*request.Request, *finspacedata.UpdateDatasetOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDatasetRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*finspacedata.UpdateDatasetOutput)
	return ret0, ret1
}

// UpdateDatasetRequest indicates an expected call of UpdateDatasetRequest
func (mr *MockFinSpaceDataAPIMockRecorder) UpdateDatasetRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDatasetRequest", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).UpdateDatasetRequest), arg0)
}

// UpdateDatasetWithContext mocks base method
func (m *MockFinSpaceDataAPI) UpdateDatasetWithContext(arg0 context.Context, arg1 *finspacedata.UpdateDatasetInput, arg2 ...request.Option) (*finspacedata.UpdateDatasetOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateDatasetWithContext", varargs...)
	ret0, _ := ret[0].(*finspacedata.UpdateDatasetOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateDatasetWithContext indicates an expected call of UpdateDatasetWithContext
func (mr *MockFinSpaceDataAPIMockRecorder) UpdateDatasetWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDatasetWithContext", reflect.TypeOf((*MockFinSpaceDataAPI)(nil).UpdateDatasetWithContext), varargs...)
}
