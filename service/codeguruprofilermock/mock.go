// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/codeguruprofiler/codeguruprofileriface (interfaces: CodeGuruProfilerAPI)

// Package codeguruprofilermock is a generated GoMock package.
package codeguruprofilermock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	codeguruprofiler "github.com/aws/aws-sdk-go/service/codeguruprofiler"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCodeGuruProfilerAPI is a mock of CodeGuruProfilerAPI interface
type MockCodeGuruProfilerAPI struct {
	ctrl     *gomock.Controller
	recorder *MockCodeGuruProfilerAPIMockRecorder
}

// MockCodeGuruProfilerAPIMockRecorder is the mock recorder for MockCodeGuruProfilerAPI
type MockCodeGuruProfilerAPIMockRecorder struct {
	mock *MockCodeGuruProfilerAPI
}

// NewMockCodeGuruProfilerAPI creates a new mock instance
func NewMockCodeGuruProfilerAPI(ctrl *gomock.Controller) *MockCodeGuruProfilerAPI {
	mock := &MockCodeGuruProfilerAPI{ctrl: ctrl}
	mock.recorder = &MockCodeGuruProfilerAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCodeGuruProfilerAPI) EXPECT() *MockCodeGuruProfilerAPIMockRecorder {
	return m.recorder
}

// ConfigureAgent mocks base method
func (m *MockCodeGuruProfilerAPI) ConfigureAgent(arg0 *codeguruprofiler.ConfigureAgentInput) (*codeguruprofiler.ConfigureAgentOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigureAgent", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.ConfigureAgentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigureAgent indicates an expected call of ConfigureAgent
func (mr *MockCodeGuruProfilerAPIMockRecorder) ConfigureAgent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigureAgent", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ConfigureAgent), arg0)
}

// ConfigureAgentRequest mocks base method
func (m *MockCodeGuruProfilerAPI) ConfigureAgentRequest(arg0 *codeguruprofiler.ConfigureAgentInput) (*request.Request, *codeguruprofiler.ConfigureAgentOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigureAgentRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.ConfigureAgentOutput)
	return ret0, ret1
}

// ConfigureAgentRequest indicates an expected call of ConfigureAgentRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) ConfigureAgentRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigureAgentRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ConfigureAgentRequest), arg0)
}

// ConfigureAgentWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) ConfigureAgentWithContext(arg0 context.Context, arg1 *codeguruprofiler.ConfigureAgentInput, arg2 ...request.Option) (*codeguruprofiler.ConfigureAgentOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ConfigureAgentWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.ConfigureAgentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigureAgentWithContext indicates an expected call of ConfigureAgentWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) ConfigureAgentWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigureAgentWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ConfigureAgentWithContext), varargs...)
}

// CreateProfilingGroup mocks base method
func (m *MockCodeGuruProfilerAPI) CreateProfilingGroup(arg0 *codeguruprofiler.CreateProfilingGroupInput) (*codeguruprofiler.CreateProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfilingGroup", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.CreateProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfilingGroup indicates an expected call of CreateProfilingGroup
func (mr *MockCodeGuruProfilerAPIMockRecorder) CreateProfilingGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfilingGroup", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).CreateProfilingGroup), arg0)
}

// CreateProfilingGroupRequest mocks base method
func (m *MockCodeGuruProfilerAPI) CreateProfilingGroupRequest(arg0 *codeguruprofiler.CreateProfilingGroupInput) (*request.Request, *codeguruprofiler.CreateProfilingGroupOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfilingGroupRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.CreateProfilingGroupOutput)
	return ret0, ret1
}

// CreateProfilingGroupRequest indicates an expected call of CreateProfilingGroupRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) CreateProfilingGroupRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfilingGroupRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).CreateProfilingGroupRequest), arg0)
}

// CreateProfilingGroupWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) CreateProfilingGroupWithContext(arg0 context.Context, arg1 *codeguruprofiler.CreateProfilingGroupInput, arg2 ...request.Option) (*codeguruprofiler.CreateProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateProfilingGroupWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.CreateProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfilingGroupWithContext indicates an expected call of CreateProfilingGroupWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) CreateProfilingGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfilingGroupWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).CreateProfilingGroupWithContext), varargs...)
}

// DeleteProfilingGroup mocks base method
func (m *MockCodeGuruProfilerAPI) DeleteProfilingGroup(arg0 *codeguruprofiler.DeleteProfilingGroupInput) (*codeguruprofiler.DeleteProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProfilingGroup", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.DeleteProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteProfilingGroup indicates an expected call of DeleteProfilingGroup
func (mr *MockCodeGuruProfilerAPIMockRecorder) DeleteProfilingGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfilingGroup", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).DeleteProfilingGroup), arg0)
}

// DeleteProfilingGroupRequest mocks base method
func (m *MockCodeGuruProfilerAPI) DeleteProfilingGroupRequest(arg0 *codeguruprofiler.DeleteProfilingGroupInput) (*request.Request, *codeguruprofiler.DeleteProfilingGroupOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProfilingGroupRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.DeleteProfilingGroupOutput)
	return ret0, ret1
}

// DeleteProfilingGroupRequest indicates an expected call of DeleteProfilingGroupRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) DeleteProfilingGroupRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfilingGroupRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).DeleteProfilingGroupRequest), arg0)
}

// DeleteProfilingGroupWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) DeleteProfilingGroupWithContext(arg0 context.Context, arg1 *codeguruprofiler.DeleteProfilingGroupInput, arg2 ...request.Option) (*codeguruprofiler.DeleteProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteProfilingGroupWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.DeleteProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteProfilingGroupWithContext indicates an expected call of DeleteProfilingGroupWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) DeleteProfilingGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfilingGroupWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).DeleteProfilingGroupWithContext), varargs...)
}

// DescribeProfilingGroup mocks base method
func (m *MockCodeGuruProfilerAPI) DescribeProfilingGroup(arg0 *codeguruprofiler.DescribeProfilingGroupInput) (*codeguruprofiler.DescribeProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeProfilingGroup", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.DescribeProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeProfilingGroup indicates an expected call of DescribeProfilingGroup
func (mr *MockCodeGuruProfilerAPIMockRecorder) DescribeProfilingGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeProfilingGroup", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).DescribeProfilingGroup), arg0)
}

// DescribeProfilingGroupRequest mocks base method
func (m *MockCodeGuruProfilerAPI) DescribeProfilingGroupRequest(arg0 *codeguruprofiler.DescribeProfilingGroupInput) (*request.Request, *codeguruprofiler.DescribeProfilingGroupOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeProfilingGroupRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.DescribeProfilingGroupOutput)
	return ret0, ret1
}

// DescribeProfilingGroupRequest indicates an expected call of DescribeProfilingGroupRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) DescribeProfilingGroupRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeProfilingGroupRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).DescribeProfilingGroupRequest), arg0)
}

// DescribeProfilingGroupWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) DescribeProfilingGroupWithContext(arg0 context.Context, arg1 *codeguruprofiler.DescribeProfilingGroupInput, arg2 ...request.Option) (*codeguruprofiler.DescribeProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeProfilingGroupWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.DescribeProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeProfilingGroupWithContext indicates an expected call of DescribeProfilingGroupWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) DescribeProfilingGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeProfilingGroupWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).DescribeProfilingGroupWithContext), varargs...)
}

// GetProfile mocks base method
func (m *MockCodeGuruProfilerAPI) GetProfile(arg0 *codeguruprofiler.GetProfileInput) (*codeguruprofiler.GetProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.GetProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile
func (mr *MockCodeGuruProfilerAPIMockRecorder) GetProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).GetProfile), arg0)
}

// GetProfileRequest mocks base method
func (m *MockCodeGuruProfilerAPI) GetProfileRequest(arg0 *codeguruprofiler.GetProfileInput) (*request.Request, *codeguruprofiler.GetProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.GetProfileOutput)
	return ret0, ret1
}

// GetProfileRequest indicates an expected call of GetProfileRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) GetProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).GetProfileRequest), arg0)
}

// GetProfileWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) GetProfileWithContext(arg0 context.Context, arg1 *codeguruprofiler.GetProfileInput, arg2 ...request.Option) (*codeguruprofiler.GetProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetProfileWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.GetProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileWithContext indicates an expected call of GetProfileWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) GetProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).GetProfileWithContext), varargs...)
}

// ListProfileTimes mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfileTimes(arg0 *codeguruprofiler.ListProfileTimesInput) (*codeguruprofiler.ListProfileTimesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileTimes", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.ListProfileTimesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfileTimes indicates an expected call of ListProfileTimes
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfileTimes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileTimes", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfileTimes), arg0)
}

// ListProfileTimesPages mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfileTimesPages(arg0 *codeguruprofiler.ListProfileTimesInput, arg1 func(*codeguruprofiler.ListProfileTimesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileTimesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfileTimesPages indicates an expected call of ListProfileTimesPages
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfileTimesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileTimesPages", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfileTimesPages), arg0, arg1)
}

// ListProfileTimesPagesWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfileTimesPagesWithContext(arg0 context.Context, arg1 *codeguruprofiler.ListProfileTimesInput, arg2 func(*codeguruprofiler.ListProfileTimesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfileTimesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfileTimesPagesWithContext indicates an expected call of ListProfileTimesPagesWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfileTimesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileTimesPagesWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfileTimesPagesWithContext), varargs...)
}

// ListProfileTimesRequest mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfileTimesRequest(arg0 *codeguruprofiler.ListProfileTimesInput) (*request.Request, *codeguruprofiler.ListProfileTimesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileTimesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.ListProfileTimesOutput)
	return ret0, ret1
}

// ListProfileTimesRequest indicates an expected call of ListProfileTimesRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfileTimesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileTimesRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfileTimesRequest), arg0)
}

// ListProfileTimesWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfileTimesWithContext(arg0 context.Context, arg1 *codeguruprofiler.ListProfileTimesInput, arg2 ...request.Option) (*codeguruprofiler.ListProfileTimesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfileTimesWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.ListProfileTimesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfileTimesWithContext indicates an expected call of ListProfileTimesWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfileTimesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileTimesWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfileTimesWithContext), varargs...)
}

// ListProfilingGroups mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfilingGroups(arg0 *codeguruprofiler.ListProfilingGroupsInput) (*codeguruprofiler.ListProfilingGroupsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfilingGroups", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.ListProfilingGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfilingGroups indicates an expected call of ListProfilingGroups
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfilingGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilingGroups", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfilingGroups), arg0)
}

// ListProfilingGroupsPages mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfilingGroupsPages(arg0 *codeguruprofiler.ListProfilingGroupsInput, arg1 func(*codeguruprofiler.ListProfilingGroupsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfilingGroupsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfilingGroupsPages indicates an expected call of ListProfilingGroupsPages
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfilingGroupsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilingGroupsPages", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfilingGroupsPages), arg0, arg1)
}

// ListProfilingGroupsPagesWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfilingGroupsPagesWithContext(arg0 context.Context, arg1 *codeguruprofiler.ListProfilingGroupsInput, arg2 func(*codeguruprofiler.ListProfilingGroupsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfilingGroupsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfilingGroupsPagesWithContext indicates an expected call of ListProfilingGroupsPagesWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfilingGroupsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilingGroupsPagesWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfilingGroupsPagesWithContext), varargs...)
}

// ListProfilingGroupsRequest mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfilingGroupsRequest(arg0 *codeguruprofiler.ListProfilingGroupsInput) (*request.Request, *codeguruprofiler.ListProfilingGroupsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfilingGroupsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.ListProfilingGroupsOutput)
	return ret0, ret1
}

// ListProfilingGroupsRequest indicates an expected call of ListProfilingGroupsRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfilingGroupsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilingGroupsRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfilingGroupsRequest), arg0)
}

// ListProfilingGroupsWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) ListProfilingGroupsWithContext(arg0 context.Context, arg1 *codeguruprofiler.ListProfilingGroupsInput, arg2 ...request.Option) (*codeguruprofiler.ListProfilingGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfilingGroupsWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.ListProfilingGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfilingGroupsWithContext indicates an expected call of ListProfilingGroupsWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) ListProfilingGroupsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilingGroupsWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).ListProfilingGroupsWithContext), varargs...)
}

// PostAgentProfile mocks base method
func (m *MockCodeGuruProfilerAPI) PostAgentProfile(arg0 *codeguruprofiler.PostAgentProfileInput) (*codeguruprofiler.PostAgentProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostAgentProfile", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.PostAgentProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostAgentProfile indicates an expected call of PostAgentProfile
func (mr *MockCodeGuruProfilerAPIMockRecorder) PostAgentProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostAgentProfile", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).PostAgentProfile), arg0)
}

// PostAgentProfileRequest mocks base method
func (m *MockCodeGuruProfilerAPI) PostAgentProfileRequest(arg0 *codeguruprofiler.PostAgentProfileInput) (*request.Request, *codeguruprofiler.PostAgentProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostAgentProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.PostAgentProfileOutput)
	return ret0, ret1
}

// PostAgentProfileRequest indicates an expected call of PostAgentProfileRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) PostAgentProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostAgentProfileRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).PostAgentProfileRequest), arg0)
}

// PostAgentProfileWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) PostAgentProfileWithContext(arg0 context.Context, arg1 *codeguruprofiler.PostAgentProfileInput, arg2 ...request.Option) (*codeguruprofiler.PostAgentProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PostAgentProfileWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.PostAgentProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostAgentProfileWithContext indicates an expected call of PostAgentProfileWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) PostAgentProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostAgentProfileWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).PostAgentProfileWithContext), varargs...)
}

// UpdateProfilingGroup mocks base method
func (m *MockCodeGuruProfilerAPI) UpdateProfilingGroup(arg0 *codeguruprofiler.UpdateProfilingGroupInput) (*codeguruprofiler.UpdateProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfilingGroup", arg0)
	ret0, _ := ret[0].(*codeguruprofiler.UpdateProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfilingGroup indicates an expected call of UpdateProfilingGroup
func (mr *MockCodeGuruProfilerAPIMockRecorder) UpdateProfilingGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfilingGroup", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).UpdateProfilingGroup), arg0)
}

// UpdateProfilingGroupRequest mocks base method
func (m *MockCodeGuruProfilerAPI) UpdateProfilingGroupRequest(arg0 *codeguruprofiler.UpdateProfilingGroupInput) (*request.Request, *codeguruprofiler.UpdateProfilingGroupOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfilingGroupRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*codeguruprofiler.UpdateProfilingGroupOutput)
	return ret0, ret1
}

// UpdateProfilingGroupRequest indicates an expected call of UpdateProfilingGroupRequest
func (mr *MockCodeGuruProfilerAPIMockRecorder) UpdateProfilingGroupRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfilingGroupRequest", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).UpdateProfilingGroupRequest), arg0)
}

// UpdateProfilingGroupWithContext mocks base method
func (m *MockCodeGuruProfilerAPI) UpdateProfilingGroupWithContext(arg0 context.Context, arg1 *codeguruprofiler.UpdateProfilingGroupInput, arg2 ...request.Option) (*codeguruprofiler.UpdateProfilingGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateProfilingGroupWithContext", varargs...)
	ret0, _ := ret[0].(*codeguruprofiler.UpdateProfilingGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfilingGroupWithContext indicates an expected call of UpdateProfilingGroupWithContext
func (mr *MockCodeGuruProfilerAPIMockRecorder) UpdateProfilingGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfilingGroupWithContext", reflect.TypeOf((*MockCodeGuruProfilerAPI)(nil).UpdateProfilingGroupWithContext), varargs...)
}
