// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/pi/piiface (interfaces: PIAPI)

// Package pimock is a generated GoMock package.
package pimock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	pi "github.com/aws/aws-sdk-go/service/pi"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPIAPI is a mock of PIAPI interface
type MockPIAPI struct {
	ctrl     *gomock.Controller
	recorder *MockPIAPIMockRecorder
}

// MockPIAPIMockRecorder is the mock recorder for MockPIAPI
type MockPIAPIMockRecorder struct {
	mock *MockPIAPI
}

// NewMockPIAPI creates a new mock instance
func NewMockPIAPI(ctrl *gomock.Controller) *MockPIAPI {
	mock := &MockPIAPI{ctrl: ctrl}
	mock.recorder = &MockPIAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPIAPI) EXPECT() *MockPIAPIMockRecorder {
	return m.recorder
}

// CreatePerformanceAnalysisReport mocks base method
func (m *MockPIAPI) CreatePerformanceAnalysisReport(arg0 *pi.CreatePerformanceAnalysisReportInput) (*pi.CreatePerformanceAnalysisReportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePerformanceAnalysisReport", arg0)
	ret0, _ := ret[0].(*pi.CreatePerformanceAnalysisReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePerformanceAnalysisReport indicates an expected call of CreatePerformanceAnalysisReport
func (mr *MockPIAPIMockRecorder) CreatePerformanceAnalysisReport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePerformanceAnalysisReport", reflect.TypeOf((*MockPIAPI)(nil).CreatePerformanceAnalysisReport), arg0)
}

// CreatePerformanceAnalysisReportRequest mocks base method
func (m *MockPIAPI) CreatePerformanceAnalysisReportRequest(arg0 *pi.CreatePerformanceAnalysisReportInput) (*request.Request, *pi.CreatePerformanceAnalysisReportOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePerformanceAnalysisReportRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.CreatePerformanceAnalysisReportOutput)
	return ret0, ret1
}

// CreatePerformanceAnalysisReportRequest indicates an expected call of CreatePerformanceAnalysisReportRequest
func (mr *MockPIAPIMockRecorder) CreatePerformanceAnalysisReportRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePerformanceAnalysisReportRequest", reflect.TypeOf((*MockPIAPI)(nil).CreatePerformanceAnalysisReportRequest), arg0)
}

// CreatePerformanceAnalysisReportWithContext mocks base method
func (m *MockPIAPI) CreatePerformanceAnalysisReportWithContext(arg0 context.Context, arg1 *pi.CreatePerformanceAnalysisReportInput, arg2 ...request.Option) (*pi.CreatePerformanceAnalysisReportOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreatePerformanceAnalysisReportWithContext", varargs...)
	ret0, _ := ret[0].(*pi.CreatePerformanceAnalysisReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePerformanceAnalysisReportWithContext indicates an expected call of CreatePerformanceAnalysisReportWithContext
func (mr *MockPIAPIMockRecorder) CreatePerformanceAnalysisReportWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePerformanceAnalysisReportWithContext", reflect.TypeOf((*MockPIAPI)(nil).CreatePerformanceAnalysisReportWithContext), varargs...)
}

// DeletePerformanceAnalysisReport mocks base method
func (m *MockPIAPI) DeletePerformanceAnalysisReport(arg0 *pi.DeletePerformanceAnalysisReportInput) (*pi.DeletePerformanceAnalysisReportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePerformanceAnalysisReport", arg0)
	ret0, _ := ret[0].(*pi.DeletePerformanceAnalysisReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeletePerformanceAnalysisReport indicates an expected call of DeletePerformanceAnalysisReport
func (mr *MockPIAPIMockRecorder) DeletePerformanceAnalysisReport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePerformanceAnalysisReport", reflect.TypeOf((*MockPIAPI)(nil).DeletePerformanceAnalysisReport), arg0)
}

// DeletePerformanceAnalysisReportRequest mocks base method
func (m *MockPIAPI) DeletePerformanceAnalysisReportRequest(arg0 *pi.DeletePerformanceAnalysisReportInput) (*request.Request, *pi.DeletePerformanceAnalysisReportOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePerformanceAnalysisReportRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.DeletePerformanceAnalysisReportOutput)
	return ret0, ret1
}

// DeletePerformanceAnalysisReportRequest indicates an expected call of DeletePerformanceAnalysisReportRequest
func (mr *MockPIAPIMockRecorder) DeletePerformanceAnalysisReportRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePerformanceAnalysisReportRequest", reflect.TypeOf((*MockPIAPI)(nil).DeletePerformanceAnalysisReportRequest), arg0)
}

// DeletePerformanceAnalysisReportWithContext mocks base method
func (m *MockPIAPI) DeletePerformanceAnalysisReportWithContext(arg0 context.Context, arg1 *pi.DeletePerformanceAnalysisReportInput, arg2 ...request.Option) (*pi.DeletePerformanceAnalysisReportOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeletePerformanceAnalysisReportWithContext", varargs...)
	ret0, _ := ret[0].(*pi.DeletePerformanceAnalysisReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeletePerformanceAnalysisReportWithContext indicates an expected call of DeletePerformanceAnalysisReportWithContext
func (mr *MockPIAPIMockRecorder) DeletePerformanceAnalysisReportWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePerformanceAnalysisReportWithContext", reflect.TypeOf((*MockPIAPI)(nil).DeletePerformanceAnalysisReportWithContext), varargs...)
}

// DescribeDimensionKeys mocks base method
func (m *MockPIAPI) DescribeDimensionKeys(arg0 *pi.DescribeDimensionKeysInput) (*pi.DescribeDimensionKeysOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDimensionKeys", arg0)
	ret0, _ := ret[0].(*pi.DescribeDimensionKeysOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDimensionKeys indicates an expected call of DescribeDimensionKeys
func (mr *MockPIAPIMockRecorder) DescribeDimensionKeys(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDimensionKeys", reflect.TypeOf((*MockPIAPI)(nil).DescribeDimensionKeys), arg0)
}

// DescribeDimensionKeysPages mocks base method
func (m *MockPIAPI) DescribeDimensionKeysPages(arg0 *pi.DescribeDimensionKeysInput, arg1 func(*pi.DescribeDimensionKeysOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDimensionKeysPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeDimensionKeysPages indicates an expected call of DescribeDimensionKeysPages
func (mr *MockPIAPIMockRecorder) DescribeDimensionKeysPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDimensionKeysPages", reflect.TypeOf((*MockPIAPI)(nil).DescribeDimensionKeysPages), arg0, arg1)
}

// DescribeDimensionKeysPagesWithContext mocks base method
func (m *MockPIAPI) DescribeDimensionKeysPagesWithContext(arg0 context.Context, arg1 *pi.DescribeDimensionKeysInput, arg2 func(*pi.DescribeDimensionKeysOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeDimensionKeysPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeDimensionKeysPagesWithContext indicates an expected call of DescribeDimensionKeysPagesWithContext
func (mr *MockPIAPIMockRecorder) DescribeDimensionKeysPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDimensionKeysPagesWithContext", reflect.TypeOf((*MockPIAPI)(nil).DescribeDimensionKeysPagesWithContext), varargs...)
}

// DescribeDimensionKeysRequest mocks base method
func (m *MockPIAPI) DescribeDimensionKeysRequest(arg0 *pi.DescribeDimensionKeysInput) (*request.Request, *pi.DescribeDimensionKeysOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDimensionKeysRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.DescribeDimensionKeysOutput)
	return ret0, ret1
}

// DescribeDimensionKeysRequest indicates an expected call of DescribeDimensionKeysRequest
func (mr *MockPIAPIMockRecorder) DescribeDimensionKeysRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDimensionKeysRequest", reflect.TypeOf((*MockPIAPI)(nil).DescribeDimensionKeysRequest), arg0)
}

// DescribeDimensionKeysWithContext mocks base method
func (m *MockPIAPI) DescribeDimensionKeysWithContext(arg0 context.Context, arg1 *pi.DescribeDimensionKeysInput, arg2 ...request.Option) (*pi.DescribeDimensionKeysOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeDimensionKeysWithContext", varargs...)
	ret0, _ := ret[0].(*pi.DescribeDimensionKeysOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDimensionKeysWithContext indicates an expected call of DescribeDimensionKeysWithContext
func (mr *MockPIAPIMockRecorder) DescribeDimensionKeysWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDimensionKeysWithContext", reflect.TypeOf((*MockPIAPI)(nil).DescribeDimensionKeysWithContext), varargs...)
}

// GetDimensionKeyDetails mocks base method
func (m *MockPIAPI) GetDimensionKeyDetails(arg0 *pi.GetDimensionKeyDetailsInput) (*pi.GetDimensionKeyDetailsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDimensionKeyDetails", arg0)
	ret0, _ := ret[0].(*pi.GetDimensionKeyDetailsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDimensionKeyDetails indicates an expected call of GetDimensionKeyDetails
func (mr *MockPIAPIMockRecorder) GetDimensionKeyDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDimensionKeyDetails", reflect.TypeOf((*MockPIAPI)(nil).GetDimensionKeyDetails), arg0)
}

// GetDimensionKeyDetailsRequest mocks base method
func (m *MockPIAPI) GetDimensionKeyDetailsRequest(arg0 *pi.GetDimensionKeyDetailsInput) (*request.Request, *pi.GetDimensionKeyDetailsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDimensionKeyDetailsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.GetDimensionKeyDetailsOutput)
	return ret0, ret1
}

// GetDimensionKeyDetailsRequest indicates an expected call of GetDimensionKeyDetailsRequest
func (mr *MockPIAPIMockRecorder) GetDimensionKeyDetailsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDimensionKeyDetailsRequest", reflect.TypeOf((*MockPIAPI)(nil).GetDimensionKeyDetailsRequest), arg0)
}

// GetDimensionKeyDetailsWithContext mocks base method
func (m *MockPIAPI) GetDimensionKeyDetailsWithContext(arg0 context.Context, arg1 *pi.GetDimensionKeyDetailsInput, arg2 ...request.Option) (*pi.GetDimensionKeyDetailsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDimensionKeyDetailsWithContext", varargs...)
	ret0, _ := ret[0].(*pi.GetDimensionKeyDetailsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDimensionKeyDetailsWithContext indicates an expected call of GetDimensionKeyDetailsWithContext
func (mr *MockPIAPIMockRecorder) GetDimensionKeyDetailsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDimensionKeyDetailsWithContext", reflect.TypeOf((*MockPIAPI)(nil).GetDimensionKeyDetailsWithContext), varargs...)
}

// GetPerformanceAnalysisReport mocks base method
func (m *MockPIAPI) GetPerformanceAnalysisReport(arg0 *pi.GetPerformanceAnalysisReportInput) (*pi.GetPerformanceAnalysisReportOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPerformanceAnalysisReport", arg0)
	ret0, _ := ret[0].(*pi.GetPerformanceAnalysisReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPerformanceAnalysisReport indicates an expected call of GetPerformanceAnalysisReport
func (mr *MockPIAPIMockRecorder) GetPerformanceAnalysisReport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPerformanceAnalysisReport", reflect.TypeOf((*MockPIAPI)(nil).GetPerformanceAnalysisReport), arg0)
}

// GetPerformanceAnalysisReportRequest mocks base method
func (m *MockPIAPI) GetPerformanceAnalysisReportRequest(arg0 *pi.GetPerformanceAnalysisReportInput) (*request.Request, *pi.GetPerformanceAnalysisReportOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPerformanceAnalysisReportRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.GetPerformanceAnalysisReportOutput)
	return ret0, ret1
}

// GetPerformanceAnalysisReportRequest indicates an expected call of GetPerformanceAnalysisReportRequest
func (mr *MockPIAPIMockRecorder) GetPerformanceAnalysisReportRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPerformanceAnalysisReportRequest", reflect.TypeOf((*MockPIAPI)(nil).GetPerformanceAnalysisReportRequest), arg0)
}

// GetPerformanceAnalysisReportWithContext mocks base method
func (m *MockPIAPI) GetPerformanceAnalysisReportWithContext(arg0 context.Context, arg1 *pi.GetPerformanceAnalysisReportInput, arg2 ...request.Option) (*pi.GetPerformanceAnalysisReportOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetPerformanceAnalysisReportWithContext", varargs...)
	ret0, _ := ret[0].(*pi.GetPerformanceAnalysisReportOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPerformanceAnalysisReportWithContext indicates an expected call of GetPerformanceAnalysisReportWithContext
func (mr *MockPIAPIMockRecorder) GetPerformanceAnalysisReportWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPerformanceAnalysisReportWithContext", reflect.TypeOf((*MockPIAPI)(nil).GetPerformanceAnalysisReportWithContext), varargs...)
}

// GetResourceMetadata mocks base method
func (m *MockPIAPI) GetResourceMetadata(arg0 *pi.GetResourceMetadataInput) (*pi.GetResourceMetadataOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceMetadata", arg0)
	ret0, _ := ret[0].(*pi.GetResourceMetadataOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceMetadata indicates an expected call of GetResourceMetadata
func (mr *MockPIAPIMockRecorder) GetResourceMetadata(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetadata", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetadata), arg0)
}

// GetResourceMetadataRequest mocks base method
func (m *MockPIAPI) GetResourceMetadataRequest(arg0 *pi.GetResourceMetadataInput) (*request.Request, *pi.GetResourceMetadataOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceMetadataRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.GetResourceMetadataOutput)
	return ret0, ret1
}

// GetResourceMetadataRequest indicates an expected call of GetResourceMetadataRequest
func (mr *MockPIAPIMockRecorder) GetResourceMetadataRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetadataRequest", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetadataRequest), arg0)
}

// GetResourceMetadataWithContext mocks base method
func (m *MockPIAPI) GetResourceMetadataWithContext(arg0 context.Context, arg1 *pi.GetResourceMetadataInput, arg2 ...request.Option) (*pi.GetResourceMetadataOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourceMetadataWithContext", varargs...)
	ret0, _ := ret[0].(*pi.GetResourceMetadataOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceMetadataWithContext indicates an expected call of GetResourceMetadataWithContext
func (mr *MockPIAPIMockRecorder) GetResourceMetadataWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetadataWithContext", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetadataWithContext), varargs...)
}

// GetResourceMetrics mocks base method
func (m *MockPIAPI) GetResourceMetrics(arg0 *pi.GetResourceMetricsInput) (*pi.GetResourceMetricsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceMetrics", arg0)
	ret0, _ := ret[0].(*pi.GetResourceMetricsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceMetrics indicates an expected call of GetResourceMetrics
func (mr *MockPIAPIMockRecorder) GetResourceMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetrics", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetrics), arg0)
}

// GetResourceMetricsPages mocks base method
func (m *MockPIAPI) GetResourceMetricsPages(arg0 *pi.GetResourceMetricsInput, arg1 func(*pi.GetResourceMetricsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceMetricsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetResourceMetricsPages indicates an expected call of GetResourceMetricsPages
func (mr *MockPIAPIMockRecorder) GetResourceMetricsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetricsPages", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetricsPages), arg0, arg1)
}

// GetResourceMetricsPagesWithContext mocks base method
func (m *MockPIAPI) GetResourceMetricsPagesWithContext(arg0 context.Context, arg1 *pi.GetResourceMetricsInput, arg2 func(*pi.GetResourceMetricsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourceMetricsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetResourceMetricsPagesWithContext indicates an expected call of GetResourceMetricsPagesWithContext
func (mr *MockPIAPIMockRecorder) GetResourceMetricsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetricsPagesWithContext", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetricsPagesWithContext), varargs...)
}

// GetResourceMetricsRequest mocks base method
func (m *MockPIAPI) GetResourceMetricsRequest(arg0 *pi.GetResourceMetricsInput) (*request.Request, *pi.GetResourceMetricsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceMetricsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.GetResourceMetricsOutput)
	return ret0, ret1
}

// GetResourceMetricsRequest indicates an expected call of GetResourceMetricsRequest
func (mr *MockPIAPIMockRecorder) GetResourceMetricsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetricsRequest", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetricsRequest), arg0)
}

// GetResourceMetricsWithContext mocks base method
func (m *MockPIAPI) GetResourceMetricsWithContext(arg0 context.Context, arg1 *pi.GetResourceMetricsInput, arg2 ...request.Option) (*pi.GetResourceMetricsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourceMetricsWithContext", varargs...)
	ret0, _ := ret[0].(*pi.GetResourceMetricsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceMetricsWithContext indicates an expected call of GetResourceMetricsWithContext
func (mr *MockPIAPIMockRecorder) GetResourceMetricsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceMetricsWithContext", reflect.TypeOf((*MockPIAPI)(nil).GetResourceMetricsWithContext), varargs...)
}

// ListAvailableResourceDimensions mocks base method
func (m *MockPIAPI) ListAvailableResourceDimensions(arg0 *pi.ListAvailableResourceDimensionsInput) (*pi.ListAvailableResourceDimensionsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAvailableResourceDimensions", arg0)
	ret0, _ := ret[0].(*pi.ListAvailableResourceDimensionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAvailableResourceDimensions indicates an expected call of ListAvailableResourceDimensions
func (mr *MockPIAPIMockRecorder) ListAvailableResourceDimensions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceDimensions", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceDimensions), arg0)
}

// ListAvailableResourceDimensionsPages mocks base method
func (m *MockPIAPI) ListAvailableResourceDimensionsPages(arg0 *pi.ListAvailableResourceDimensionsInput, arg1 func(*pi.ListAvailableResourceDimensionsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAvailableResourceDimensionsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAvailableResourceDimensionsPages indicates an expected call of ListAvailableResourceDimensionsPages
func (mr *MockPIAPIMockRecorder) ListAvailableResourceDimensionsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceDimensionsPages", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceDimensionsPages), arg0, arg1)
}

// ListAvailableResourceDimensionsPagesWithContext mocks base method
func (m *MockPIAPI) ListAvailableResourceDimensionsPagesWithContext(arg0 context.Context, arg1 *pi.ListAvailableResourceDimensionsInput, arg2 func(*pi.ListAvailableResourceDimensionsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAvailableResourceDimensionsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAvailableResourceDimensionsPagesWithContext indicates an expected call of ListAvailableResourceDimensionsPagesWithContext
func (mr *MockPIAPIMockRecorder) ListAvailableResourceDimensionsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceDimensionsPagesWithContext", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceDimensionsPagesWithContext), varargs...)
}

// ListAvailableResourceDimensionsRequest mocks base method
func (m *MockPIAPI) ListAvailableResourceDimensionsRequest(arg0 *pi.ListAvailableResourceDimensionsInput) (*request.Request, *pi.ListAvailableResourceDimensionsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAvailableResourceDimensionsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.ListAvailableResourceDimensionsOutput)
	return ret0, ret1
}

// ListAvailableResourceDimensionsRequest indicates an expected call of ListAvailableResourceDimensionsRequest
func (mr *MockPIAPIMockRecorder) ListAvailableResourceDimensionsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceDimensionsRequest", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceDimensionsRequest), arg0)
}

// ListAvailableResourceDimensionsWithContext mocks base method
func (m *MockPIAPI) ListAvailableResourceDimensionsWithContext(arg0 context.Context, arg1 *pi.ListAvailableResourceDimensionsInput, arg2 ...request.Option) (*pi.ListAvailableResourceDimensionsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAvailableResourceDimensionsWithContext", varargs...)
	ret0, _ := ret[0].(*pi.ListAvailableResourceDimensionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAvailableResourceDimensionsWithContext indicates an expected call of ListAvailableResourceDimensionsWithContext
func (mr *MockPIAPIMockRecorder) ListAvailableResourceDimensionsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceDimensionsWithContext", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceDimensionsWithContext), varargs...)
}

// ListAvailableResourceMetrics mocks base method
func (m *MockPIAPI) ListAvailableResourceMetrics(arg0 *pi.ListAvailableResourceMetricsInput) (*pi.ListAvailableResourceMetricsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAvailableResourceMetrics", arg0)
	ret0, _ := ret[0].(*pi.ListAvailableResourceMetricsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAvailableResourceMetrics indicates an expected call of ListAvailableResourceMetrics
func (mr *MockPIAPIMockRecorder) ListAvailableResourceMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceMetrics", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceMetrics), arg0)
}

// ListAvailableResourceMetricsPages mocks base method
func (m *MockPIAPI) ListAvailableResourceMetricsPages(arg0 *pi.ListAvailableResourceMetricsInput, arg1 func(*pi.ListAvailableResourceMetricsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAvailableResourceMetricsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAvailableResourceMetricsPages indicates an expected call of ListAvailableResourceMetricsPages
func (mr *MockPIAPIMockRecorder) ListAvailableResourceMetricsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceMetricsPages", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceMetricsPages), arg0, arg1)
}

// ListAvailableResourceMetricsPagesWithContext mocks base method
func (m *MockPIAPI) ListAvailableResourceMetricsPagesWithContext(arg0 context.Context, arg1 *pi.ListAvailableResourceMetricsInput, arg2 func(*pi.ListAvailableResourceMetricsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAvailableResourceMetricsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAvailableResourceMetricsPagesWithContext indicates an expected call of ListAvailableResourceMetricsPagesWithContext
func (mr *MockPIAPIMockRecorder) ListAvailableResourceMetricsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceMetricsPagesWithContext", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceMetricsPagesWithContext), varargs...)
}

// ListAvailableResourceMetricsRequest mocks base method
func (m *MockPIAPI) ListAvailableResourceMetricsRequest(arg0 *pi.ListAvailableResourceMetricsInput) (*request.Request, *pi.ListAvailableResourceMetricsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAvailableResourceMetricsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.ListAvailableResourceMetricsOutput)
	return ret0, ret1
}

// ListAvailableResourceMetricsRequest indicates an expected call of ListAvailableResourceMetricsRequest
func (mr *MockPIAPIMockRecorder) ListAvailableResourceMetricsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceMetricsRequest", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceMetricsRequest), arg0)
}

// ListAvailableResourceMetricsWithContext mocks base method
func (m *MockPIAPI) ListAvailableResourceMetricsWithContext(arg0 context.Context, arg1 *pi.ListAvailableResourceMetricsInput, arg2 ...request.Option) (*pi.ListAvailableResourceMetricsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAvailableResourceMetricsWithContext", varargs...)
	ret0, _ := ret[0].(*pi.ListAvailableResourceMetricsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAvailableResourceMetricsWithContext indicates an expected call of ListAvailableResourceMetricsWithContext
func (mr *MockPIAPIMockRecorder) ListAvailableResourceMetricsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAvailableResourceMetricsWithContext", reflect.TypeOf((*MockPIAPI)(nil).ListAvailableResourceMetricsWithContext), varargs...)
}

// ListPerformanceAnalysisReports mocks base method
func (m *MockPIAPI) ListPerformanceAnalysisReports(arg0 *pi.ListPerformanceAnalysisReportsInput) (*pi.ListPerformanceAnalysisReportsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPerformanceAnalysisReports", arg0)
	ret0, _ := ret[0].(*pi.ListPerformanceAnalysisReportsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPerformanceAnalysisReports indicates an expected call of ListPerformanceAnalysisReports
func (mr *MockPIAPIMockRecorder) ListPerformanceAnalysisReports(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPerformanceAnalysisReports", reflect.TypeOf((*MockPIAPI)(nil).ListPerformanceAnalysisReports), arg0)
}

// ListPerformanceAnalysisReportsPages mocks base method
func (m *MockPIAPI) ListPerformanceAnalysisReportsPages(arg0 *pi.ListPerformanceAnalysisReportsInput, arg1 func(*pi.ListPerformanceAnalysisReportsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPerformanceAnalysisReportsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListPerformanceAnalysisReportsPages indicates an expected call of ListPerformanceAnalysisReportsPages
func (mr *MockPIAPIMockRecorder) ListPerformanceAnalysisReportsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPerformanceAnalysisReportsPages", reflect.TypeOf((*MockPIAPI)(nil).ListPerformanceAnalysisReportsPages), arg0, arg1)
}

// ListPerformanceAnalysisReportsPagesWithContext mocks base method
func (m *MockPIAPI) ListPerformanceAnalysisReportsPagesWithContext(arg0 context.Context, arg1 *pi.ListPerformanceAnalysisReportsInput, arg2 func(*pi.ListPerformanceAnalysisReportsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListPerformanceAnalysisReportsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListPerformanceAnalysisReportsPagesWithContext indicates an expected call of ListPerformanceAnalysisReportsPagesWithContext
func (mr *MockPIAPIMockRecorder) ListPerformanceAnalysisReportsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPerformanceAnalysisReportsPagesWithContext", reflect.TypeOf((*MockPIAPI)(nil).ListPerformanceAnalysisReportsPagesWithContext), varargs...)
}

// ListPerformanceAnalysisReportsRequest mocks base method
func (m *MockPIAPI) ListPerformanceAnalysisReportsRequest(arg0 *pi.ListPerformanceAnalysisReportsInput) (*request.Request, *pi.ListPerformanceAnalysisReportsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPerformanceAnalysisReportsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.ListPerformanceAnalysisReportsOutput)
	return ret0, ret1
}

// ListPerformanceAnalysisReportsRequest indicates an expected call of ListPerformanceAnalysisReportsRequest
func (mr *MockPIAPIMockRecorder) ListPerformanceAnalysisReportsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPerformanceAnalysisReportsRequest", reflect.TypeOf((*MockPIAPI)(nil).ListPerformanceAnalysisReportsRequest), arg0)
}

// ListPerformanceAnalysisReportsWithContext mocks base method
func (m *MockPIAPI) ListPerformanceAnalysisReportsWithContext(arg0 context.Context, arg1 *pi.ListPerformanceAnalysisReportsInput, arg2 ...request.Option) (*pi.ListPerformanceAnalysisReportsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListPerformanceAnalysisReportsWithContext", varargs...)
	ret0, _ := ret[0].(*pi.ListPerformanceAnalysisReportsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPerformanceAnalysisReportsWithContext indicates an expected call of ListPerformanceAnalysisReportsWithContext
func (mr *MockPIAPIMockRecorder) ListPerformanceAnalysisReportsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPerformanceAnalysisReportsWithContext", reflect.TypeOf((*MockPIAPI)(nil).ListPerformanceAnalysisReportsWithContext), varargs...)
}

// ListTagsForResource mocks base method
func (m *MockPIAPI) ListTagsForResource(arg0 *pi.ListTagsForResourceInput) (*pi.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResource", arg0)
	ret0, _ := ret[0].(*pi.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResource indicates an expected call of ListTagsForResource
func (mr *MockPIAPIMockRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResource", reflect.TypeOf((*MockPIAPI)(nil).ListTagsForResource), arg0)
}

// ListTagsForResourceRequest mocks base method
func (m *MockPIAPI) ListTagsForResourceRequest(arg0 *pi.ListTagsForResourceInput) (*request.Request, *pi.ListTagsForResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.ListTagsForResourceOutput)
	return ret0, ret1
}

// ListTagsForResourceRequest indicates an expected call of ListTagsForResourceRequest
func (mr *MockPIAPIMockRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceRequest", reflect.TypeOf((*MockPIAPI)(nil).ListTagsForResourceRequest), arg0)
}

// ListTagsForResourceWithContext mocks base method
func (m *MockPIAPI) ListTagsForResourceWithContext(arg0 context.Context, arg1 *pi.ListTagsForResourceInput, arg2 ...request.Option) (*pi.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsForResourceWithContext", varargs...)
	ret0, _ := ret[0].(*pi.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResourceWithContext indicates an expected call of ListTagsForResourceWithContext
func (mr *MockPIAPIMockRecorder) ListTagsForResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceWithContext", reflect.TypeOf((*MockPIAPI)(nil).ListTagsForResourceWithContext), varargs...)
}

// TagResource mocks base method
func (m *MockPIAPI) TagResource(arg0 *pi.TagResourceInput) (*pi.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResource", arg0)
	ret0, _ := ret[0].(*pi.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResource indicates an expected call of TagResource
func (mr *MockPIAPIMockRecorder) TagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResource", reflect.TypeOf((*MockPIAPI)(nil).TagResource), arg0)
}

// TagResourceRequest mocks base method
func (m *MockPIAPI) TagResourceRequest(arg0 *pi.TagResourceInput) (*request.Request, *pi.TagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.TagResourceOutput)
	return ret0, ret1
}

// TagResourceRequest indicates an expected call of TagResourceRequest
func (mr *MockPIAPIMockRecorder) TagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceRequest", reflect.TypeOf((*MockPIAPI)(nil).TagResourceRequest), arg0)
}

// TagResourceWithContext mocks base method
func (m *MockPIAPI) TagResourceWithContext(arg0 context.Context, arg1 *pi.TagResourceInput, arg2 ...request.Option) (*pi.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*pi.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResourceWithContext indicates an expected call of TagResourceWithContext
func (mr *MockPIAPIMockRecorder) TagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceWithContext", reflect.TypeOf((*MockPIAPI)(nil).TagResourceWithContext), varargs...)
}

// UntagResource mocks base method
func (m *MockPIAPI) UntagResource(arg0 *pi.UntagResourceInput) (*pi.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResource", arg0)
	ret0, _ := ret[0].(*pi.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResource indicates an expected call of UntagResource
func (mr *MockPIAPIMockRecorder) UntagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResource", reflect.TypeOf((*MockPIAPI)(nil).UntagResource), arg0)
}

// UntagResourceRequest mocks base method
func (m *MockPIAPI) UntagResourceRequest(arg0 *pi.UntagResourceInput) (*request.Request, *pi.UntagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*pi.UntagResourceOutput)
	return ret0, ret1
}

// UntagResourceRequest indicates an expected call of UntagResourceRequest
func (mr *MockPIAPIMockRecorder) UntagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceRequest", reflect.TypeOf((*MockPIAPI)(nil).UntagResourceRequest), arg0)
}

// UntagResourceWithContext mocks base method
func (m *MockPIAPI) UntagResourceWithContext(arg0 context.Context, arg1 *pi.UntagResourceInput, arg2 ...request.Option) (*pi.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UntagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*pi.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResourceWithContext indicates an expected call of UntagResourceWithContext
func (mr *MockPIAPIMockRecorder) UntagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceWithContext", reflect.TypeOf((*MockPIAPI)(nil).UntagResourceWithContext), varargs...)
}
