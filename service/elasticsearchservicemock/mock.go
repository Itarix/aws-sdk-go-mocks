// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/elasticsearchservice/elasticsearchserviceiface (interfaces: ElasticsearchServiceAPI)

// Package elasticsearchservicemock is a generated GoMock package.
package elasticsearchservicemock

import (
	aws "github.com/aws/aws-sdk-go/aws"
	request "github.com/aws/aws-sdk-go/aws/request"
	elasticsearchservice "github.com/aws/aws-sdk-go/service/elasticsearchservice"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockElasticsearchServiceAPI is a mock of ElasticsearchServiceAPI interface
type MockElasticsearchServiceAPI struct {
	ctrl     *gomock.Controller
	recorder *MockElasticsearchServiceAPIMockRecorder
}

// MockElasticsearchServiceAPIMockRecorder is the mock recorder for MockElasticsearchServiceAPI
type MockElasticsearchServiceAPIMockRecorder struct {
	mock *MockElasticsearchServiceAPI
}

// NewMockElasticsearchServiceAPI creates a new mock instance
func NewMockElasticsearchServiceAPI(ctrl *gomock.Controller) *MockElasticsearchServiceAPI {
	mock := &MockElasticsearchServiceAPI{ctrl: ctrl}
	mock.recorder = &MockElasticsearchServiceAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockElasticsearchServiceAPI) EXPECT() *MockElasticsearchServiceAPIMockRecorder {
	return m.recorder
}

// AddTags mocks base method
func (m *MockElasticsearchServiceAPI) AddTags(arg0 *elasticsearchservice.AddTagsInput) (*elasticsearchservice.AddTagsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTags", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.AddTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTags indicates an expected call of AddTags
func (mr *MockElasticsearchServiceAPIMockRecorder) AddTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTags", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).AddTags), arg0)
}

// AddTagsRequest mocks base method
func (m *MockElasticsearchServiceAPI) AddTagsRequest(arg0 *elasticsearchservice.AddTagsInput) (*request.Request, *elasticsearchservice.AddTagsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTagsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.AddTagsOutput)
	return ret0, ret1
}

// AddTagsRequest indicates an expected call of AddTagsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) AddTagsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTagsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).AddTagsRequest), arg0)
}

// AddTagsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) AddTagsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.AddTagsInput, arg2 ...request.Option) (*elasticsearchservice.AddTagsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AddTagsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.AddTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTagsWithContext indicates an expected call of AddTagsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) AddTagsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTagsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).AddTagsWithContext), varargs...)
}

// CancelElasticsearchServiceSoftwareUpdate mocks base method
func (m *MockElasticsearchServiceAPI) CancelElasticsearchServiceSoftwareUpdate(arg0 *elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateInput) (*elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CancelElasticsearchServiceSoftwareUpdate", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelElasticsearchServiceSoftwareUpdate indicates an expected call of CancelElasticsearchServiceSoftwareUpdate
func (mr *MockElasticsearchServiceAPIMockRecorder) CancelElasticsearchServiceSoftwareUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelElasticsearchServiceSoftwareUpdate", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).CancelElasticsearchServiceSoftwareUpdate), arg0)
}

// CancelElasticsearchServiceSoftwareUpdateRequest mocks base method
func (m *MockElasticsearchServiceAPI) CancelElasticsearchServiceSoftwareUpdateRequest(arg0 *elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateInput) (*request.Request, *elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CancelElasticsearchServiceSoftwareUpdateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateOutput)
	return ret0, ret1
}

// CancelElasticsearchServiceSoftwareUpdateRequest indicates an expected call of CancelElasticsearchServiceSoftwareUpdateRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) CancelElasticsearchServiceSoftwareUpdateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelElasticsearchServiceSoftwareUpdateRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).CancelElasticsearchServiceSoftwareUpdateRequest), arg0)
}

// CancelElasticsearchServiceSoftwareUpdateWithContext mocks base method
func (m *MockElasticsearchServiceAPI) CancelElasticsearchServiceSoftwareUpdateWithContext(arg0 aws.Context, arg1 *elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateInput, arg2 ...request.Option) (*elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CancelElasticsearchServiceSoftwareUpdateWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.CancelElasticsearchServiceSoftwareUpdateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelElasticsearchServiceSoftwareUpdateWithContext indicates an expected call of CancelElasticsearchServiceSoftwareUpdateWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) CancelElasticsearchServiceSoftwareUpdateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelElasticsearchServiceSoftwareUpdateWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).CancelElasticsearchServiceSoftwareUpdateWithContext), varargs...)
}

// CreateElasticsearchDomain mocks base method
func (m *MockElasticsearchServiceAPI) CreateElasticsearchDomain(arg0 *elasticsearchservice.CreateElasticsearchDomainInput) (*elasticsearchservice.CreateElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateElasticsearchDomain", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.CreateElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateElasticsearchDomain indicates an expected call of CreateElasticsearchDomain
func (mr *MockElasticsearchServiceAPIMockRecorder) CreateElasticsearchDomain(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateElasticsearchDomain", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).CreateElasticsearchDomain), arg0)
}

// CreateElasticsearchDomainRequest mocks base method
func (m *MockElasticsearchServiceAPI) CreateElasticsearchDomainRequest(arg0 *elasticsearchservice.CreateElasticsearchDomainInput) (*request.Request, *elasticsearchservice.CreateElasticsearchDomainOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateElasticsearchDomainRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.CreateElasticsearchDomainOutput)
	return ret0, ret1
}

// CreateElasticsearchDomainRequest indicates an expected call of CreateElasticsearchDomainRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) CreateElasticsearchDomainRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateElasticsearchDomainRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).CreateElasticsearchDomainRequest), arg0)
}

// CreateElasticsearchDomainWithContext mocks base method
func (m *MockElasticsearchServiceAPI) CreateElasticsearchDomainWithContext(arg0 aws.Context, arg1 *elasticsearchservice.CreateElasticsearchDomainInput, arg2 ...request.Option) (*elasticsearchservice.CreateElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateElasticsearchDomainWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.CreateElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateElasticsearchDomainWithContext indicates an expected call of CreateElasticsearchDomainWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) CreateElasticsearchDomainWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateElasticsearchDomainWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).CreateElasticsearchDomainWithContext), varargs...)
}

// DeleteElasticsearchDomain mocks base method
func (m *MockElasticsearchServiceAPI) DeleteElasticsearchDomain(arg0 *elasticsearchservice.DeleteElasticsearchDomainInput) (*elasticsearchservice.DeleteElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElasticsearchDomain", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DeleteElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteElasticsearchDomain indicates an expected call of DeleteElasticsearchDomain
func (mr *MockElasticsearchServiceAPIMockRecorder) DeleteElasticsearchDomain(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElasticsearchDomain", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DeleteElasticsearchDomain), arg0)
}

// DeleteElasticsearchDomainRequest mocks base method
func (m *MockElasticsearchServiceAPI) DeleteElasticsearchDomainRequest(arg0 *elasticsearchservice.DeleteElasticsearchDomainInput) (*request.Request, *elasticsearchservice.DeleteElasticsearchDomainOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElasticsearchDomainRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DeleteElasticsearchDomainOutput)
	return ret0, ret1
}

// DeleteElasticsearchDomainRequest indicates an expected call of DeleteElasticsearchDomainRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DeleteElasticsearchDomainRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElasticsearchDomainRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DeleteElasticsearchDomainRequest), arg0)
}

// DeleteElasticsearchDomainWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DeleteElasticsearchDomainWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DeleteElasticsearchDomainInput, arg2 ...request.Option) (*elasticsearchservice.DeleteElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteElasticsearchDomainWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DeleteElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteElasticsearchDomainWithContext indicates an expected call of DeleteElasticsearchDomainWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DeleteElasticsearchDomainWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElasticsearchDomainWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DeleteElasticsearchDomainWithContext), varargs...)
}

// DeleteElasticsearchServiceRole mocks base method
func (m *MockElasticsearchServiceAPI) DeleteElasticsearchServiceRole(arg0 *elasticsearchservice.DeleteElasticsearchServiceRoleInput) (*elasticsearchservice.DeleteElasticsearchServiceRoleOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElasticsearchServiceRole", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DeleteElasticsearchServiceRoleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteElasticsearchServiceRole indicates an expected call of DeleteElasticsearchServiceRole
func (mr *MockElasticsearchServiceAPIMockRecorder) DeleteElasticsearchServiceRole(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElasticsearchServiceRole", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DeleteElasticsearchServiceRole), arg0)
}

// DeleteElasticsearchServiceRoleRequest mocks base method
func (m *MockElasticsearchServiceAPI) DeleteElasticsearchServiceRoleRequest(arg0 *elasticsearchservice.DeleteElasticsearchServiceRoleInput) (*request.Request, *elasticsearchservice.DeleteElasticsearchServiceRoleOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElasticsearchServiceRoleRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DeleteElasticsearchServiceRoleOutput)
	return ret0, ret1
}

// DeleteElasticsearchServiceRoleRequest indicates an expected call of DeleteElasticsearchServiceRoleRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DeleteElasticsearchServiceRoleRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElasticsearchServiceRoleRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DeleteElasticsearchServiceRoleRequest), arg0)
}

// DeleteElasticsearchServiceRoleWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DeleteElasticsearchServiceRoleWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DeleteElasticsearchServiceRoleInput, arg2 ...request.Option) (*elasticsearchservice.DeleteElasticsearchServiceRoleOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteElasticsearchServiceRoleWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DeleteElasticsearchServiceRoleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteElasticsearchServiceRoleWithContext indicates an expected call of DeleteElasticsearchServiceRoleWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DeleteElasticsearchServiceRoleWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElasticsearchServiceRoleWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DeleteElasticsearchServiceRoleWithContext), varargs...)
}

// DescribeElasticsearchDomain mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomain(arg0 *elasticsearchservice.DescribeElasticsearchDomainInput) (*elasticsearchservice.DescribeElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomain", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchDomain indicates an expected call of DescribeElasticsearchDomain
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomain(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomain", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomain), arg0)
}

// DescribeElasticsearchDomainConfig mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomainConfig(arg0 *elasticsearchservice.DescribeElasticsearchDomainConfigInput) (*elasticsearchservice.DescribeElasticsearchDomainConfigOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomainConfig", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchDomainConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchDomainConfig indicates an expected call of DescribeElasticsearchDomainConfig
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomainConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomainConfig", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomainConfig), arg0)
}

// DescribeElasticsearchDomainConfigRequest mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomainConfigRequest(arg0 *elasticsearchservice.DescribeElasticsearchDomainConfigInput) (*request.Request, *elasticsearchservice.DescribeElasticsearchDomainConfigOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomainConfigRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DescribeElasticsearchDomainConfigOutput)
	return ret0, ret1
}

// DescribeElasticsearchDomainConfigRequest indicates an expected call of DescribeElasticsearchDomainConfigRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomainConfigRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomainConfigRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomainConfigRequest), arg0)
}

// DescribeElasticsearchDomainConfigWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomainConfigWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeElasticsearchDomainConfigInput, arg2 ...request.Option) (*elasticsearchservice.DescribeElasticsearchDomainConfigOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomainConfigWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchDomainConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchDomainConfigWithContext indicates an expected call of DescribeElasticsearchDomainConfigWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomainConfigWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomainConfigWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomainConfigWithContext), varargs...)
}

// DescribeElasticsearchDomainRequest mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomainRequest(arg0 *elasticsearchservice.DescribeElasticsearchDomainInput) (*request.Request, *elasticsearchservice.DescribeElasticsearchDomainOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomainRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DescribeElasticsearchDomainOutput)
	return ret0, ret1
}

// DescribeElasticsearchDomainRequest indicates an expected call of DescribeElasticsearchDomainRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomainRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomainRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomainRequest), arg0)
}

// DescribeElasticsearchDomainWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomainWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeElasticsearchDomainInput, arg2 ...request.Option) (*elasticsearchservice.DescribeElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomainWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchDomainWithContext indicates an expected call of DescribeElasticsearchDomainWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomainWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomainWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomainWithContext), varargs...)
}

// DescribeElasticsearchDomains mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomains(arg0 *elasticsearchservice.DescribeElasticsearchDomainsInput) (*elasticsearchservice.DescribeElasticsearchDomainsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomains", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchDomainsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchDomains indicates an expected call of DescribeElasticsearchDomains
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomains(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomains", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomains), arg0)
}

// DescribeElasticsearchDomainsRequest mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomainsRequest(arg0 *elasticsearchservice.DescribeElasticsearchDomainsInput) (*request.Request, *elasticsearchservice.DescribeElasticsearchDomainsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomainsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DescribeElasticsearchDomainsOutput)
	return ret0, ret1
}

// DescribeElasticsearchDomainsRequest indicates an expected call of DescribeElasticsearchDomainsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomainsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomainsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomainsRequest), arg0)
}

// DescribeElasticsearchDomainsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchDomainsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeElasticsearchDomainsInput, arg2 ...request.Option) (*elasticsearchservice.DescribeElasticsearchDomainsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeElasticsearchDomainsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchDomainsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchDomainsWithContext indicates an expected call of DescribeElasticsearchDomainsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchDomainsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchDomainsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchDomainsWithContext), varargs...)
}

// DescribeElasticsearchInstanceTypeLimits mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchInstanceTypeLimits(arg0 *elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsInput) (*elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchInstanceTypeLimits", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchInstanceTypeLimits indicates an expected call of DescribeElasticsearchInstanceTypeLimits
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchInstanceTypeLimits(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchInstanceTypeLimits", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchInstanceTypeLimits), arg0)
}

// DescribeElasticsearchInstanceTypeLimitsRequest mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchInstanceTypeLimitsRequest(arg0 *elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsInput) (*request.Request, *elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeElasticsearchInstanceTypeLimitsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsOutput)
	return ret0, ret1
}

// DescribeElasticsearchInstanceTypeLimitsRequest indicates an expected call of DescribeElasticsearchInstanceTypeLimitsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchInstanceTypeLimitsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchInstanceTypeLimitsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchInstanceTypeLimitsRequest), arg0)
}

// DescribeElasticsearchInstanceTypeLimitsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeElasticsearchInstanceTypeLimitsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsInput, arg2 ...request.Option) (*elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeElasticsearchInstanceTypeLimitsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeElasticsearchInstanceTypeLimitsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeElasticsearchInstanceTypeLimitsWithContext indicates an expected call of DescribeElasticsearchInstanceTypeLimitsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeElasticsearchInstanceTypeLimitsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeElasticsearchInstanceTypeLimitsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeElasticsearchInstanceTypeLimitsWithContext), varargs...)
}

// DescribeReservedElasticsearchInstanceOfferings mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstanceOfferings(arg0 *elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsInput) (*elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstanceOfferings", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeReservedElasticsearchInstanceOfferings indicates an expected call of DescribeReservedElasticsearchInstanceOfferings
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstanceOfferings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstanceOfferings", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstanceOfferings), arg0)
}

// DescribeReservedElasticsearchInstanceOfferingsPages mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstanceOfferingsPages(arg0 *elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsInput, arg1 func(*elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstanceOfferingsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeReservedElasticsearchInstanceOfferingsPages indicates an expected call of DescribeReservedElasticsearchInstanceOfferingsPages
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstanceOfferingsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstanceOfferingsPages", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstanceOfferingsPages), arg0, arg1)
}

// DescribeReservedElasticsearchInstanceOfferingsPagesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstanceOfferingsPagesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsInput, arg2 func(*elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstanceOfferingsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeReservedElasticsearchInstanceOfferingsPagesWithContext indicates an expected call of DescribeReservedElasticsearchInstanceOfferingsPagesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstanceOfferingsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstanceOfferingsPagesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstanceOfferingsPagesWithContext), varargs...)
}

// DescribeReservedElasticsearchInstanceOfferingsRequest mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstanceOfferingsRequest(arg0 *elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsInput) (*request.Request, *elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstanceOfferingsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput)
	return ret0, ret1
}

// DescribeReservedElasticsearchInstanceOfferingsRequest indicates an expected call of DescribeReservedElasticsearchInstanceOfferingsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstanceOfferingsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstanceOfferingsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstanceOfferingsRequest), arg0)
}

// DescribeReservedElasticsearchInstanceOfferingsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstanceOfferingsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsInput, arg2 ...request.Option) (*elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstanceOfferingsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeReservedElasticsearchInstanceOfferingsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeReservedElasticsearchInstanceOfferingsWithContext indicates an expected call of DescribeReservedElasticsearchInstanceOfferingsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstanceOfferingsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstanceOfferingsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstanceOfferingsWithContext), varargs...)
}

// DescribeReservedElasticsearchInstances mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstances(arg0 *elasticsearchservice.DescribeReservedElasticsearchInstancesInput) (*elasticsearchservice.DescribeReservedElasticsearchInstancesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstances", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeReservedElasticsearchInstancesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeReservedElasticsearchInstances indicates an expected call of DescribeReservedElasticsearchInstances
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstances", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstances), arg0)
}

// DescribeReservedElasticsearchInstancesPages mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstancesPages(arg0 *elasticsearchservice.DescribeReservedElasticsearchInstancesInput, arg1 func(*elasticsearchservice.DescribeReservedElasticsearchInstancesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstancesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeReservedElasticsearchInstancesPages indicates an expected call of DescribeReservedElasticsearchInstancesPages
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstancesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstancesPages", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstancesPages), arg0, arg1)
}

// DescribeReservedElasticsearchInstancesPagesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstancesPagesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeReservedElasticsearchInstancesInput, arg2 func(*elasticsearchservice.DescribeReservedElasticsearchInstancesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstancesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeReservedElasticsearchInstancesPagesWithContext indicates an expected call of DescribeReservedElasticsearchInstancesPagesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstancesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstancesPagesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstancesPagesWithContext), varargs...)
}

// DescribeReservedElasticsearchInstancesRequest mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstancesRequest(arg0 *elasticsearchservice.DescribeReservedElasticsearchInstancesInput) (*request.Request, *elasticsearchservice.DescribeReservedElasticsearchInstancesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstancesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.DescribeReservedElasticsearchInstancesOutput)
	return ret0, ret1
}

// DescribeReservedElasticsearchInstancesRequest indicates an expected call of DescribeReservedElasticsearchInstancesRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstancesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstancesRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstancesRequest), arg0)
}

// DescribeReservedElasticsearchInstancesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) DescribeReservedElasticsearchInstancesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.DescribeReservedElasticsearchInstancesInput, arg2 ...request.Option) (*elasticsearchservice.DescribeReservedElasticsearchInstancesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeReservedElasticsearchInstancesWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.DescribeReservedElasticsearchInstancesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeReservedElasticsearchInstancesWithContext indicates an expected call of DescribeReservedElasticsearchInstancesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) DescribeReservedElasticsearchInstancesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeReservedElasticsearchInstancesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).DescribeReservedElasticsearchInstancesWithContext), varargs...)
}

// GetCompatibleElasticsearchVersions mocks base method
func (m *MockElasticsearchServiceAPI) GetCompatibleElasticsearchVersions(arg0 *elasticsearchservice.GetCompatibleElasticsearchVersionsInput) (*elasticsearchservice.GetCompatibleElasticsearchVersionsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompatibleElasticsearchVersions", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.GetCompatibleElasticsearchVersionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCompatibleElasticsearchVersions indicates an expected call of GetCompatibleElasticsearchVersions
func (mr *MockElasticsearchServiceAPIMockRecorder) GetCompatibleElasticsearchVersions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompatibleElasticsearchVersions", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetCompatibleElasticsearchVersions), arg0)
}

// GetCompatibleElasticsearchVersionsRequest mocks base method
func (m *MockElasticsearchServiceAPI) GetCompatibleElasticsearchVersionsRequest(arg0 *elasticsearchservice.GetCompatibleElasticsearchVersionsInput) (*request.Request, *elasticsearchservice.GetCompatibleElasticsearchVersionsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompatibleElasticsearchVersionsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.GetCompatibleElasticsearchVersionsOutput)
	return ret0, ret1
}

// GetCompatibleElasticsearchVersionsRequest indicates an expected call of GetCompatibleElasticsearchVersionsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) GetCompatibleElasticsearchVersionsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompatibleElasticsearchVersionsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetCompatibleElasticsearchVersionsRequest), arg0)
}

// GetCompatibleElasticsearchVersionsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) GetCompatibleElasticsearchVersionsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.GetCompatibleElasticsearchVersionsInput, arg2 ...request.Option) (*elasticsearchservice.GetCompatibleElasticsearchVersionsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetCompatibleElasticsearchVersionsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.GetCompatibleElasticsearchVersionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCompatibleElasticsearchVersionsWithContext indicates an expected call of GetCompatibleElasticsearchVersionsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) GetCompatibleElasticsearchVersionsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompatibleElasticsearchVersionsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetCompatibleElasticsearchVersionsWithContext), varargs...)
}

// GetUpgradeHistory mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeHistory(arg0 *elasticsearchservice.GetUpgradeHistoryInput) (*elasticsearchservice.GetUpgradeHistoryOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUpgradeHistory", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.GetUpgradeHistoryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUpgradeHistory indicates an expected call of GetUpgradeHistory
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeHistory", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeHistory), arg0)
}

// GetUpgradeHistoryPages mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeHistoryPages(arg0 *elasticsearchservice.GetUpgradeHistoryInput, arg1 func(*elasticsearchservice.GetUpgradeHistoryOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUpgradeHistoryPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetUpgradeHistoryPages indicates an expected call of GetUpgradeHistoryPages
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeHistoryPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeHistoryPages", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeHistoryPages), arg0, arg1)
}

// GetUpgradeHistoryPagesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeHistoryPagesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.GetUpgradeHistoryInput, arg2 func(*elasticsearchservice.GetUpgradeHistoryOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetUpgradeHistoryPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetUpgradeHistoryPagesWithContext indicates an expected call of GetUpgradeHistoryPagesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeHistoryPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeHistoryPagesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeHistoryPagesWithContext), varargs...)
}

// GetUpgradeHistoryRequest mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeHistoryRequest(arg0 *elasticsearchservice.GetUpgradeHistoryInput) (*request.Request, *elasticsearchservice.GetUpgradeHistoryOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUpgradeHistoryRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.GetUpgradeHistoryOutput)
	return ret0, ret1
}

// GetUpgradeHistoryRequest indicates an expected call of GetUpgradeHistoryRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeHistoryRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeHistoryRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeHistoryRequest), arg0)
}

// GetUpgradeHistoryWithContext mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeHistoryWithContext(arg0 aws.Context, arg1 *elasticsearchservice.GetUpgradeHistoryInput, arg2 ...request.Option) (*elasticsearchservice.GetUpgradeHistoryOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetUpgradeHistoryWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.GetUpgradeHistoryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUpgradeHistoryWithContext indicates an expected call of GetUpgradeHistoryWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeHistoryWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeHistoryWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeHistoryWithContext), varargs...)
}

// GetUpgradeStatus mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeStatus(arg0 *elasticsearchservice.GetUpgradeStatusInput) (*elasticsearchservice.GetUpgradeStatusOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUpgradeStatus", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.GetUpgradeStatusOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUpgradeStatus indicates an expected call of GetUpgradeStatus
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeStatus", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeStatus), arg0)
}

// GetUpgradeStatusRequest mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeStatusRequest(arg0 *elasticsearchservice.GetUpgradeStatusInput) (*request.Request, *elasticsearchservice.GetUpgradeStatusOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUpgradeStatusRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.GetUpgradeStatusOutput)
	return ret0, ret1
}

// GetUpgradeStatusRequest indicates an expected call of GetUpgradeStatusRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeStatusRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeStatusRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeStatusRequest), arg0)
}

// GetUpgradeStatusWithContext mocks base method
func (m *MockElasticsearchServiceAPI) GetUpgradeStatusWithContext(arg0 aws.Context, arg1 *elasticsearchservice.GetUpgradeStatusInput, arg2 ...request.Option) (*elasticsearchservice.GetUpgradeStatusOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetUpgradeStatusWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.GetUpgradeStatusOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUpgradeStatusWithContext indicates an expected call of GetUpgradeStatusWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) GetUpgradeStatusWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpgradeStatusWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).GetUpgradeStatusWithContext), varargs...)
}

// ListDomainNames mocks base method
func (m *MockElasticsearchServiceAPI) ListDomainNames(arg0 *elasticsearchservice.ListDomainNamesInput) (*elasticsearchservice.ListDomainNamesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDomainNames", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.ListDomainNamesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDomainNames indicates an expected call of ListDomainNames
func (mr *MockElasticsearchServiceAPIMockRecorder) ListDomainNames(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDomainNames", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListDomainNames), arg0)
}

// ListDomainNamesRequest mocks base method
func (m *MockElasticsearchServiceAPI) ListDomainNamesRequest(arg0 *elasticsearchservice.ListDomainNamesInput) (*request.Request, *elasticsearchservice.ListDomainNamesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDomainNamesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.ListDomainNamesOutput)
	return ret0, ret1
}

// ListDomainNamesRequest indicates an expected call of ListDomainNamesRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) ListDomainNamesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDomainNamesRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListDomainNamesRequest), arg0)
}

// ListDomainNamesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) ListDomainNamesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.ListDomainNamesInput, arg2 ...request.Option) (*elasticsearchservice.ListDomainNamesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDomainNamesWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.ListDomainNamesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDomainNamesWithContext indicates an expected call of ListDomainNamesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) ListDomainNamesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDomainNamesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListDomainNamesWithContext), varargs...)
}

// ListElasticsearchInstanceTypes mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchInstanceTypes(arg0 *elasticsearchservice.ListElasticsearchInstanceTypesInput) (*elasticsearchservice.ListElasticsearchInstanceTypesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListElasticsearchInstanceTypes", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.ListElasticsearchInstanceTypesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListElasticsearchInstanceTypes indicates an expected call of ListElasticsearchInstanceTypes
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchInstanceTypes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchInstanceTypes", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchInstanceTypes), arg0)
}

// ListElasticsearchInstanceTypesPages mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchInstanceTypesPages(arg0 *elasticsearchservice.ListElasticsearchInstanceTypesInput, arg1 func(*elasticsearchservice.ListElasticsearchInstanceTypesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListElasticsearchInstanceTypesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListElasticsearchInstanceTypesPages indicates an expected call of ListElasticsearchInstanceTypesPages
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchInstanceTypesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchInstanceTypesPages", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchInstanceTypesPages), arg0, arg1)
}

// ListElasticsearchInstanceTypesPagesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchInstanceTypesPagesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.ListElasticsearchInstanceTypesInput, arg2 func(*elasticsearchservice.ListElasticsearchInstanceTypesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListElasticsearchInstanceTypesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListElasticsearchInstanceTypesPagesWithContext indicates an expected call of ListElasticsearchInstanceTypesPagesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchInstanceTypesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchInstanceTypesPagesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchInstanceTypesPagesWithContext), varargs...)
}

// ListElasticsearchInstanceTypesRequest mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchInstanceTypesRequest(arg0 *elasticsearchservice.ListElasticsearchInstanceTypesInput) (*request.Request, *elasticsearchservice.ListElasticsearchInstanceTypesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListElasticsearchInstanceTypesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.ListElasticsearchInstanceTypesOutput)
	return ret0, ret1
}

// ListElasticsearchInstanceTypesRequest indicates an expected call of ListElasticsearchInstanceTypesRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchInstanceTypesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchInstanceTypesRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchInstanceTypesRequest), arg0)
}

// ListElasticsearchInstanceTypesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchInstanceTypesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.ListElasticsearchInstanceTypesInput, arg2 ...request.Option) (*elasticsearchservice.ListElasticsearchInstanceTypesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListElasticsearchInstanceTypesWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.ListElasticsearchInstanceTypesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListElasticsearchInstanceTypesWithContext indicates an expected call of ListElasticsearchInstanceTypesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchInstanceTypesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchInstanceTypesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchInstanceTypesWithContext), varargs...)
}

// ListElasticsearchVersions mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchVersions(arg0 *elasticsearchservice.ListElasticsearchVersionsInput) (*elasticsearchservice.ListElasticsearchVersionsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListElasticsearchVersions", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.ListElasticsearchVersionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListElasticsearchVersions indicates an expected call of ListElasticsearchVersions
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchVersions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchVersions", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchVersions), arg0)
}

// ListElasticsearchVersionsPages mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchVersionsPages(arg0 *elasticsearchservice.ListElasticsearchVersionsInput, arg1 func(*elasticsearchservice.ListElasticsearchVersionsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListElasticsearchVersionsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListElasticsearchVersionsPages indicates an expected call of ListElasticsearchVersionsPages
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchVersionsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchVersionsPages", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchVersionsPages), arg0, arg1)
}

// ListElasticsearchVersionsPagesWithContext mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchVersionsPagesWithContext(arg0 aws.Context, arg1 *elasticsearchservice.ListElasticsearchVersionsInput, arg2 func(*elasticsearchservice.ListElasticsearchVersionsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListElasticsearchVersionsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListElasticsearchVersionsPagesWithContext indicates an expected call of ListElasticsearchVersionsPagesWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchVersionsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchVersionsPagesWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchVersionsPagesWithContext), varargs...)
}

// ListElasticsearchVersionsRequest mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchVersionsRequest(arg0 *elasticsearchservice.ListElasticsearchVersionsInput) (*request.Request, *elasticsearchservice.ListElasticsearchVersionsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListElasticsearchVersionsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.ListElasticsearchVersionsOutput)
	return ret0, ret1
}

// ListElasticsearchVersionsRequest indicates an expected call of ListElasticsearchVersionsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchVersionsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchVersionsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchVersionsRequest), arg0)
}

// ListElasticsearchVersionsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) ListElasticsearchVersionsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.ListElasticsearchVersionsInput, arg2 ...request.Option) (*elasticsearchservice.ListElasticsearchVersionsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListElasticsearchVersionsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.ListElasticsearchVersionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListElasticsearchVersionsWithContext indicates an expected call of ListElasticsearchVersionsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) ListElasticsearchVersionsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListElasticsearchVersionsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListElasticsearchVersionsWithContext), varargs...)
}

// ListTags mocks base method
func (m *MockElasticsearchServiceAPI) ListTags(arg0 *elasticsearchservice.ListTagsInput) (*elasticsearchservice.ListTagsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTags", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.ListTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTags indicates an expected call of ListTags
func (mr *MockElasticsearchServiceAPIMockRecorder) ListTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTags", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListTags), arg0)
}

// ListTagsRequest mocks base method
func (m *MockElasticsearchServiceAPI) ListTagsRequest(arg0 *elasticsearchservice.ListTagsInput) (*request.Request, *elasticsearchservice.ListTagsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.ListTagsOutput)
	return ret0, ret1
}

// ListTagsRequest indicates an expected call of ListTagsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) ListTagsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListTagsRequest), arg0)
}

// ListTagsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) ListTagsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.ListTagsInput, arg2 ...request.Option) (*elasticsearchservice.ListTagsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.ListTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsWithContext indicates an expected call of ListTagsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) ListTagsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).ListTagsWithContext), varargs...)
}

// PurchaseReservedElasticsearchInstanceOffering mocks base method
func (m *MockElasticsearchServiceAPI) PurchaseReservedElasticsearchInstanceOffering(arg0 *elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingInput) (*elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PurchaseReservedElasticsearchInstanceOffering", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PurchaseReservedElasticsearchInstanceOffering indicates an expected call of PurchaseReservedElasticsearchInstanceOffering
func (mr *MockElasticsearchServiceAPIMockRecorder) PurchaseReservedElasticsearchInstanceOffering(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PurchaseReservedElasticsearchInstanceOffering", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).PurchaseReservedElasticsearchInstanceOffering), arg0)
}

// PurchaseReservedElasticsearchInstanceOfferingRequest mocks base method
func (m *MockElasticsearchServiceAPI) PurchaseReservedElasticsearchInstanceOfferingRequest(arg0 *elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingInput) (*request.Request, *elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PurchaseReservedElasticsearchInstanceOfferingRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingOutput)
	return ret0, ret1
}

// PurchaseReservedElasticsearchInstanceOfferingRequest indicates an expected call of PurchaseReservedElasticsearchInstanceOfferingRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) PurchaseReservedElasticsearchInstanceOfferingRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PurchaseReservedElasticsearchInstanceOfferingRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).PurchaseReservedElasticsearchInstanceOfferingRequest), arg0)
}

// PurchaseReservedElasticsearchInstanceOfferingWithContext mocks base method
func (m *MockElasticsearchServiceAPI) PurchaseReservedElasticsearchInstanceOfferingWithContext(arg0 aws.Context, arg1 *elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingInput, arg2 ...request.Option) (*elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PurchaseReservedElasticsearchInstanceOfferingWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.PurchaseReservedElasticsearchInstanceOfferingOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PurchaseReservedElasticsearchInstanceOfferingWithContext indicates an expected call of PurchaseReservedElasticsearchInstanceOfferingWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) PurchaseReservedElasticsearchInstanceOfferingWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PurchaseReservedElasticsearchInstanceOfferingWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).PurchaseReservedElasticsearchInstanceOfferingWithContext), varargs...)
}

// RemoveTags mocks base method
func (m *MockElasticsearchServiceAPI) RemoveTags(arg0 *elasticsearchservice.RemoveTagsInput) (*elasticsearchservice.RemoveTagsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTags", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.RemoveTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemoveTags indicates an expected call of RemoveTags
func (mr *MockElasticsearchServiceAPIMockRecorder) RemoveTags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTags", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).RemoveTags), arg0)
}

// RemoveTagsRequest mocks base method
func (m *MockElasticsearchServiceAPI) RemoveTagsRequest(arg0 *elasticsearchservice.RemoveTagsInput) (*request.Request, *elasticsearchservice.RemoveTagsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTagsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.RemoveTagsOutput)
	return ret0, ret1
}

// RemoveTagsRequest indicates an expected call of RemoveTagsRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) RemoveTagsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTagsRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).RemoveTagsRequest), arg0)
}

// RemoveTagsWithContext mocks base method
func (m *MockElasticsearchServiceAPI) RemoveTagsWithContext(arg0 aws.Context, arg1 *elasticsearchservice.RemoveTagsInput, arg2 ...request.Option) (*elasticsearchservice.RemoveTagsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RemoveTagsWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.RemoveTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemoveTagsWithContext indicates an expected call of RemoveTagsWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) RemoveTagsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTagsWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).RemoveTagsWithContext), varargs...)
}

// StartElasticsearchServiceSoftwareUpdate mocks base method
func (m *MockElasticsearchServiceAPI) StartElasticsearchServiceSoftwareUpdate(arg0 *elasticsearchservice.StartElasticsearchServiceSoftwareUpdateInput) (*elasticsearchservice.StartElasticsearchServiceSoftwareUpdateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartElasticsearchServiceSoftwareUpdate", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.StartElasticsearchServiceSoftwareUpdateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartElasticsearchServiceSoftwareUpdate indicates an expected call of StartElasticsearchServiceSoftwareUpdate
func (mr *MockElasticsearchServiceAPIMockRecorder) StartElasticsearchServiceSoftwareUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartElasticsearchServiceSoftwareUpdate", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).StartElasticsearchServiceSoftwareUpdate), arg0)
}

// StartElasticsearchServiceSoftwareUpdateRequest mocks base method
func (m *MockElasticsearchServiceAPI) StartElasticsearchServiceSoftwareUpdateRequest(arg0 *elasticsearchservice.StartElasticsearchServiceSoftwareUpdateInput) (*request.Request, *elasticsearchservice.StartElasticsearchServiceSoftwareUpdateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartElasticsearchServiceSoftwareUpdateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.StartElasticsearchServiceSoftwareUpdateOutput)
	return ret0, ret1
}

// StartElasticsearchServiceSoftwareUpdateRequest indicates an expected call of StartElasticsearchServiceSoftwareUpdateRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) StartElasticsearchServiceSoftwareUpdateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartElasticsearchServiceSoftwareUpdateRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).StartElasticsearchServiceSoftwareUpdateRequest), arg0)
}

// StartElasticsearchServiceSoftwareUpdateWithContext mocks base method
func (m *MockElasticsearchServiceAPI) StartElasticsearchServiceSoftwareUpdateWithContext(arg0 aws.Context, arg1 *elasticsearchservice.StartElasticsearchServiceSoftwareUpdateInput, arg2 ...request.Option) (*elasticsearchservice.StartElasticsearchServiceSoftwareUpdateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartElasticsearchServiceSoftwareUpdateWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.StartElasticsearchServiceSoftwareUpdateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartElasticsearchServiceSoftwareUpdateWithContext indicates an expected call of StartElasticsearchServiceSoftwareUpdateWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) StartElasticsearchServiceSoftwareUpdateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartElasticsearchServiceSoftwareUpdateWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).StartElasticsearchServiceSoftwareUpdateWithContext), varargs...)
}

// UpdateElasticsearchDomainConfig mocks base method
func (m *MockElasticsearchServiceAPI) UpdateElasticsearchDomainConfig(arg0 *elasticsearchservice.UpdateElasticsearchDomainConfigInput) (*elasticsearchservice.UpdateElasticsearchDomainConfigOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateElasticsearchDomainConfig", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.UpdateElasticsearchDomainConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateElasticsearchDomainConfig indicates an expected call of UpdateElasticsearchDomainConfig
func (mr *MockElasticsearchServiceAPIMockRecorder) UpdateElasticsearchDomainConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateElasticsearchDomainConfig", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).UpdateElasticsearchDomainConfig), arg0)
}

// UpdateElasticsearchDomainConfigRequest mocks base method
func (m *MockElasticsearchServiceAPI) UpdateElasticsearchDomainConfigRequest(arg0 *elasticsearchservice.UpdateElasticsearchDomainConfigInput) (*request.Request, *elasticsearchservice.UpdateElasticsearchDomainConfigOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateElasticsearchDomainConfigRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.UpdateElasticsearchDomainConfigOutput)
	return ret0, ret1
}

// UpdateElasticsearchDomainConfigRequest indicates an expected call of UpdateElasticsearchDomainConfigRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) UpdateElasticsearchDomainConfigRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateElasticsearchDomainConfigRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).UpdateElasticsearchDomainConfigRequest), arg0)
}

// UpdateElasticsearchDomainConfigWithContext mocks base method
func (m *MockElasticsearchServiceAPI) UpdateElasticsearchDomainConfigWithContext(arg0 aws.Context, arg1 *elasticsearchservice.UpdateElasticsearchDomainConfigInput, arg2 ...request.Option) (*elasticsearchservice.UpdateElasticsearchDomainConfigOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateElasticsearchDomainConfigWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.UpdateElasticsearchDomainConfigOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateElasticsearchDomainConfigWithContext indicates an expected call of UpdateElasticsearchDomainConfigWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) UpdateElasticsearchDomainConfigWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateElasticsearchDomainConfigWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).UpdateElasticsearchDomainConfigWithContext), varargs...)
}

// UpgradeElasticsearchDomain mocks base method
func (m *MockElasticsearchServiceAPI) UpgradeElasticsearchDomain(arg0 *elasticsearchservice.UpgradeElasticsearchDomainInput) (*elasticsearchservice.UpgradeElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpgradeElasticsearchDomain", arg0)
	ret0, _ := ret[0].(*elasticsearchservice.UpgradeElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpgradeElasticsearchDomain indicates an expected call of UpgradeElasticsearchDomain
func (mr *MockElasticsearchServiceAPIMockRecorder) UpgradeElasticsearchDomain(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeElasticsearchDomain", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).UpgradeElasticsearchDomain), arg0)
}

// UpgradeElasticsearchDomainRequest mocks base method
func (m *MockElasticsearchServiceAPI) UpgradeElasticsearchDomainRequest(arg0 *elasticsearchservice.UpgradeElasticsearchDomainInput) (*request.Request, *elasticsearchservice.UpgradeElasticsearchDomainOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpgradeElasticsearchDomainRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elasticsearchservice.UpgradeElasticsearchDomainOutput)
	return ret0, ret1
}

// UpgradeElasticsearchDomainRequest indicates an expected call of UpgradeElasticsearchDomainRequest
func (mr *MockElasticsearchServiceAPIMockRecorder) UpgradeElasticsearchDomainRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeElasticsearchDomainRequest", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).UpgradeElasticsearchDomainRequest), arg0)
}

// UpgradeElasticsearchDomainWithContext mocks base method
func (m *MockElasticsearchServiceAPI) UpgradeElasticsearchDomainWithContext(arg0 aws.Context, arg1 *elasticsearchservice.UpgradeElasticsearchDomainInput, arg2 ...request.Option) (*elasticsearchservice.UpgradeElasticsearchDomainOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpgradeElasticsearchDomainWithContext", varargs...)
	ret0, _ := ret[0].(*elasticsearchservice.UpgradeElasticsearchDomainOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpgradeElasticsearchDomainWithContext indicates an expected call of UpgradeElasticsearchDomainWithContext
func (mr *MockElasticsearchServiceAPIMockRecorder) UpgradeElasticsearchDomainWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeElasticsearchDomainWithContext", reflect.TypeOf((*MockElasticsearchServiceAPI)(nil).UpgradeElasticsearchDomainWithContext), varargs...)
}
