// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/privatenetworks/privatenetworksiface (interfaces: PrivateNetworksAPI)

// Package privatenetworksmock is a generated GoMock package.
package privatenetworksmock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	privatenetworks "github.com/aws/aws-sdk-go/service/privatenetworks"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPrivateNetworksAPI is a mock of PrivateNetworksAPI interface
type MockPrivateNetworksAPI struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateNetworksAPIMockRecorder
}

// MockPrivateNetworksAPIMockRecorder is the mock recorder for MockPrivateNetworksAPI
type MockPrivateNetworksAPIMockRecorder struct {
	mock *MockPrivateNetworksAPI
}

// NewMockPrivateNetworksAPI creates a new mock instance
func NewMockPrivateNetworksAPI(ctrl *gomock.Controller) *MockPrivateNetworksAPI {
	mock := &MockPrivateNetworksAPI{ctrl: ctrl}
	mock.recorder = &MockPrivateNetworksAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateNetworksAPI) EXPECT() *MockPrivateNetworksAPIMockRecorder {
	return m.recorder
}

// AcknowledgeOrderReceipt mocks base method
func (m *MockPrivateNetworksAPI) AcknowledgeOrderReceipt(arg0 *privatenetworks.AcknowledgeOrderReceiptInput) (*privatenetworks.AcknowledgeOrderReceiptOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AcknowledgeOrderReceipt", arg0)
	ret0, _ := ret[0].(*privatenetworks.AcknowledgeOrderReceiptOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AcknowledgeOrderReceipt indicates an expected call of AcknowledgeOrderReceipt
func (mr *MockPrivateNetworksAPIMockRecorder) AcknowledgeOrderReceipt(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcknowledgeOrderReceipt", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).AcknowledgeOrderReceipt), arg0)
}

// AcknowledgeOrderReceiptRequest mocks base method
func (m *MockPrivateNetworksAPI) AcknowledgeOrderReceiptRequest(arg0 *privatenetworks.AcknowledgeOrderReceiptInput) (*request.Request, *privatenetworks.AcknowledgeOrderReceiptOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AcknowledgeOrderReceiptRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.AcknowledgeOrderReceiptOutput)
	return ret0, ret1
}

// AcknowledgeOrderReceiptRequest indicates an expected call of AcknowledgeOrderReceiptRequest
func (mr *MockPrivateNetworksAPIMockRecorder) AcknowledgeOrderReceiptRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcknowledgeOrderReceiptRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).AcknowledgeOrderReceiptRequest), arg0)
}

// AcknowledgeOrderReceiptWithContext mocks base method
func (m *MockPrivateNetworksAPI) AcknowledgeOrderReceiptWithContext(arg0 context.Context, arg1 *privatenetworks.AcknowledgeOrderReceiptInput, arg2 ...request.Option) (*privatenetworks.AcknowledgeOrderReceiptOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AcknowledgeOrderReceiptWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.AcknowledgeOrderReceiptOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AcknowledgeOrderReceiptWithContext indicates an expected call of AcknowledgeOrderReceiptWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) AcknowledgeOrderReceiptWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcknowledgeOrderReceiptWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).AcknowledgeOrderReceiptWithContext), varargs...)
}

// ActivateDeviceIdentifier mocks base method
func (m *MockPrivateNetworksAPI) ActivateDeviceIdentifier(arg0 *privatenetworks.ActivateDeviceIdentifierInput) (*privatenetworks.ActivateDeviceIdentifierOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ActivateDeviceIdentifier", arg0)
	ret0, _ := ret[0].(*privatenetworks.ActivateDeviceIdentifierOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActivateDeviceIdentifier indicates an expected call of ActivateDeviceIdentifier
func (mr *MockPrivateNetworksAPIMockRecorder) ActivateDeviceIdentifier(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActivateDeviceIdentifier", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ActivateDeviceIdentifier), arg0)
}

// ActivateDeviceIdentifierRequest mocks base method
func (m *MockPrivateNetworksAPI) ActivateDeviceIdentifierRequest(arg0 *privatenetworks.ActivateDeviceIdentifierInput) (*request.Request, *privatenetworks.ActivateDeviceIdentifierOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ActivateDeviceIdentifierRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ActivateDeviceIdentifierOutput)
	return ret0, ret1
}

// ActivateDeviceIdentifierRequest indicates an expected call of ActivateDeviceIdentifierRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ActivateDeviceIdentifierRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActivateDeviceIdentifierRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ActivateDeviceIdentifierRequest), arg0)
}

// ActivateDeviceIdentifierWithContext mocks base method
func (m *MockPrivateNetworksAPI) ActivateDeviceIdentifierWithContext(arg0 context.Context, arg1 *privatenetworks.ActivateDeviceIdentifierInput, arg2 ...request.Option) (*privatenetworks.ActivateDeviceIdentifierOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ActivateDeviceIdentifierWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ActivateDeviceIdentifierOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActivateDeviceIdentifierWithContext indicates an expected call of ActivateDeviceIdentifierWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ActivateDeviceIdentifierWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActivateDeviceIdentifierWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ActivateDeviceIdentifierWithContext), varargs...)
}

// ActivateNetworkSite mocks base method
func (m *MockPrivateNetworksAPI) ActivateNetworkSite(arg0 *privatenetworks.ActivateNetworkSiteInput) (*privatenetworks.ActivateNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ActivateNetworkSite", arg0)
	ret0, _ := ret[0].(*privatenetworks.ActivateNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActivateNetworkSite indicates an expected call of ActivateNetworkSite
func (mr *MockPrivateNetworksAPIMockRecorder) ActivateNetworkSite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActivateNetworkSite", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ActivateNetworkSite), arg0)
}

// ActivateNetworkSiteRequest mocks base method
func (m *MockPrivateNetworksAPI) ActivateNetworkSiteRequest(arg0 *privatenetworks.ActivateNetworkSiteInput) (*request.Request, *privatenetworks.ActivateNetworkSiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ActivateNetworkSiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ActivateNetworkSiteOutput)
	return ret0, ret1
}

// ActivateNetworkSiteRequest indicates an expected call of ActivateNetworkSiteRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ActivateNetworkSiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActivateNetworkSiteRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ActivateNetworkSiteRequest), arg0)
}

// ActivateNetworkSiteWithContext mocks base method
func (m *MockPrivateNetworksAPI) ActivateNetworkSiteWithContext(arg0 context.Context, arg1 *privatenetworks.ActivateNetworkSiteInput, arg2 ...request.Option) (*privatenetworks.ActivateNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ActivateNetworkSiteWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ActivateNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActivateNetworkSiteWithContext indicates an expected call of ActivateNetworkSiteWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ActivateNetworkSiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActivateNetworkSiteWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ActivateNetworkSiteWithContext), varargs...)
}

// ConfigureAccessPoint mocks base method
func (m *MockPrivateNetworksAPI) ConfigureAccessPoint(arg0 *privatenetworks.ConfigureAccessPointInput) (*privatenetworks.ConfigureAccessPointOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigureAccessPoint", arg0)
	ret0, _ := ret[0].(*privatenetworks.ConfigureAccessPointOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigureAccessPoint indicates an expected call of ConfigureAccessPoint
func (mr *MockPrivateNetworksAPIMockRecorder) ConfigureAccessPoint(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigureAccessPoint", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ConfigureAccessPoint), arg0)
}

// ConfigureAccessPointRequest mocks base method
func (m *MockPrivateNetworksAPI) ConfigureAccessPointRequest(arg0 *privatenetworks.ConfigureAccessPointInput) (*request.Request, *privatenetworks.ConfigureAccessPointOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigureAccessPointRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ConfigureAccessPointOutput)
	return ret0, ret1
}

// ConfigureAccessPointRequest indicates an expected call of ConfigureAccessPointRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ConfigureAccessPointRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigureAccessPointRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ConfigureAccessPointRequest), arg0)
}

// ConfigureAccessPointWithContext mocks base method
func (m *MockPrivateNetworksAPI) ConfigureAccessPointWithContext(arg0 context.Context, arg1 *privatenetworks.ConfigureAccessPointInput, arg2 ...request.Option) (*privatenetworks.ConfigureAccessPointOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ConfigureAccessPointWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ConfigureAccessPointOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigureAccessPointWithContext indicates an expected call of ConfigureAccessPointWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ConfigureAccessPointWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigureAccessPointWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ConfigureAccessPointWithContext), varargs...)
}

// CreateNetwork mocks base method
func (m *MockPrivateNetworksAPI) CreateNetwork(arg0 *privatenetworks.CreateNetworkInput) (*privatenetworks.CreateNetworkOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNetwork", arg0)
	ret0, _ := ret[0].(*privatenetworks.CreateNetworkOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNetwork indicates an expected call of CreateNetwork
func (mr *MockPrivateNetworksAPIMockRecorder) CreateNetwork(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetwork", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).CreateNetwork), arg0)
}

// CreateNetworkRequest mocks base method
func (m *MockPrivateNetworksAPI) CreateNetworkRequest(arg0 *privatenetworks.CreateNetworkInput) (*request.Request, *privatenetworks.CreateNetworkOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNetworkRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.CreateNetworkOutput)
	return ret0, ret1
}

// CreateNetworkRequest indicates an expected call of CreateNetworkRequest
func (mr *MockPrivateNetworksAPIMockRecorder) CreateNetworkRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetworkRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).CreateNetworkRequest), arg0)
}

// CreateNetworkSite mocks base method
func (m *MockPrivateNetworksAPI) CreateNetworkSite(arg0 *privatenetworks.CreateNetworkSiteInput) (*privatenetworks.CreateNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNetworkSite", arg0)
	ret0, _ := ret[0].(*privatenetworks.CreateNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNetworkSite indicates an expected call of CreateNetworkSite
func (mr *MockPrivateNetworksAPIMockRecorder) CreateNetworkSite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetworkSite", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).CreateNetworkSite), arg0)
}

// CreateNetworkSiteRequest mocks base method
func (m *MockPrivateNetworksAPI) CreateNetworkSiteRequest(arg0 *privatenetworks.CreateNetworkSiteInput) (*request.Request, *privatenetworks.CreateNetworkSiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNetworkSiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.CreateNetworkSiteOutput)
	return ret0, ret1
}

// CreateNetworkSiteRequest indicates an expected call of CreateNetworkSiteRequest
func (mr *MockPrivateNetworksAPIMockRecorder) CreateNetworkSiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetworkSiteRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).CreateNetworkSiteRequest), arg0)
}

// CreateNetworkSiteWithContext mocks base method
func (m *MockPrivateNetworksAPI) CreateNetworkSiteWithContext(arg0 context.Context, arg1 *privatenetworks.CreateNetworkSiteInput, arg2 ...request.Option) (*privatenetworks.CreateNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateNetworkSiteWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.CreateNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNetworkSiteWithContext indicates an expected call of CreateNetworkSiteWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) CreateNetworkSiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetworkSiteWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).CreateNetworkSiteWithContext), varargs...)
}

// CreateNetworkWithContext mocks base method
func (m *MockPrivateNetworksAPI) CreateNetworkWithContext(arg0 context.Context, arg1 *privatenetworks.CreateNetworkInput, arg2 ...request.Option) (*privatenetworks.CreateNetworkOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateNetworkWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.CreateNetworkOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNetworkWithContext indicates an expected call of CreateNetworkWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) CreateNetworkWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetworkWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).CreateNetworkWithContext), varargs...)
}

// DeactivateDeviceIdentifier mocks base method
func (m *MockPrivateNetworksAPI) DeactivateDeviceIdentifier(arg0 *privatenetworks.DeactivateDeviceIdentifierInput) (*privatenetworks.DeactivateDeviceIdentifierOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeactivateDeviceIdentifier", arg0)
	ret0, _ := ret[0].(*privatenetworks.DeactivateDeviceIdentifierOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeactivateDeviceIdentifier indicates an expected call of DeactivateDeviceIdentifier
func (mr *MockPrivateNetworksAPIMockRecorder) DeactivateDeviceIdentifier(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeactivateDeviceIdentifier", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeactivateDeviceIdentifier), arg0)
}

// DeactivateDeviceIdentifierRequest mocks base method
func (m *MockPrivateNetworksAPI) DeactivateDeviceIdentifierRequest(arg0 *privatenetworks.DeactivateDeviceIdentifierInput) (*request.Request, *privatenetworks.DeactivateDeviceIdentifierOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeactivateDeviceIdentifierRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.DeactivateDeviceIdentifierOutput)
	return ret0, ret1
}

// DeactivateDeviceIdentifierRequest indicates an expected call of DeactivateDeviceIdentifierRequest
func (mr *MockPrivateNetworksAPIMockRecorder) DeactivateDeviceIdentifierRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeactivateDeviceIdentifierRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeactivateDeviceIdentifierRequest), arg0)
}

// DeactivateDeviceIdentifierWithContext mocks base method
func (m *MockPrivateNetworksAPI) DeactivateDeviceIdentifierWithContext(arg0 context.Context, arg1 *privatenetworks.DeactivateDeviceIdentifierInput, arg2 ...request.Option) (*privatenetworks.DeactivateDeviceIdentifierOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeactivateDeviceIdentifierWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.DeactivateDeviceIdentifierOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeactivateDeviceIdentifierWithContext indicates an expected call of DeactivateDeviceIdentifierWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) DeactivateDeviceIdentifierWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeactivateDeviceIdentifierWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeactivateDeviceIdentifierWithContext), varargs...)
}

// DeleteNetwork mocks base method
func (m *MockPrivateNetworksAPI) DeleteNetwork(arg0 *privatenetworks.DeleteNetworkInput) (*privatenetworks.DeleteNetworkOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetwork", arg0)
	ret0, _ := ret[0].(*privatenetworks.DeleteNetworkOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteNetwork indicates an expected call of DeleteNetwork
func (mr *MockPrivateNetworksAPIMockRecorder) DeleteNetwork(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetwork", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeleteNetwork), arg0)
}

// DeleteNetworkRequest mocks base method
func (m *MockPrivateNetworksAPI) DeleteNetworkRequest(arg0 *privatenetworks.DeleteNetworkInput) (*request.Request, *privatenetworks.DeleteNetworkOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.DeleteNetworkOutput)
	return ret0, ret1
}

// DeleteNetworkRequest indicates an expected call of DeleteNetworkRequest
func (mr *MockPrivateNetworksAPIMockRecorder) DeleteNetworkRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeleteNetworkRequest), arg0)
}

// DeleteNetworkSite mocks base method
func (m *MockPrivateNetworksAPI) DeleteNetworkSite(arg0 *privatenetworks.DeleteNetworkSiteInput) (*privatenetworks.DeleteNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkSite", arg0)
	ret0, _ := ret[0].(*privatenetworks.DeleteNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteNetworkSite indicates an expected call of DeleteNetworkSite
func (mr *MockPrivateNetworksAPIMockRecorder) DeleteNetworkSite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkSite", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeleteNetworkSite), arg0)
}

// DeleteNetworkSiteRequest mocks base method
func (m *MockPrivateNetworksAPI) DeleteNetworkSiteRequest(arg0 *privatenetworks.DeleteNetworkSiteInput) (*request.Request, *privatenetworks.DeleteNetworkSiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkSiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.DeleteNetworkSiteOutput)
	return ret0, ret1
}

// DeleteNetworkSiteRequest indicates an expected call of DeleteNetworkSiteRequest
func (mr *MockPrivateNetworksAPIMockRecorder) DeleteNetworkSiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkSiteRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeleteNetworkSiteRequest), arg0)
}

// DeleteNetworkSiteWithContext mocks base method
func (m *MockPrivateNetworksAPI) DeleteNetworkSiteWithContext(arg0 context.Context, arg1 *privatenetworks.DeleteNetworkSiteInput, arg2 ...request.Option) (*privatenetworks.DeleteNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteNetworkSiteWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.DeleteNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteNetworkSiteWithContext indicates an expected call of DeleteNetworkSiteWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) DeleteNetworkSiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkSiteWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeleteNetworkSiteWithContext), varargs...)
}

// DeleteNetworkWithContext mocks base method
func (m *MockPrivateNetworksAPI) DeleteNetworkWithContext(arg0 context.Context, arg1 *privatenetworks.DeleteNetworkInput, arg2 ...request.Option) (*privatenetworks.DeleteNetworkOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteNetworkWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.DeleteNetworkOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteNetworkWithContext indicates an expected call of DeleteNetworkWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) DeleteNetworkWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).DeleteNetworkWithContext), varargs...)
}

// GetDeviceIdentifier mocks base method
func (m *MockPrivateNetworksAPI) GetDeviceIdentifier(arg0 *privatenetworks.GetDeviceIdentifierInput) (*privatenetworks.GetDeviceIdentifierOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceIdentifier", arg0)
	ret0, _ := ret[0].(*privatenetworks.GetDeviceIdentifierOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeviceIdentifier indicates an expected call of GetDeviceIdentifier
func (mr *MockPrivateNetworksAPIMockRecorder) GetDeviceIdentifier(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceIdentifier", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetDeviceIdentifier), arg0)
}

// GetDeviceIdentifierRequest mocks base method
func (m *MockPrivateNetworksAPI) GetDeviceIdentifierRequest(arg0 *privatenetworks.GetDeviceIdentifierInput) (*request.Request, *privatenetworks.GetDeviceIdentifierOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceIdentifierRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.GetDeviceIdentifierOutput)
	return ret0, ret1
}

// GetDeviceIdentifierRequest indicates an expected call of GetDeviceIdentifierRequest
func (mr *MockPrivateNetworksAPIMockRecorder) GetDeviceIdentifierRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceIdentifierRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetDeviceIdentifierRequest), arg0)
}

// GetDeviceIdentifierWithContext mocks base method
func (m *MockPrivateNetworksAPI) GetDeviceIdentifierWithContext(arg0 context.Context, arg1 *privatenetworks.GetDeviceIdentifierInput, arg2 ...request.Option) (*privatenetworks.GetDeviceIdentifierOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDeviceIdentifierWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.GetDeviceIdentifierOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeviceIdentifierWithContext indicates an expected call of GetDeviceIdentifierWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) GetDeviceIdentifierWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceIdentifierWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetDeviceIdentifierWithContext), varargs...)
}

// GetNetwork mocks base method
func (m *MockPrivateNetworksAPI) GetNetwork(arg0 *privatenetworks.GetNetworkInput) (*privatenetworks.GetNetworkOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetwork", arg0)
	ret0, _ := ret[0].(*privatenetworks.GetNetworkOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetwork indicates an expected call of GetNetwork
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetwork(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetwork", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetwork), arg0)
}

// GetNetworkRequest mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkRequest(arg0 *privatenetworks.GetNetworkInput) (*request.Request, *privatenetworks.GetNetworkOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.GetNetworkOutput)
	return ret0, ret1
}

// GetNetworkRequest indicates an expected call of GetNetworkRequest
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkRequest), arg0)
}

// GetNetworkResource mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkResource(arg0 *privatenetworks.GetNetworkResourceInput) (*privatenetworks.GetNetworkResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkResource", arg0)
	ret0, _ := ret[0].(*privatenetworks.GetNetworkResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkResource indicates an expected call of GetNetworkResource
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkResource", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkResource), arg0)
}

// GetNetworkResourceRequest mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkResourceRequest(arg0 *privatenetworks.GetNetworkResourceInput) (*request.Request, *privatenetworks.GetNetworkResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.GetNetworkResourceOutput)
	return ret0, ret1
}

// GetNetworkResourceRequest indicates an expected call of GetNetworkResourceRequest
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkResourceRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkResourceRequest), arg0)
}

// GetNetworkResourceWithContext mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkResourceWithContext(arg0 context.Context, arg1 *privatenetworks.GetNetworkResourceInput, arg2 ...request.Option) (*privatenetworks.GetNetworkResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetNetworkResourceWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.GetNetworkResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkResourceWithContext indicates an expected call of GetNetworkResourceWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkResourceWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkResourceWithContext), varargs...)
}

// GetNetworkSite mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkSite(arg0 *privatenetworks.GetNetworkSiteInput) (*privatenetworks.GetNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkSite", arg0)
	ret0, _ := ret[0].(*privatenetworks.GetNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkSite indicates an expected call of GetNetworkSite
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkSite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkSite", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkSite), arg0)
}

// GetNetworkSiteRequest mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkSiteRequest(arg0 *privatenetworks.GetNetworkSiteInput) (*request.Request, *privatenetworks.GetNetworkSiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkSiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.GetNetworkSiteOutput)
	return ret0, ret1
}

// GetNetworkSiteRequest indicates an expected call of GetNetworkSiteRequest
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkSiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkSiteRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkSiteRequest), arg0)
}

// GetNetworkSiteWithContext mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkSiteWithContext(arg0 context.Context, arg1 *privatenetworks.GetNetworkSiteInput, arg2 ...request.Option) (*privatenetworks.GetNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetNetworkSiteWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.GetNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkSiteWithContext indicates an expected call of GetNetworkSiteWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkSiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkSiteWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkSiteWithContext), varargs...)
}

// GetNetworkWithContext mocks base method
func (m *MockPrivateNetworksAPI) GetNetworkWithContext(arg0 context.Context, arg1 *privatenetworks.GetNetworkInput, arg2 ...request.Option) (*privatenetworks.GetNetworkOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetNetworkWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.GetNetworkOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkWithContext indicates an expected call of GetNetworkWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) GetNetworkWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetNetworkWithContext), varargs...)
}

// GetOrder mocks base method
func (m *MockPrivateNetworksAPI) GetOrder(arg0 *privatenetworks.GetOrderInput) (*privatenetworks.GetOrderOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", arg0)
	ret0, _ := ret[0].(*privatenetworks.GetOrderOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder
func (mr *MockPrivateNetworksAPIMockRecorder) GetOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetOrder), arg0)
}

// GetOrderRequest mocks base method
func (m *MockPrivateNetworksAPI) GetOrderRequest(arg0 *privatenetworks.GetOrderInput) (*request.Request, *privatenetworks.GetOrderOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.GetOrderOutput)
	return ret0, ret1
}

// GetOrderRequest indicates an expected call of GetOrderRequest
func (mr *MockPrivateNetworksAPIMockRecorder) GetOrderRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetOrderRequest), arg0)
}

// GetOrderWithContext mocks base method
func (m *MockPrivateNetworksAPI) GetOrderWithContext(arg0 context.Context, arg1 *privatenetworks.GetOrderInput, arg2 ...request.Option) (*privatenetworks.GetOrderOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetOrderWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.GetOrderOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderWithContext indicates an expected call of GetOrderWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) GetOrderWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).GetOrderWithContext), varargs...)
}

// ListDeviceIdentifiers mocks base method
func (m *MockPrivateNetworksAPI) ListDeviceIdentifiers(arg0 *privatenetworks.ListDeviceIdentifiersInput) (*privatenetworks.ListDeviceIdentifiersOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDeviceIdentifiers", arg0)
	ret0, _ := ret[0].(*privatenetworks.ListDeviceIdentifiersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDeviceIdentifiers indicates an expected call of ListDeviceIdentifiers
func (mr *MockPrivateNetworksAPIMockRecorder) ListDeviceIdentifiers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeviceIdentifiers", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListDeviceIdentifiers), arg0)
}

// ListDeviceIdentifiersPages mocks base method
func (m *MockPrivateNetworksAPI) ListDeviceIdentifiersPages(arg0 *privatenetworks.ListDeviceIdentifiersInput, arg1 func(*privatenetworks.ListDeviceIdentifiersOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDeviceIdentifiersPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDeviceIdentifiersPages indicates an expected call of ListDeviceIdentifiersPages
func (mr *MockPrivateNetworksAPIMockRecorder) ListDeviceIdentifiersPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeviceIdentifiersPages", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListDeviceIdentifiersPages), arg0, arg1)
}

// ListDeviceIdentifiersPagesWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListDeviceIdentifiersPagesWithContext(arg0 context.Context, arg1 *privatenetworks.ListDeviceIdentifiersInput, arg2 func(*privatenetworks.ListDeviceIdentifiersOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDeviceIdentifiersPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDeviceIdentifiersPagesWithContext indicates an expected call of ListDeviceIdentifiersPagesWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListDeviceIdentifiersPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeviceIdentifiersPagesWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListDeviceIdentifiersPagesWithContext), varargs...)
}

// ListDeviceIdentifiersRequest mocks base method
func (m *MockPrivateNetworksAPI) ListDeviceIdentifiersRequest(arg0 *privatenetworks.ListDeviceIdentifiersInput) (*request.Request, *privatenetworks.ListDeviceIdentifiersOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDeviceIdentifiersRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ListDeviceIdentifiersOutput)
	return ret0, ret1
}

// ListDeviceIdentifiersRequest indicates an expected call of ListDeviceIdentifiersRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ListDeviceIdentifiersRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeviceIdentifiersRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListDeviceIdentifiersRequest), arg0)
}

// ListDeviceIdentifiersWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListDeviceIdentifiersWithContext(arg0 context.Context, arg1 *privatenetworks.ListDeviceIdentifiersInput, arg2 ...request.Option) (*privatenetworks.ListDeviceIdentifiersOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDeviceIdentifiersWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ListDeviceIdentifiersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDeviceIdentifiersWithContext indicates an expected call of ListDeviceIdentifiersWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListDeviceIdentifiersWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeviceIdentifiersWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListDeviceIdentifiersWithContext), varargs...)
}

// ListNetworkResources mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkResources(arg0 *privatenetworks.ListNetworkResourcesInput) (*privatenetworks.ListNetworkResourcesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkResources", arg0)
	ret0, _ := ret[0].(*privatenetworks.ListNetworkResourcesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworkResources indicates an expected call of ListNetworkResources
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkResources(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkResources", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkResources), arg0)
}

// ListNetworkResourcesPages mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkResourcesPages(arg0 *privatenetworks.ListNetworkResourcesInput, arg1 func(*privatenetworks.ListNetworkResourcesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkResourcesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNetworkResourcesPages indicates an expected call of ListNetworkResourcesPages
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkResourcesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkResourcesPages", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkResourcesPages), arg0, arg1)
}

// ListNetworkResourcesPagesWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkResourcesPagesWithContext(arg0 context.Context, arg1 *privatenetworks.ListNetworkResourcesInput, arg2 func(*privatenetworks.ListNetworkResourcesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNetworkResourcesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNetworkResourcesPagesWithContext indicates an expected call of ListNetworkResourcesPagesWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkResourcesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkResourcesPagesWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkResourcesPagesWithContext), varargs...)
}

// ListNetworkResourcesRequest mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkResourcesRequest(arg0 *privatenetworks.ListNetworkResourcesInput) (*request.Request, *privatenetworks.ListNetworkResourcesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkResourcesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ListNetworkResourcesOutput)
	return ret0, ret1
}

// ListNetworkResourcesRequest indicates an expected call of ListNetworkResourcesRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkResourcesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkResourcesRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkResourcesRequest), arg0)
}

// ListNetworkResourcesWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkResourcesWithContext(arg0 context.Context, arg1 *privatenetworks.ListNetworkResourcesInput, arg2 ...request.Option) (*privatenetworks.ListNetworkResourcesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNetworkResourcesWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ListNetworkResourcesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworkResourcesWithContext indicates an expected call of ListNetworkResourcesWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkResourcesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkResourcesWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkResourcesWithContext), varargs...)
}

// ListNetworkSites mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkSites(arg0 *privatenetworks.ListNetworkSitesInput) (*privatenetworks.ListNetworkSitesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkSites", arg0)
	ret0, _ := ret[0].(*privatenetworks.ListNetworkSitesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworkSites indicates an expected call of ListNetworkSites
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkSites(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkSites", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkSites), arg0)
}

// ListNetworkSitesPages mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkSitesPages(arg0 *privatenetworks.ListNetworkSitesInput, arg1 func(*privatenetworks.ListNetworkSitesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkSitesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNetworkSitesPages indicates an expected call of ListNetworkSitesPages
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkSitesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkSitesPages", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkSitesPages), arg0, arg1)
}

// ListNetworkSitesPagesWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkSitesPagesWithContext(arg0 context.Context, arg1 *privatenetworks.ListNetworkSitesInput, arg2 func(*privatenetworks.ListNetworkSitesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNetworkSitesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNetworkSitesPagesWithContext indicates an expected call of ListNetworkSitesPagesWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkSitesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkSitesPagesWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkSitesPagesWithContext), varargs...)
}

// ListNetworkSitesRequest mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkSitesRequest(arg0 *privatenetworks.ListNetworkSitesInput) (*request.Request, *privatenetworks.ListNetworkSitesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkSitesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ListNetworkSitesOutput)
	return ret0, ret1
}

// ListNetworkSitesRequest indicates an expected call of ListNetworkSitesRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkSitesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkSitesRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkSitesRequest), arg0)
}

// ListNetworkSitesWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListNetworkSitesWithContext(arg0 context.Context, arg1 *privatenetworks.ListNetworkSitesInput, arg2 ...request.Option) (*privatenetworks.ListNetworkSitesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNetworkSitesWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ListNetworkSitesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworkSitesWithContext indicates an expected call of ListNetworkSitesWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworkSitesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkSitesWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworkSitesWithContext), varargs...)
}

// ListNetworks mocks base method
func (m *MockPrivateNetworksAPI) ListNetworks(arg0 *privatenetworks.ListNetworksInput) (*privatenetworks.ListNetworksOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworks", arg0)
	ret0, _ := ret[0].(*privatenetworks.ListNetworksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworks indicates an expected call of ListNetworks
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworks", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworks), arg0)
}

// ListNetworksPages mocks base method
func (m *MockPrivateNetworksAPI) ListNetworksPages(arg0 *privatenetworks.ListNetworksInput, arg1 func(*privatenetworks.ListNetworksOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworksPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNetworksPages indicates an expected call of ListNetworksPages
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworksPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworksPages", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworksPages), arg0, arg1)
}

// ListNetworksPagesWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListNetworksPagesWithContext(arg0 context.Context, arg1 *privatenetworks.ListNetworksInput, arg2 func(*privatenetworks.ListNetworksOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNetworksPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListNetworksPagesWithContext indicates an expected call of ListNetworksPagesWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworksPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworksPagesWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworksPagesWithContext), varargs...)
}

// ListNetworksRequest mocks base method
func (m *MockPrivateNetworksAPI) ListNetworksRequest(arg0 *privatenetworks.ListNetworksInput) (*request.Request, *privatenetworks.ListNetworksOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworksRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ListNetworksOutput)
	return ret0, ret1
}

// ListNetworksRequest indicates an expected call of ListNetworksRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworksRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworksRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworksRequest), arg0)
}

// ListNetworksWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListNetworksWithContext(arg0 context.Context, arg1 *privatenetworks.ListNetworksInput, arg2 ...request.Option) (*privatenetworks.ListNetworksOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListNetworksWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ListNetworksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworksWithContext indicates an expected call of ListNetworksWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListNetworksWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworksWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListNetworksWithContext), varargs...)
}

// ListOrders mocks base method
func (m *MockPrivateNetworksAPI) ListOrders(arg0 *privatenetworks.ListOrdersInput) (*privatenetworks.ListOrdersOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrders", arg0)
	ret0, _ := ret[0].(*privatenetworks.ListOrdersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOrders indicates an expected call of ListOrders
func (mr *MockPrivateNetworksAPIMockRecorder) ListOrders(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrders", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListOrders), arg0)
}

// ListOrdersPages mocks base method
func (m *MockPrivateNetworksAPI) ListOrdersPages(arg0 *privatenetworks.ListOrdersInput, arg1 func(*privatenetworks.ListOrdersOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrdersPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListOrdersPages indicates an expected call of ListOrdersPages
func (mr *MockPrivateNetworksAPIMockRecorder) ListOrdersPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrdersPages", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListOrdersPages), arg0, arg1)
}

// ListOrdersPagesWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListOrdersPagesWithContext(arg0 context.Context, arg1 *privatenetworks.ListOrdersInput, arg2 func(*privatenetworks.ListOrdersOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListOrdersPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListOrdersPagesWithContext indicates an expected call of ListOrdersPagesWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListOrdersPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrdersPagesWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListOrdersPagesWithContext), varargs...)
}

// ListOrdersRequest mocks base method
func (m *MockPrivateNetworksAPI) ListOrdersRequest(arg0 *privatenetworks.ListOrdersInput) (*request.Request, *privatenetworks.ListOrdersOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrdersRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ListOrdersOutput)
	return ret0, ret1
}

// ListOrdersRequest indicates an expected call of ListOrdersRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ListOrdersRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrdersRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListOrdersRequest), arg0)
}

// ListOrdersWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListOrdersWithContext(arg0 context.Context, arg1 *privatenetworks.ListOrdersInput, arg2 ...request.Option) (*privatenetworks.ListOrdersOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListOrdersWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ListOrdersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOrdersWithContext indicates an expected call of ListOrdersWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListOrdersWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrdersWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListOrdersWithContext), varargs...)
}

// ListTagsForResource mocks base method
func (m *MockPrivateNetworksAPI) ListTagsForResource(arg0 *privatenetworks.ListTagsForResourceInput) (*privatenetworks.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResource", arg0)
	ret0, _ := ret[0].(*privatenetworks.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResource indicates an expected call of ListTagsForResource
func (mr *MockPrivateNetworksAPIMockRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResource", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListTagsForResource), arg0)
}

// ListTagsForResourceRequest mocks base method
func (m *MockPrivateNetworksAPI) ListTagsForResourceRequest(arg0 *privatenetworks.ListTagsForResourceInput) (*request.Request, *privatenetworks.ListTagsForResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.ListTagsForResourceOutput)
	return ret0, ret1
}

// ListTagsForResourceRequest indicates an expected call of ListTagsForResourceRequest
func (mr *MockPrivateNetworksAPIMockRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListTagsForResourceRequest), arg0)
}

// ListTagsForResourceWithContext mocks base method
func (m *MockPrivateNetworksAPI) ListTagsForResourceWithContext(arg0 context.Context, arg1 *privatenetworks.ListTagsForResourceInput, arg2 ...request.Option) (*privatenetworks.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsForResourceWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResourceWithContext indicates an expected call of ListTagsForResourceWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) ListTagsForResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).ListTagsForResourceWithContext), varargs...)
}

// Ping mocks base method
func (m *MockPrivateNetworksAPI) Ping(arg0 *privatenetworks.PingInput) (*privatenetworks.PingOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(*privatenetworks.PingOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Ping indicates an expected call of Ping
func (mr *MockPrivateNetworksAPIMockRecorder) Ping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).Ping), arg0)
}

// PingRequest mocks base method
func (m *MockPrivateNetworksAPI) PingRequest(arg0 *privatenetworks.PingInput) (*request.Request, *privatenetworks.PingOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.PingOutput)
	return ret0, ret1
}

// PingRequest indicates an expected call of PingRequest
func (mr *MockPrivateNetworksAPIMockRecorder) PingRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).PingRequest), arg0)
}

// PingWithContext mocks base method
func (m *MockPrivateNetworksAPI) PingWithContext(arg0 context.Context, arg1 *privatenetworks.PingInput, arg2 ...request.Option) (*privatenetworks.PingOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PingWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.PingOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PingWithContext indicates an expected call of PingWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) PingWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).PingWithContext), varargs...)
}

// StartNetworkResourceUpdate mocks base method
func (m *MockPrivateNetworksAPI) StartNetworkResourceUpdate(arg0 *privatenetworks.StartNetworkResourceUpdateInput) (*privatenetworks.StartNetworkResourceUpdateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartNetworkResourceUpdate", arg0)
	ret0, _ := ret[0].(*privatenetworks.StartNetworkResourceUpdateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartNetworkResourceUpdate indicates an expected call of StartNetworkResourceUpdate
func (mr *MockPrivateNetworksAPIMockRecorder) StartNetworkResourceUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartNetworkResourceUpdate", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).StartNetworkResourceUpdate), arg0)
}

// StartNetworkResourceUpdateRequest mocks base method
func (m *MockPrivateNetworksAPI) StartNetworkResourceUpdateRequest(arg0 *privatenetworks.StartNetworkResourceUpdateInput) (*request.Request, *privatenetworks.StartNetworkResourceUpdateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartNetworkResourceUpdateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.StartNetworkResourceUpdateOutput)
	return ret0, ret1
}

// StartNetworkResourceUpdateRequest indicates an expected call of StartNetworkResourceUpdateRequest
func (mr *MockPrivateNetworksAPIMockRecorder) StartNetworkResourceUpdateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartNetworkResourceUpdateRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).StartNetworkResourceUpdateRequest), arg0)
}

// StartNetworkResourceUpdateWithContext mocks base method
func (m *MockPrivateNetworksAPI) StartNetworkResourceUpdateWithContext(arg0 context.Context, arg1 *privatenetworks.StartNetworkResourceUpdateInput, arg2 ...request.Option) (*privatenetworks.StartNetworkResourceUpdateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartNetworkResourceUpdateWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.StartNetworkResourceUpdateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartNetworkResourceUpdateWithContext indicates an expected call of StartNetworkResourceUpdateWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) StartNetworkResourceUpdateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartNetworkResourceUpdateWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).StartNetworkResourceUpdateWithContext), varargs...)
}

// TagResource mocks base method
func (m *MockPrivateNetworksAPI) TagResource(arg0 *privatenetworks.TagResourceInput) (*privatenetworks.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResource", arg0)
	ret0, _ := ret[0].(*privatenetworks.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResource indicates an expected call of TagResource
func (mr *MockPrivateNetworksAPIMockRecorder) TagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResource", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).TagResource), arg0)
}

// TagResourceRequest mocks base method
func (m *MockPrivateNetworksAPI) TagResourceRequest(arg0 *privatenetworks.TagResourceInput) (*request.Request, *privatenetworks.TagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.TagResourceOutput)
	return ret0, ret1
}

// TagResourceRequest indicates an expected call of TagResourceRequest
func (mr *MockPrivateNetworksAPIMockRecorder) TagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).TagResourceRequest), arg0)
}

// TagResourceWithContext mocks base method
func (m *MockPrivateNetworksAPI) TagResourceWithContext(arg0 context.Context, arg1 *privatenetworks.TagResourceInput, arg2 ...request.Option) (*privatenetworks.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResourceWithContext indicates an expected call of TagResourceWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) TagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).TagResourceWithContext), varargs...)
}

// UntagResource mocks base method
func (m *MockPrivateNetworksAPI) UntagResource(arg0 *privatenetworks.UntagResourceInput) (*privatenetworks.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResource", arg0)
	ret0, _ := ret[0].(*privatenetworks.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResource indicates an expected call of UntagResource
func (mr *MockPrivateNetworksAPIMockRecorder) UntagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResource", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UntagResource), arg0)
}

// UntagResourceRequest mocks base method
func (m *MockPrivateNetworksAPI) UntagResourceRequest(arg0 *privatenetworks.UntagResourceInput) (*request.Request, *privatenetworks.UntagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.UntagResourceOutput)
	return ret0, ret1
}

// UntagResourceRequest indicates an expected call of UntagResourceRequest
func (mr *MockPrivateNetworksAPIMockRecorder) UntagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UntagResourceRequest), arg0)
}

// UntagResourceWithContext mocks base method
func (m *MockPrivateNetworksAPI) UntagResourceWithContext(arg0 context.Context, arg1 *privatenetworks.UntagResourceInput, arg2 ...request.Option) (*privatenetworks.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UntagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResourceWithContext indicates an expected call of UntagResourceWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) UntagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UntagResourceWithContext), varargs...)
}

// UpdateNetworkSite mocks base method
func (m *MockPrivateNetworksAPI) UpdateNetworkSite(arg0 *privatenetworks.UpdateNetworkSiteInput) (*privatenetworks.UpdateNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNetworkSite", arg0)
	ret0, _ := ret[0].(*privatenetworks.UpdateNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNetworkSite indicates an expected call of UpdateNetworkSite
func (mr *MockPrivateNetworksAPIMockRecorder) UpdateNetworkSite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSite", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UpdateNetworkSite), arg0)
}

// UpdateNetworkSitePlan mocks base method
func (m *MockPrivateNetworksAPI) UpdateNetworkSitePlan(arg0 *privatenetworks.UpdateNetworkSitePlanInput) (*privatenetworks.UpdateNetworkSitePlanOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNetworkSitePlan", arg0)
	ret0, _ := ret[0].(*privatenetworks.UpdateNetworkSitePlanOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNetworkSitePlan indicates an expected call of UpdateNetworkSitePlan
func (mr *MockPrivateNetworksAPIMockRecorder) UpdateNetworkSitePlan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSitePlan", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UpdateNetworkSitePlan), arg0)
}

// UpdateNetworkSitePlanRequest mocks base method
func (m *MockPrivateNetworksAPI) UpdateNetworkSitePlanRequest(arg0 *privatenetworks.UpdateNetworkSitePlanInput) (*request.Request, *privatenetworks.UpdateNetworkSitePlanOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNetworkSitePlanRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.UpdateNetworkSitePlanOutput)
	return ret0, ret1
}

// UpdateNetworkSitePlanRequest indicates an expected call of UpdateNetworkSitePlanRequest
func (mr *MockPrivateNetworksAPIMockRecorder) UpdateNetworkSitePlanRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSitePlanRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UpdateNetworkSitePlanRequest), arg0)
}

// UpdateNetworkSitePlanWithContext mocks base method
func (m *MockPrivateNetworksAPI) UpdateNetworkSitePlanWithContext(arg0 context.Context, arg1 *privatenetworks.UpdateNetworkSitePlanInput, arg2 ...request.Option) (*privatenetworks.UpdateNetworkSitePlanOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateNetworkSitePlanWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.UpdateNetworkSitePlanOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNetworkSitePlanWithContext indicates an expected call of UpdateNetworkSitePlanWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) UpdateNetworkSitePlanWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSitePlanWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UpdateNetworkSitePlanWithContext), varargs...)
}

// UpdateNetworkSiteRequest mocks base method
func (m *MockPrivateNetworksAPI) UpdateNetworkSiteRequest(arg0 *privatenetworks.UpdateNetworkSiteInput) (*request.Request, *privatenetworks.UpdateNetworkSiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNetworkSiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*privatenetworks.UpdateNetworkSiteOutput)
	return ret0, ret1
}

// UpdateNetworkSiteRequest indicates an expected call of UpdateNetworkSiteRequest
func (mr *MockPrivateNetworksAPIMockRecorder) UpdateNetworkSiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSiteRequest", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UpdateNetworkSiteRequest), arg0)
}

// UpdateNetworkSiteWithContext mocks base method
func (m *MockPrivateNetworksAPI) UpdateNetworkSiteWithContext(arg0 context.Context, arg1 *privatenetworks.UpdateNetworkSiteInput, arg2 ...request.Option) (*privatenetworks.UpdateNetworkSiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateNetworkSiteWithContext", varargs...)
	ret0, _ := ret[0].(*privatenetworks.UpdateNetworkSiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNetworkSiteWithContext indicates an expected call of UpdateNetworkSiteWithContext
func (mr *MockPrivateNetworksAPIMockRecorder) UpdateNetworkSiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSiteWithContext", reflect.TypeOf((*MockPrivateNetworksAPI)(nil).UpdateNetworkSiteWithContext), varargs...)
}
