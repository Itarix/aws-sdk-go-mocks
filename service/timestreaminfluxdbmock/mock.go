// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/timestreaminfluxdb/timestreaminfluxdbiface (interfaces: TimestreamInfluxDBAPI)

// Package timestreaminfluxdbmock is a generated GoMock package.
package timestreaminfluxdbmock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	timestreaminfluxdb "github.com/aws/aws-sdk-go/service/timestreaminfluxdb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTimestreamInfluxDBAPI is a mock of TimestreamInfluxDBAPI interface
type MockTimestreamInfluxDBAPI struct {
	ctrl     *gomock.Controller
	recorder *MockTimestreamInfluxDBAPIMockRecorder
}

// MockTimestreamInfluxDBAPIMockRecorder is the mock recorder for MockTimestreamInfluxDBAPI
type MockTimestreamInfluxDBAPIMockRecorder struct {
	mock *MockTimestreamInfluxDBAPI
}

// NewMockTimestreamInfluxDBAPI creates a new mock instance
func NewMockTimestreamInfluxDBAPI(ctrl *gomock.Controller) *MockTimestreamInfluxDBAPI {
	mock := &MockTimestreamInfluxDBAPI{ctrl: ctrl}
	mock.recorder = &MockTimestreamInfluxDBAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTimestreamInfluxDBAPI) EXPECT() *MockTimestreamInfluxDBAPIMockRecorder {
	return m.recorder
}

// CreateDbInstance mocks base method
func (m *MockTimestreamInfluxDBAPI) CreateDbInstance(arg0 *timestreaminfluxdb.CreateDbInstanceInput) (*timestreaminfluxdb.CreateDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDbInstance", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.CreateDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDbInstance indicates an expected call of CreateDbInstance
func (mr *MockTimestreamInfluxDBAPIMockRecorder) CreateDbInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDbInstance", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).CreateDbInstance), arg0)
}

// CreateDbInstanceRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) CreateDbInstanceRequest(arg0 *timestreaminfluxdb.CreateDbInstanceInput) (*request.Request, *timestreaminfluxdb.CreateDbInstanceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDbInstanceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.CreateDbInstanceOutput)
	return ret0, ret1
}

// CreateDbInstanceRequest indicates an expected call of CreateDbInstanceRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) CreateDbInstanceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDbInstanceRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).CreateDbInstanceRequest), arg0)
}

// CreateDbInstanceWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) CreateDbInstanceWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.CreateDbInstanceInput, arg2 ...request.Option) (*timestreaminfluxdb.CreateDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateDbInstanceWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.CreateDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDbInstanceWithContext indicates an expected call of CreateDbInstanceWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) CreateDbInstanceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDbInstanceWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).CreateDbInstanceWithContext), varargs...)
}

// CreateDbParameterGroup mocks base method
func (m *MockTimestreamInfluxDBAPI) CreateDbParameterGroup(arg0 *timestreaminfluxdb.CreateDbParameterGroupInput) (*timestreaminfluxdb.CreateDbParameterGroupOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDbParameterGroup", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.CreateDbParameterGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDbParameterGroup indicates an expected call of CreateDbParameterGroup
func (mr *MockTimestreamInfluxDBAPIMockRecorder) CreateDbParameterGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDbParameterGroup", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).CreateDbParameterGroup), arg0)
}

// CreateDbParameterGroupRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) CreateDbParameterGroupRequest(arg0 *timestreaminfluxdb.CreateDbParameterGroupInput) (*request.Request, *timestreaminfluxdb.CreateDbParameterGroupOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDbParameterGroupRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.CreateDbParameterGroupOutput)
	return ret0, ret1
}

// CreateDbParameterGroupRequest indicates an expected call of CreateDbParameterGroupRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) CreateDbParameterGroupRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDbParameterGroupRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).CreateDbParameterGroupRequest), arg0)
}

// CreateDbParameterGroupWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) CreateDbParameterGroupWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.CreateDbParameterGroupInput, arg2 ...request.Option) (*timestreaminfluxdb.CreateDbParameterGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateDbParameterGroupWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.CreateDbParameterGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDbParameterGroupWithContext indicates an expected call of CreateDbParameterGroupWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) CreateDbParameterGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDbParameterGroupWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).CreateDbParameterGroupWithContext), varargs...)
}

// DeleteDbInstance mocks base method
func (m *MockTimestreamInfluxDBAPI) DeleteDbInstance(arg0 *timestreaminfluxdb.DeleteDbInstanceInput) (*timestreaminfluxdb.DeleteDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDbInstance", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.DeleteDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteDbInstance indicates an expected call of DeleteDbInstance
func (mr *MockTimestreamInfluxDBAPIMockRecorder) DeleteDbInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDbInstance", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).DeleteDbInstance), arg0)
}

// DeleteDbInstanceRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) DeleteDbInstanceRequest(arg0 *timestreaminfluxdb.DeleteDbInstanceInput) (*request.Request, *timestreaminfluxdb.DeleteDbInstanceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDbInstanceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.DeleteDbInstanceOutput)
	return ret0, ret1
}

// DeleteDbInstanceRequest indicates an expected call of DeleteDbInstanceRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) DeleteDbInstanceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDbInstanceRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).DeleteDbInstanceRequest), arg0)
}

// DeleteDbInstanceWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) DeleteDbInstanceWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.DeleteDbInstanceInput, arg2 ...request.Option) (*timestreaminfluxdb.DeleteDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteDbInstanceWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.DeleteDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteDbInstanceWithContext indicates an expected call of DeleteDbInstanceWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) DeleteDbInstanceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDbInstanceWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).DeleteDbInstanceWithContext), varargs...)
}

// GetDbInstance mocks base method
func (m *MockTimestreamInfluxDBAPI) GetDbInstance(arg0 *timestreaminfluxdb.GetDbInstanceInput) (*timestreaminfluxdb.GetDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDbInstance", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.GetDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDbInstance indicates an expected call of GetDbInstance
func (mr *MockTimestreamInfluxDBAPIMockRecorder) GetDbInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDbInstance", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).GetDbInstance), arg0)
}

// GetDbInstanceRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) GetDbInstanceRequest(arg0 *timestreaminfluxdb.GetDbInstanceInput) (*request.Request, *timestreaminfluxdb.GetDbInstanceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDbInstanceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.GetDbInstanceOutput)
	return ret0, ret1
}

// GetDbInstanceRequest indicates an expected call of GetDbInstanceRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) GetDbInstanceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDbInstanceRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).GetDbInstanceRequest), arg0)
}

// GetDbInstanceWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) GetDbInstanceWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.GetDbInstanceInput, arg2 ...request.Option) (*timestreaminfluxdb.GetDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDbInstanceWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.GetDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDbInstanceWithContext indicates an expected call of GetDbInstanceWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) GetDbInstanceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDbInstanceWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).GetDbInstanceWithContext), varargs...)
}

// GetDbParameterGroup mocks base method
func (m *MockTimestreamInfluxDBAPI) GetDbParameterGroup(arg0 *timestreaminfluxdb.GetDbParameterGroupInput) (*timestreaminfluxdb.GetDbParameterGroupOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDbParameterGroup", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.GetDbParameterGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDbParameterGroup indicates an expected call of GetDbParameterGroup
func (mr *MockTimestreamInfluxDBAPIMockRecorder) GetDbParameterGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDbParameterGroup", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).GetDbParameterGroup), arg0)
}

// GetDbParameterGroupRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) GetDbParameterGroupRequest(arg0 *timestreaminfluxdb.GetDbParameterGroupInput) (*request.Request, *timestreaminfluxdb.GetDbParameterGroupOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDbParameterGroupRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.GetDbParameterGroupOutput)
	return ret0, ret1
}

// GetDbParameterGroupRequest indicates an expected call of GetDbParameterGroupRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) GetDbParameterGroupRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDbParameterGroupRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).GetDbParameterGroupRequest), arg0)
}

// GetDbParameterGroupWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) GetDbParameterGroupWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.GetDbParameterGroupInput, arg2 ...request.Option) (*timestreaminfluxdb.GetDbParameterGroupOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDbParameterGroupWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.GetDbParameterGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDbParameterGroupWithContext indicates an expected call of GetDbParameterGroupWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) GetDbParameterGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDbParameterGroupWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).GetDbParameterGroupWithContext), varargs...)
}

// ListDbInstances mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbInstances(arg0 *timestreaminfluxdb.ListDbInstancesInput) (*timestreaminfluxdb.ListDbInstancesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDbInstances", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.ListDbInstancesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDbInstances indicates an expected call of ListDbInstances
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbInstances(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbInstances", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbInstances), arg0)
}

// ListDbInstancesPages mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbInstancesPages(arg0 *timestreaminfluxdb.ListDbInstancesInput, arg1 func(*timestreaminfluxdb.ListDbInstancesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDbInstancesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDbInstancesPages indicates an expected call of ListDbInstancesPages
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbInstancesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbInstancesPages", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbInstancesPages), arg0, arg1)
}

// ListDbInstancesPagesWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbInstancesPagesWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.ListDbInstancesInput, arg2 func(*timestreaminfluxdb.ListDbInstancesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDbInstancesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDbInstancesPagesWithContext indicates an expected call of ListDbInstancesPagesWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbInstancesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbInstancesPagesWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbInstancesPagesWithContext), varargs...)
}

// ListDbInstancesRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbInstancesRequest(arg0 *timestreaminfluxdb.ListDbInstancesInput) (*request.Request, *timestreaminfluxdb.ListDbInstancesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDbInstancesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.ListDbInstancesOutput)
	return ret0, ret1
}

// ListDbInstancesRequest indicates an expected call of ListDbInstancesRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbInstancesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbInstancesRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbInstancesRequest), arg0)
}

// ListDbInstancesWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbInstancesWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.ListDbInstancesInput, arg2 ...request.Option) (*timestreaminfluxdb.ListDbInstancesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDbInstancesWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.ListDbInstancesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDbInstancesWithContext indicates an expected call of ListDbInstancesWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbInstancesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbInstancesWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbInstancesWithContext), varargs...)
}

// ListDbParameterGroups mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbParameterGroups(arg0 *timestreaminfluxdb.ListDbParameterGroupsInput) (*timestreaminfluxdb.ListDbParameterGroupsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDbParameterGroups", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.ListDbParameterGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDbParameterGroups indicates an expected call of ListDbParameterGroups
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbParameterGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbParameterGroups", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbParameterGroups), arg0)
}

// ListDbParameterGroupsPages mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbParameterGroupsPages(arg0 *timestreaminfluxdb.ListDbParameterGroupsInput, arg1 func(*timestreaminfluxdb.ListDbParameterGroupsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDbParameterGroupsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDbParameterGroupsPages indicates an expected call of ListDbParameterGroupsPages
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbParameterGroupsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbParameterGroupsPages", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbParameterGroupsPages), arg0, arg1)
}

// ListDbParameterGroupsPagesWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbParameterGroupsPagesWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.ListDbParameterGroupsInput, arg2 func(*timestreaminfluxdb.ListDbParameterGroupsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDbParameterGroupsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListDbParameterGroupsPagesWithContext indicates an expected call of ListDbParameterGroupsPagesWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbParameterGroupsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbParameterGroupsPagesWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbParameterGroupsPagesWithContext), varargs...)
}

// ListDbParameterGroupsRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbParameterGroupsRequest(arg0 *timestreaminfluxdb.ListDbParameterGroupsInput) (*request.Request, *timestreaminfluxdb.ListDbParameterGroupsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDbParameterGroupsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.ListDbParameterGroupsOutput)
	return ret0, ret1
}

// ListDbParameterGroupsRequest indicates an expected call of ListDbParameterGroupsRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbParameterGroupsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbParameterGroupsRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbParameterGroupsRequest), arg0)
}

// ListDbParameterGroupsWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) ListDbParameterGroupsWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.ListDbParameterGroupsInput, arg2 ...request.Option) (*timestreaminfluxdb.ListDbParameterGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListDbParameterGroupsWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.ListDbParameterGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDbParameterGroupsWithContext indicates an expected call of ListDbParameterGroupsWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListDbParameterGroupsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDbParameterGroupsWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListDbParameterGroupsWithContext), varargs...)
}

// ListTagsForResource mocks base method
func (m *MockTimestreamInfluxDBAPI) ListTagsForResource(arg0 *timestreaminfluxdb.ListTagsForResourceInput) (*timestreaminfluxdb.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResource", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResource indicates an expected call of ListTagsForResource
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResource", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListTagsForResource), arg0)
}

// ListTagsForResourceRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) ListTagsForResourceRequest(arg0 *timestreaminfluxdb.ListTagsForResourceInput) (*request.Request, *timestreaminfluxdb.ListTagsForResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.ListTagsForResourceOutput)
	return ret0, ret1
}

// ListTagsForResourceRequest indicates an expected call of ListTagsForResourceRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListTagsForResourceRequest), arg0)
}

// ListTagsForResourceWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) ListTagsForResourceWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.ListTagsForResourceInput, arg2 ...request.Option) (*timestreaminfluxdb.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsForResourceWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResourceWithContext indicates an expected call of ListTagsForResourceWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) ListTagsForResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).ListTagsForResourceWithContext), varargs...)
}

// TagResource mocks base method
func (m *MockTimestreamInfluxDBAPI) TagResource(arg0 *timestreaminfluxdb.TagResourceInput) (*timestreaminfluxdb.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResource", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResource indicates an expected call of TagResource
func (mr *MockTimestreamInfluxDBAPIMockRecorder) TagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResource", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).TagResource), arg0)
}

// TagResourceRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) TagResourceRequest(arg0 *timestreaminfluxdb.TagResourceInput) (*request.Request, *timestreaminfluxdb.TagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.TagResourceOutput)
	return ret0, ret1
}

// TagResourceRequest indicates an expected call of TagResourceRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) TagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).TagResourceRequest), arg0)
}

// TagResourceWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) TagResourceWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.TagResourceInput, arg2 ...request.Option) (*timestreaminfluxdb.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResourceWithContext indicates an expected call of TagResourceWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) TagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).TagResourceWithContext), varargs...)
}

// UntagResource mocks base method
func (m *MockTimestreamInfluxDBAPI) UntagResource(arg0 *timestreaminfluxdb.UntagResourceInput) (*timestreaminfluxdb.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResource", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResource indicates an expected call of UntagResource
func (mr *MockTimestreamInfluxDBAPIMockRecorder) UntagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResource", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).UntagResource), arg0)
}

// UntagResourceRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) UntagResourceRequest(arg0 *timestreaminfluxdb.UntagResourceInput) (*request.Request, *timestreaminfluxdb.UntagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.UntagResourceOutput)
	return ret0, ret1
}

// UntagResourceRequest indicates an expected call of UntagResourceRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) UntagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).UntagResourceRequest), arg0)
}

// UntagResourceWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) UntagResourceWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.UntagResourceInput, arg2 ...request.Option) (*timestreaminfluxdb.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UntagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResourceWithContext indicates an expected call of UntagResourceWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) UntagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).UntagResourceWithContext), varargs...)
}

// UpdateDbInstance mocks base method
func (m *MockTimestreamInfluxDBAPI) UpdateDbInstance(arg0 *timestreaminfluxdb.UpdateDbInstanceInput) (*timestreaminfluxdb.UpdateDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDbInstance", arg0)
	ret0, _ := ret[0].(*timestreaminfluxdb.UpdateDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateDbInstance indicates an expected call of UpdateDbInstance
func (mr *MockTimestreamInfluxDBAPIMockRecorder) UpdateDbInstance(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDbInstance", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).UpdateDbInstance), arg0)
}

// UpdateDbInstanceRequest mocks base method
func (m *MockTimestreamInfluxDBAPI) UpdateDbInstanceRequest(arg0 *timestreaminfluxdb.UpdateDbInstanceInput) (*request.Request, *timestreaminfluxdb.UpdateDbInstanceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDbInstanceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*timestreaminfluxdb.UpdateDbInstanceOutput)
	return ret0, ret1
}

// UpdateDbInstanceRequest indicates an expected call of UpdateDbInstanceRequest
func (mr *MockTimestreamInfluxDBAPIMockRecorder) UpdateDbInstanceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDbInstanceRequest", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).UpdateDbInstanceRequest), arg0)
}

// UpdateDbInstanceWithContext mocks base method
func (m *MockTimestreamInfluxDBAPI) UpdateDbInstanceWithContext(arg0 context.Context, arg1 *timestreaminfluxdb.UpdateDbInstanceInput, arg2 ...request.Option) (*timestreaminfluxdb.UpdateDbInstanceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateDbInstanceWithContext", varargs...)
	ret0, _ := ret[0].(*timestreaminfluxdb.UpdateDbInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateDbInstanceWithContext indicates an expected call of UpdateDbInstanceWithContext
func (mr *MockTimestreamInfluxDBAPIMockRecorder) UpdateDbInstanceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDbInstanceWithContext", reflect.TypeOf((*MockTimestreamInfluxDBAPI)(nil).UpdateDbInstanceWithContext), varargs...)
}
