// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/route53profiles/route53profilesiface (interfaces: Route53ProfilesAPI)

// Package route53profilesmock is a generated GoMock package.
package route53profilesmock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	route53profiles "github.com/aws/aws-sdk-go/service/route53profiles"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRoute53ProfilesAPI is a mock of Route53ProfilesAPI interface
type MockRoute53ProfilesAPI struct {
	ctrl     *gomock.Controller
	recorder *MockRoute53ProfilesAPIMockRecorder
}

// MockRoute53ProfilesAPIMockRecorder is the mock recorder for MockRoute53ProfilesAPI
type MockRoute53ProfilesAPIMockRecorder struct {
	mock *MockRoute53ProfilesAPI
}

// NewMockRoute53ProfilesAPI creates a new mock instance
func NewMockRoute53ProfilesAPI(ctrl *gomock.Controller) *MockRoute53ProfilesAPI {
	mock := &MockRoute53ProfilesAPI{ctrl: ctrl}
	mock.recorder = &MockRoute53ProfilesAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRoute53ProfilesAPI) EXPECT() *MockRoute53ProfilesAPIMockRecorder {
	return m.recorder
}

// AssociateProfile mocks base method
func (m *MockRoute53ProfilesAPI) AssociateProfile(arg0 *route53profiles.AssociateProfileInput) (*route53profiles.AssociateProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateProfile", arg0)
	ret0, _ := ret[0].(*route53profiles.AssociateProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateProfile indicates an expected call of AssociateProfile
func (mr *MockRoute53ProfilesAPIMockRecorder) AssociateProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateProfile", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).AssociateProfile), arg0)
}

// AssociateProfileRequest mocks base method
func (m *MockRoute53ProfilesAPI) AssociateProfileRequest(arg0 *route53profiles.AssociateProfileInput) (*request.Request, *route53profiles.AssociateProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.AssociateProfileOutput)
	return ret0, ret1
}

// AssociateProfileRequest indicates an expected call of AssociateProfileRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) AssociateProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateProfileRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).AssociateProfileRequest), arg0)
}

// AssociateProfileWithContext mocks base method
func (m *MockRoute53ProfilesAPI) AssociateProfileWithContext(arg0 context.Context, arg1 *route53profiles.AssociateProfileInput, arg2 ...request.Option) (*route53profiles.AssociateProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AssociateProfileWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.AssociateProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateProfileWithContext indicates an expected call of AssociateProfileWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) AssociateProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateProfileWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).AssociateProfileWithContext), varargs...)
}

// AssociateResourceToProfile mocks base method
func (m *MockRoute53ProfilesAPI) AssociateResourceToProfile(arg0 *route53profiles.AssociateResourceToProfileInput) (*route53profiles.AssociateResourceToProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateResourceToProfile", arg0)
	ret0, _ := ret[0].(*route53profiles.AssociateResourceToProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateResourceToProfile indicates an expected call of AssociateResourceToProfile
func (mr *MockRoute53ProfilesAPIMockRecorder) AssociateResourceToProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateResourceToProfile", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).AssociateResourceToProfile), arg0)
}

// AssociateResourceToProfileRequest mocks base method
func (m *MockRoute53ProfilesAPI) AssociateResourceToProfileRequest(arg0 *route53profiles.AssociateResourceToProfileInput) (*request.Request, *route53profiles.AssociateResourceToProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateResourceToProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.AssociateResourceToProfileOutput)
	return ret0, ret1
}

// AssociateResourceToProfileRequest indicates an expected call of AssociateResourceToProfileRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) AssociateResourceToProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateResourceToProfileRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).AssociateResourceToProfileRequest), arg0)
}

// AssociateResourceToProfileWithContext mocks base method
func (m *MockRoute53ProfilesAPI) AssociateResourceToProfileWithContext(arg0 context.Context, arg1 *route53profiles.AssociateResourceToProfileInput, arg2 ...request.Option) (*route53profiles.AssociateResourceToProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AssociateResourceToProfileWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.AssociateResourceToProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateResourceToProfileWithContext indicates an expected call of AssociateResourceToProfileWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) AssociateResourceToProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateResourceToProfileWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).AssociateResourceToProfileWithContext), varargs...)
}

// CreateProfile mocks base method
func (m *MockRoute53ProfilesAPI) CreateProfile(arg0 *route53profiles.CreateProfileInput) (*route53profiles.CreateProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfile", arg0)
	ret0, _ := ret[0].(*route53profiles.CreateProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfile indicates an expected call of CreateProfile
func (mr *MockRoute53ProfilesAPIMockRecorder) CreateProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfile", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).CreateProfile), arg0)
}

// CreateProfileRequest mocks base method
func (m *MockRoute53ProfilesAPI) CreateProfileRequest(arg0 *route53profiles.CreateProfileInput) (*request.Request, *route53profiles.CreateProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.CreateProfileOutput)
	return ret0, ret1
}

// CreateProfileRequest indicates an expected call of CreateProfileRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) CreateProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfileRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).CreateProfileRequest), arg0)
}

// CreateProfileWithContext mocks base method
func (m *MockRoute53ProfilesAPI) CreateProfileWithContext(arg0 context.Context, arg1 *route53profiles.CreateProfileInput, arg2 ...request.Option) (*route53profiles.CreateProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateProfileWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.CreateProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProfileWithContext indicates an expected call of CreateProfileWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) CreateProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProfileWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).CreateProfileWithContext), varargs...)
}

// DeleteProfile mocks base method
func (m *MockRoute53ProfilesAPI) DeleteProfile(arg0 *route53profiles.DeleteProfileInput) (*route53profiles.DeleteProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProfile", arg0)
	ret0, _ := ret[0].(*route53profiles.DeleteProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteProfile indicates an expected call of DeleteProfile
func (mr *MockRoute53ProfilesAPIMockRecorder) DeleteProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfile", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DeleteProfile), arg0)
}

// DeleteProfileRequest mocks base method
func (m *MockRoute53ProfilesAPI) DeleteProfileRequest(arg0 *route53profiles.DeleteProfileInput) (*request.Request, *route53profiles.DeleteProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.DeleteProfileOutput)
	return ret0, ret1
}

// DeleteProfileRequest indicates an expected call of DeleteProfileRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) DeleteProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfileRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DeleteProfileRequest), arg0)
}

// DeleteProfileWithContext mocks base method
func (m *MockRoute53ProfilesAPI) DeleteProfileWithContext(arg0 context.Context, arg1 *route53profiles.DeleteProfileInput, arg2 ...request.Option) (*route53profiles.DeleteProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteProfileWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.DeleteProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteProfileWithContext indicates an expected call of DeleteProfileWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) DeleteProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfileWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DeleteProfileWithContext), varargs...)
}

// DisassociateProfile mocks base method
func (m *MockRoute53ProfilesAPI) DisassociateProfile(arg0 *route53profiles.DisassociateProfileInput) (*route53profiles.DisassociateProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateProfile", arg0)
	ret0, _ := ret[0].(*route53profiles.DisassociateProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateProfile indicates an expected call of DisassociateProfile
func (mr *MockRoute53ProfilesAPIMockRecorder) DisassociateProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateProfile", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DisassociateProfile), arg0)
}

// DisassociateProfileRequest mocks base method
func (m *MockRoute53ProfilesAPI) DisassociateProfileRequest(arg0 *route53profiles.DisassociateProfileInput) (*request.Request, *route53profiles.DisassociateProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.DisassociateProfileOutput)
	return ret0, ret1
}

// DisassociateProfileRequest indicates an expected call of DisassociateProfileRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) DisassociateProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateProfileRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DisassociateProfileRequest), arg0)
}

// DisassociateProfileWithContext mocks base method
func (m *MockRoute53ProfilesAPI) DisassociateProfileWithContext(arg0 context.Context, arg1 *route53profiles.DisassociateProfileInput, arg2 ...request.Option) (*route53profiles.DisassociateProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DisassociateProfileWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.DisassociateProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateProfileWithContext indicates an expected call of DisassociateProfileWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) DisassociateProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateProfileWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DisassociateProfileWithContext), varargs...)
}

// DisassociateResourceFromProfile mocks base method
func (m *MockRoute53ProfilesAPI) DisassociateResourceFromProfile(arg0 *route53profiles.DisassociateResourceFromProfileInput) (*route53profiles.DisassociateResourceFromProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateResourceFromProfile", arg0)
	ret0, _ := ret[0].(*route53profiles.DisassociateResourceFromProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateResourceFromProfile indicates an expected call of DisassociateResourceFromProfile
func (mr *MockRoute53ProfilesAPIMockRecorder) DisassociateResourceFromProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateResourceFromProfile", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DisassociateResourceFromProfile), arg0)
}

// DisassociateResourceFromProfileRequest mocks base method
func (m *MockRoute53ProfilesAPI) DisassociateResourceFromProfileRequest(arg0 *route53profiles.DisassociateResourceFromProfileInput) (*request.Request, *route53profiles.DisassociateResourceFromProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateResourceFromProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.DisassociateResourceFromProfileOutput)
	return ret0, ret1
}

// DisassociateResourceFromProfileRequest indicates an expected call of DisassociateResourceFromProfileRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) DisassociateResourceFromProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateResourceFromProfileRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DisassociateResourceFromProfileRequest), arg0)
}

// DisassociateResourceFromProfileWithContext mocks base method
func (m *MockRoute53ProfilesAPI) DisassociateResourceFromProfileWithContext(arg0 context.Context, arg1 *route53profiles.DisassociateResourceFromProfileInput, arg2 ...request.Option) (*route53profiles.DisassociateResourceFromProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DisassociateResourceFromProfileWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.DisassociateResourceFromProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateResourceFromProfileWithContext indicates an expected call of DisassociateResourceFromProfileWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) DisassociateResourceFromProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateResourceFromProfileWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).DisassociateResourceFromProfileWithContext), varargs...)
}

// GetProfile mocks base method
func (m *MockRoute53ProfilesAPI) GetProfile(arg0 *route53profiles.GetProfileInput) (*route53profiles.GetProfileOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", arg0)
	ret0, _ := ret[0].(*route53profiles.GetProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfile), arg0)
}

// GetProfileAssociation mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileAssociation(arg0 *route53profiles.GetProfileAssociationInput) (*route53profiles.GetProfileAssociationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileAssociation", arg0)
	ret0, _ := ret[0].(*route53profiles.GetProfileAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileAssociation indicates an expected call of GetProfileAssociation
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileAssociation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileAssociation", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileAssociation), arg0)
}

// GetProfileAssociationRequest mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileAssociationRequest(arg0 *route53profiles.GetProfileAssociationInput) (*request.Request, *route53profiles.GetProfileAssociationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileAssociationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.GetProfileAssociationOutput)
	return ret0, ret1
}

// GetProfileAssociationRequest indicates an expected call of GetProfileAssociationRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileAssociationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileAssociationRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileAssociationRequest), arg0)
}

// GetProfileAssociationWithContext mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileAssociationWithContext(arg0 context.Context, arg1 *route53profiles.GetProfileAssociationInput, arg2 ...request.Option) (*route53profiles.GetProfileAssociationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetProfileAssociationWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.GetProfileAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileAssociationWithContext indicates an expected call of GetProfileAssociationWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileAssociationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileAssociationWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileAssociationWithContext), varargs...)
}

// GetProfileRequest mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileRequest(arg0 *route53profiles.GetProfileInput) (*request.Request, *route53profiles.GetProfileOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.GetProfileOutput)
	return ret0, ret1
}

// GetProfileRequest indicates an expected call of GetProfileRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileRequest), arg0)
}

// GetProfileResourceAssociation mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileResourceAssociation(arg0 *route53profiles.GetProfileResourceAssociationInput) (*route53profiles.GetProfileResourceAssociationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileResourceAssociation", arg0)
	ret0, _ := ret[0].(*route53profiles.GetProfileResourceAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileResourceAssociation indicates an expected call of GetProfileResourceAssociation
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileResourceAssociation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileResourceAssociation", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileResourceAssociation), arg0)
}

// GetProfileResourceAssociationRequest mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileResourceAssociationRequest(arg0 *route53profiles.GetProfileResourceAssociationInput) (*request.Request, *route53profiles.GetProfileResourceAssociationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfileResourceAssociationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.GetProfileResourceAssociationOutput)
	return ret0, ret1
}

// GetProfileResourceAssociationRequest indicates an expected call of GetProfileResourceAssociationRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileResourceAssociationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileResourceAssociationRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileResourceAssociationRequest), arg0)
}

// GetProfileResourceAssociationWithContext mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileResourceAssociationWithContext(arg0 context.Context, arg1 *route53profiles.GetProfileResourceAssociationInput, arg2 ...request.Option) (*route53profiles.GetProfileResourceAssociationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetProfileResourceAssociationWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.GetProfileResourceAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileResourceAssociationWithContext indicates an expected call of GetProfileResourceAssociationWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileResourceAssociationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileResourceAssociationWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileResourceAssociationWithContext), varargs...)
}

// GetProfileWithContext mocks base method
func (m *MockRoute53ProfilesAPI) GetProfileWithContext(arg0 context.Context, arg1 *route53profiles.GetProfileInput, arg2 ...request.Option) (*route53profiles.GetProfileOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetProfileWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.GetProfileOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfileWithContext indicates an expected call of GetProfileWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) GetProfileWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfileWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).GetProfileWithContext), varargs...)
}

// ListProfileAssociations mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileAssociations(arg0 *route53profiles.ListProfileAssociationsInput) (*route53profiles.ListProfileAssociationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileAssociations", arg0)
	ret0, _ := ret[0].(*route53profiles.ListProfileAssociationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfileAssociations indicates an expected call of ListProfileAssociations
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileAssociations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileAssociations", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileAssociations), arg0)
}

// ListProfileAssociationsPages mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileAssociationsPages(arg0 *route53profiles.ListProfileAssociationsInput, arg1 func(*route53profiles.ListProfileAssociationsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileAssociationsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfileAssociationsPages indicates an expected call of ListProfileAssociationsPages
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileAssociationsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileAssociationsPages", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileAssociationsPages), arg0, arg1)
}

// ListProfileAssociationsPagesWithContext mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileAssociationsPagesWithContext(arg0 context.Context, arg1 *route53profiles.ListProfileAssociationsInput, arg2 func(*route53profiles.ListProfileAssociationsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfileAssociationsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfileAssociationsPagesWithContext indicates an expected call of ListProfileAssociationsPagesWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileAssociationsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileAssociationsPagesWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileAssociationsPagesWithContext), varargs...)
}

// ListProfileAssociationsRequest mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileAssociationsRequest(arg0 *route53profiles.ListProfileAssociationsInput) (*request.Request, *route53profiles.ListProfileAssociationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileAssociationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.ListProfileAssociationsOutput)
	return ret0, ret1
}

// ListProfileAssociationsRequest indicates an expected call of ListProfileAssociationsRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileAssociationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileAssociationsRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileAssociationsRequest), arg0)
}

// ListProfileAssociationsWithContext mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileAssociationsWithContext(arg0 context.Context, arg1 *route53profiles.ListProfileAssociationsInput, arg2 ...request.Option) (*route53profiles.ListProfileAssociationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfileAssociationsWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.ListProfileAssociationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfileAssociationsWithContext indicates an expected call of ListProfileAssociationsWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileAssociationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileAssociationsWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileAssociationsWithContext), varargs...)
}

// ListProfileResourceAssociations mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileResourceAssociations(arg0 *route53profiles.ListProfileResourceAssociationsInput) (*route53profiles.ListProfileResourceAssociationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileResourceAssociations", arg0)
	ret0, _ := ret[0].(*route53profiles.ListProfileResourceAssociationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfileResourceAssociations indicates an expected call of ListProfileResourceAssociations
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileResourceAssociations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileResourceAssociations", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileResourceAssociations), arg0)
}

// ListProfileResourceAssociationsPages mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileResourceAssociationsPages(arg0 *route53profiles.ListProfileResourceAssociationsInput, arg1 func(*route53profiles.ListProfileResourceAssociationsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileResourceAssociationsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfileResourceAssociationsPages indicates an expected call of ListProfileResourceAssociationsPages
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileResourceAssociationsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileResourceAssociationsPages", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileResourceAssociationsPages), arg0, arg1)
}

// ListProfileResourceAssociationsPagesWithContext mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileResourceAssociationsPagesWithContext(arg0 context.Context, arg1 *route53profiles.ListProfileResourceAssociationsInput, arg2 func(*route53profiles.ListProfileResourceAssociationsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfileResourceAssociationsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfileResourceAssociationsPagesWithContext indicates an expected call of ListProfileResourceAssociationsPagesWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileResourceAssociationsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileResourceAssociationsPagesWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileResourceAssociationsPagesWithContext), varargs...)
}

// ListProfileResourceAssociationsRequest mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileResourceAssociationsRequest(arg0 *route53profiles.ListProfileResourceAssociationsInput) (*request.Request, *route53profiles.ListProfileResourceAssociationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfileResourceAssociationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.ListProfileResourceAssociationsOutput)
	return ret0, ret1
}

// ListProfileResourceAssociationsRequest indicates an expected call of ListProfileResourceAssociationsRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileResourceAssociationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileResourceAssociationsRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileResourceAssociationsRequest), arg0)
}

// ListProfileResourceAssociationsWithContext mocks base method
func (m *MockRoute53ProfilesAPI) ListProfileResourceAssociationsWithContext(arg0 context.Context, arg1 *route53profiles.ListProfileResourceAssociationsInput, arg2 ...request.Option) (*route53profiles.ListProfileResourceAssociationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfileResourceAssociationsWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.ListProfileResourceAssociationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfileResourceAssociationsWithContext indicates an expected call of ListProfileResourceAssociationsWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfileResourceAssociationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfileResourceAssociationsWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfileResourceAssociationsWithContext), varargs...)
}

// ListProfiles mocks base method
func (m *MockRoute53ProfilesAPI) ListProfiles(arg0 *route53profiles.ListProfilesInput) (*route53profiles.ListProfilesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfiles", arg0)
	ret0, _ := ret[0].(*route53profiles.ListProfilesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfiles indicates an expected call of ListProfiles
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfiles(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfiles", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfiles), arg0)
}

// ListProfilesPages mocks base method
func (m *MockRoute53ProfilesAPI) ListProfilesPages(arg0 *route53profiles.ListProfilesInput, arg1 func(*route53profiles.ListProfilesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfilesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfilesPages indicates an expected call of ListProfilesPages
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfilesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilesPages", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfilesPages), arg0, arg1)
}

// ListProfilesPagesWithContext mocks base method
func (m *MockRoute53ProfilesAPI) ListProfilesPagesWithContext(arg0 context.Context, arg1 *route53profiles.ListProfilesInput, arg2 func(*route53profiles.ListProfilesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfilesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListProfilesPagesWithContext indicates an expected call of ListProfilesPagesWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfilesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilesPagesWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfilesPagesWithContext), varargs...)
}

// ListProfilesRequest mocks base method
func (m *MockRoute53ProfilesAPI) ListProfilesRequest(arg0 *route53profiles.ListProfilesInput) (*request.Request, *route53profiles.ListProfilesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProfilesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.ListProfilesOutput)
	return ret0, ret1
}

// ListProfilesRequest indicates an expected call of ListProfilesRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfilesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilesRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfilesRequest), arg0)
}

// ListProfilesWithContext mocks base method
func (m *MockRoute53ProfilesAPI) ListProfilesWithContext(arg0 context.Context, arg1 *route53profiles.ListProfilesInput, arg2 ...request.Option) (*route53profiles.ListProfilesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListProfilesWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.ListProfilesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListProfilesWithContext indicates an expected call of ListProfilesWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) ListProfilesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProfilesWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListProfilesWithContext), varargs...)
}

// ListTagsForResource mocks base method
func (m *MockRoute53ProfilesAPI) ListTagsForResource(arg0 *route53profiles.ListTagsForResourceInput) (*route53profiles.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResource", arg0)
	ret0, _ := ret[0].(*route53profiles.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResource indicates an expected call of ListTagsForResource
func (mr *MockRoute53ProfilesAPIMockRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResource", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListTagsForResource), arg0)
}

// ListTagsForResourceRequest mocks base method
func (m *MockRoute53ProfilesAPI) ListTagsForResourceRequest(arg0 *route53profiles.ListTagsForResourceInput) (*request.Request, *route53profiles.ListTagsForResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.ListTagsForResourceOutput)
	return ret0, ret1
}

// ListTagsForResourceRequest indicates an expected call of ListTagsForResourceRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListTagsForResourceRequest), arg0)
}

// ListTagsForResourceWithContext mocks base method
func (m *MockRoute53ProfilesAPI) ListTagsForResourceWithContext(arg0 context.Context, arg1 *route53profiles.ListTagsForResourceInput, arg2 ...request.Option) (*route53profiles.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsForResourceWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResourceWithContext indicates an expected call of ListTagsForResourceWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) ListTagsForResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).ListTagsForResourceWithContext), varargs...)
}

// TagResource mocks base method
func (m *MockRoute53ProfilesAPI) TagResource(arg0 *route53profiles.TagResourceInput) (*route53profiles.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResource", arg0)
	ret0, _ := ret[0].(*route53profiles.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResource indicates an expected call of TagResource
func (mr *MockRoute53ProfilesAPIMockRecorder) TagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResource", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).TagResource), arg0)
}

// TagResourceRequest mocks base method
func (m *MockRoute53ProfilesAPI) TagResourceRequest(arg0 *route53profiles.TagResourceInput) (*request.Request, *route53profiles.TagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.TagResourceOutput)
	return ret0, ret1
}

// TagResourceRequest indicates an expected call of TagResourceRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) TagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).TagResourceRequest), arg0)
}

// TagResourceWithContext mocks base method
func (m *MockRoute53ProfilesAPI) TagResourceWithContext(arg0 context.Context, arg1 *route53profiles.TagResourceInput, arg2 ...request.Option) (*route53profiles.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResourceWithContext indicates an expected call of TagResourceWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) TagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).TagResourceWithContext), varargs...)
}

// UntagResource mocks base method
func (m *MockRoute53ProfilesAPI) UntagResource(arg0 *route53profiles.UntagResourceInput) (*route53profiles.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResource", arg0)
	ret0, _ := ret[0].(*route53profiles.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResource indicates an expected call of UntagResource
func (mr *MockRoute53ProfilesAPIMockRecorder) UntagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResource", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).UntagResource), arg0)
}

// UntagResourceRequest mocks base method
func (m *MockRoute53ProfilesAPI) UntagResourceRequest(arg0 *route53profiles.UntagResourceInput) (*request.Request, *route53profiles.UntagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.UntagResourceOutput)
	return ret0, ret1
}

// UntagResourceRequest indicates an expected call of UntagResourceRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) UntagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).UntagResourceRequest), arg0)
}

// UntagResourceWithContext mocks base method
func (m *MockRoute53ProfilesAPI) UntagResourceWithContext(arg0 context.Context, arg1 *route53profiles.UntagResourceInput, arg2 ...request.Option) (*route53profiles.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UntagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResourceWithContext indicates an expected call of UntagResourceWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) UntagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).UntagResourceWithContext), varargs...)
}

// UpdateProfileResourceAssociation mocks base method
func (m *MockRoute53ProfilesAPI) UpdateProfileResourceAssociation(arg0 *route53profiles.UpdateProfileResourceAssociationInput) (*route53profiles.UpdateProfileResourceAssociationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfileResourceAssociation", arg0)
	ret0, _ := ret[0].(*route53profiles.UpdateProfileResourceAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfileResourceAssociation indicates an expected call of UpdateProfileResourceAssociation
func (mr *MockRoute53ProfilesAPIMockRecorder) UpdateProfileResourceAssociation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfileResourceAssociation", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).UpdateProfileResourceAssociation), arg0)
}

// UpdateProfileResourceAssociationRequest mocks base method
func (m *MockRoute53ProfilesAPI) UpdateProfileResourceAssociationRequest(arg0 *route53profiles.UpdateProfileResourceAssociationInput) (*request.Request, *route53profiles.UpdateProfileResourceAssociationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfileResourceAssociationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*route53profiles.UpdateProfileResourceAssociationOutput)
	return ret0, ret1
}

// UpdateProfileResourceAssociationRequest indicates an expected call of UpdateProfileResourceAssociationRequest
func (mr *MockRoute53ProfilesAPIMockRecorder) UpdateProfileResourceAssociationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfileResourceAssociationRequest", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).UpdateProfileResourceAssociationRequest), arg0)
}

// UpdateProfileResourceAssociationWithContext mocks base method
func (m *MockRoute53ProfilesAPI) UpdateProfileResourceAssociationWithContext(arg0 context.Context, arg1 *route53profiles.UpdateProfileResourceAssociationInput, arg2 ...request.Option) (*route53profiles.UpdateProfileResourceAssociationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateProfileResourceAssociationWithContext", varargs...)
	ret0, _ := ret[0].(*route53profiles.UpdateProfileResourceAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProfileResourceAssociationWithContext indicates an expected call of UpdateProfileResourceAssociationWithContext
func (mr *MockRoute53ProfilesAPIMockRecorder) UpdateProfileResourceAssociationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfileResourceAssociationWithContext", reflect.TypeOf((*MockRoute53ProfilesAPI)(nil).UpdateProfileResourceAssociationWithContext), varargs...)
}
