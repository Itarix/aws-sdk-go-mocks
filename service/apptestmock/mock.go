// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/apptest/apptestiface (interfaces: AppTestAPI)

// Package apptestmock is a generated GoMock package.
package apptestmock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	apptest "github.com/aws/aws-sdk-go/service/apptest"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAppTestAPI is a mock of AppTestAPI interface
type MockAppTestAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAppTestAPIMockRecorder
}

// MockAppTestAPIMockRecorder is the mock recorder for MockAppTestAPI
type MockAppTestAPIMockRecorder struct {
	mock *MockAppTestAPI
}

// NewMockAppTestAPI creates a new mock instance
func NewMockAppTestAPI(ctrl *gomock.Controller) *MockAppTestAPI {
	mock := &MockAppTestAPI{ctrl: ctrl}
	mock.recorder = &MockAppTestAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAppTestAPI) EXPECT() *MockAppTestAPIMockRecorder {
	return m.recorder
}

// CreateTestCase mocks base method
func (m *MockAppTestAPI) CreateTestCase(arg0 *apptest.CreateTestCaseInput) (*apptest.CreateTestCaseOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTestCase", arg0)
	ret0, _ := ret[0].(*apptest.CreateTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTestCase indicates an expected call of CreateTestCase
func (mr *MockAppTestAPIMockRecorder) CreateTestCase(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestCase", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestCase), arg0)
}

// CreateTestCaseRequest mocks base method
func (m *MockAppTestAPI) CreateTestCaseRequest(arg0 *apptest.CreateTestCaseInput) (*request.Request, *apptest.CreateTestCaseOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTestCaseRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.CreateTestCaseOutput)
	return ret0, ret1
}

// CreateTestCaseRequest indicates an expected call of CreateTestCaseRequest
func (mr *MockAppTestAPIMockRecorder) CreateTestCaseRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestCaseRequest", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestCaseRequest), arg0)
}

// CreateTestCaseWithContext mocks base method
func (m *MockAppTestAPI) CreateTestCaseWithContext(arg0 context.Context, arg1 *apptest.CreateTestCaseInput, arg2 ...request.Option) (*apptest.CreateTestCaseOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateTestCaseWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.CreateTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTestCaseWithContext indicates an expected call of CreateTestCaseWithContext
func (mr *MockAppTestAPIMockRecorder) CreateTestCaseWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestCaseWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestCaseWithContext), varargs...)
}

// CreateTestConfiguration mocks base method
func (m *MockAppTestAPI) CreateTestConfiguration(arg0 *apptest.CreateTestConfigurationInput) (*apptest.CreateTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTestConfiguration", arg0)
	ret0, _ := ret[0].(*apptest.CreateTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTestConfiguration indicates an expected call of CreateTestConfiguration
func (mr *MockAppTestAPIMockRecorder) CreateTestConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestConfiguration", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestConfiguration), arg0)
}

// CreateTestConfigurationRequest mocks base method
func (m *MockAppTestAPI) CreateTestConfigurationRequest(arg0 *apptest.CreateTestConfigurationInput) (*request.Request, *apptest.CreateTestConfigurationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTestConfigurationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.CreateTestConfigurationOutput)
	return ret0, ret1
}

// CreateTestConfigurationRequest indicates an expected call of CreateTestConfigurationRequest
func (mr *MockAppTestAPIMockRecorder) CreateTestConfigurationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestConfigurationRequest", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestConfigurationRequest), arg0)
}

// CreateTestConfigurationWithContext mocks base method
func (m *MockAppTestAPI) CreateTestConfigurationWithContext(arg0 context.Context, arg1 *apptest.CreateTestConfigurationInput, arg2 ...request.Option) (*apptest.CreateTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateTestConfigurationWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.CreateTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTestConfigurationWithContext indicates an expected call of CreateTestConfigurationWithContext
func (mr *MockAppTestAPIMockRecorder) CreateTestConfigurationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestConfigurationWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestConfigurationWithContext), varargs...)
}

// CreateTestSuite mocks base method
func (m *MockAppTestAPI) CreateTestSuite(arg0 *apptest.CreateTestSuiteInput) (*apptest.CreateTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTestSuite", arg0)
	ret0, _ := ret[0].(*apptest.CreateTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTestSuite indicates an expected call of CreateTestSuite
func (mr *MockAppTestAPIMockRecorder) CreateTestSuite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestSuite", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestSuite), arg0)
}

// CreateTestSuiteRequest mocks base method
func (m *MockAppTestAPI) CreateTestSuiteRequest(arg0 *apptest.CreateTestSuiteInput) (*request.Request, *apptest.CreateTestSuiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTestSuiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.CreateTestSuiteOutput)
	return ret0, ret1
}

// CreateTestSuiteRequest indicates an expected call of CreateTestSuiteRequest
func (mr *MockAppTestAPIMockRecorder) CreateTestSuiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestSuiteRequest", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestSuiteRequest), arg0)
}

// CreateTestSuiteWithContext mocks base method
func (m *MockAppTestAPI) CreateTestSuiteWithContext(arg0 context.Context, arg1 *apptest.CreateTestSuiteInput, arg2 ...request.Option) (*apptest.CreateTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateTestSuiteWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.CreateTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTestSuiteWithContext indicates an expected call of CreateTestSuiteWithContext
func (mr *MockAppTestAPIMockRecorder) CreateTestSuiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTestSuiteWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).CreateTestSuiteWithContext), varargs...)
}

// DeleteTestCase mocks base method
func (m *MockAppTestAPI) DeleteTestCase(arg0 *apptest.DeleteTestCaseInput) (*apptest.DeleteTestCaseOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestCase", arg0)
	ret0, _ := ret[0].(*apptest.DeleteTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestCase indicates an expected call of DeleteTestCase
func (mr *MockAppTestAPIMockRecorder) DeleteTestCase(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestCase", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestCase), arg0)
}

// DeleteTestCaseRequest mocks base method
func (m *MockAppTestAPI) DeleteTestCaseRequest(arg0 *apptest.DeleteTestCaseInput) (*request.Request, *apptest.DeleteTestCaseOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestCaseRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.DeleteTestCaseOutput)
	return ret0, ret1
}

// DeleteTestCaseRequest indicates an expected call of DeleteTestCaseRequest
func (mr *MockAppTestAPIMockRecorder) DeleteTestCaseRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestCaseRequest", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestCaseRequest), arg0)
}

// DeleteTestCaseWithContext mocks base method
func (m *MockAppTestAPI) DeleteTestCaseWithContext(arg0 context.Context, arg1 *apptest.DeleteTestCaseInput, arg2 ...request.Option) (*apptest.DeleteTestCaseOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteTestCaseWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.DeleteTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestCaseWithContext indicates an expected call of DeleteTestCaseWithContext
func (mr *MockAppTestAPIMockRecorder) DeleteTestCaseWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestCaseWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestCaseWithContext), varargs...)
}

// DeleteTestConfiguration mocks base method
func (m *MockAppTestAPI) DeleteTestConfiguration(arg0 *apptest.DeleteTestConfigurationInput) (*apptest.DeleteTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestConfiguration", arg0)
	ret0, _ := ret[0].(*apptest.DeleteTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestConfiguration indicates an expected call of DeleteTestConfiguration
func (mr *MockAppTestAPIMockRecorder) DeleteTestConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestConfiguration", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestConfiguration), arg0)
}

// DeleteTestConfigurationRequest mocks base method
func (m *MockAppTestAPI) DeleteTestConfigurationRequest(arg0 *apptest.DeleteTestConfigurationInput) (*request.Request, *apptest.DeleteTestConfigurationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestConfigurationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.DeleteTestConfigurationOutput)
	return ret0, ret1
}

// DeleteTestConfigurationRequest indicates an expected call of DeleteTestConfigurationRequest
func (mr *MockAppTestAPIMockRecorder) DeleteTestConfigurationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestConfigurationRequest", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestConfigurationRequest), arg0)
}

// DeleteTestConfigurationWithContext mocks base method
func (m *MockAppTestAPI) DeleteTestConfigurationWithContext(arg0 context.Context, arg1 *apptest.DeleteTestConfigurationInput, arg2 ...request.Option) (*apptest.DeleteTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteTestConfigurationWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.DeleteTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestConfigurationWithContext indicates an expected call of DeleteTestConfigurationWithContext
func (mr *MockAppTestAPIMockRecorder) DeleteTestConfigurationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestConfigurationWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestConfigurationWithContext), varargs...)
}

// DeleteTestRun mocks base method
func (m *MockAppTestAPI) DeleteTestRun(arg0 *apptest.DeleteTestRunInput) (*apptest.DeleteTestRunOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestRun", arg0)
	ret0, _ := ret[0].(*apptest.DeleteTestRunOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestRun indicates an expected call of DeleteTestRun
func (mr *MockAppTestAPIMockRecorder) DeleteTestRun(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestRun", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestRun), arg0)
}

// DeleteTestRunRequest mocks base method
func (m *MockAppTestAPI) DeleteTestRunRequest(arg0 *apptest.DeleteTestRunInput) (*request.Request, *apptest.DeleteTestRunOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestRunRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.DeleteTestRunOutput)
	return ret0, ret1
}

// DeleteTestRunRequest indicates an expected call of DeleteTestRunRequest
func (mr *MockAppTestAPIMockRecorder) DeleteTestRunRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestRunRequest", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestRunRequest), arg0)
}

// DeleteTestRunWithContext mocks base method
func (m *MockAppTestAPI) DeleteTestRunWithContext(arg0 context.Context, arg1 *apptest.DeleteTestRunInput, arg2 ...request.Option) (*apptest.DeleteTestRunOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteTestRunWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.DeleteTestRunOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestRunWithContext indicates an expected call of DeleteTestRunWithContext
func (mr *MockAppTestAPIMockRecorder) DeleteTestRunWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestRunWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestRunWithContext), varargs...)
}

// DeleteTestSuite mocks base method
func (m *MockAppTestAPI) DeleteTestSuite(arg0 *apptest.DeleteTestSuiteInput) (*apptest.DeleteTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestSuite", arg0)
	ret0, _ := ret[0].(*apptest.DeleteTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestSuite indicates an expected call of DeleteTestSuite
func (mr *MockAppTestAPIMockRecorder) DeleteTestSuite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestSuite", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestSuite), arg0)
}

// DeleteTestSuiteRequest mocks base method
func (m *MockAppTestAPI) DeleteTestSuiteRequest(arg0 *apptest.DeleteTestSuiteInput) (*request.Request, *apptest.DeleteTestSuiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTestSuiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.DeleteTestSuiteOutput)
	return ret0, ret1
}

// DeleteTestSuiteRequest indicates an expected call of DeleteTestSuiteRequest
func (mr *MockAppTestAPIMockRecorder) DeleteTestSuiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestSuiteRequest", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestSuiteRequest), arg0)
}

// DeleteTestSuiteWithContext mocks base method
func (m *MockAppTestAPI) DeleteTestSuiteWithContext(arg0 context.Context, arg1 *apptest.DeleteTestSuiteInput, arg2 ...request.Option) (*apptest.DeleteTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteTestSuiteWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.DeleteTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTestSuiteWithContext indicates an expected call of DeleteTestSuiteWithContext
func (mr *MockAppTestAPIMockRecorder) DeleteTestSuiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTestSuiteWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).DeleteTestSuiteWithContext), varargs...)
}

// GetTestCase mocks base method
func (m *MockAppTestAPI) GetTestCase(arg0 *apptest.GetTestCaseInput) (*apptest.GetTestCaseOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestCase", arg0)
	ret0, _ := ret[0].(*apptest.GetTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestCase indicates an expected call of GetTestCase
func (mr *MockAppTestAPIMockRecorder) GetTestCase(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestCase", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestCase), arg0)
}

// GetTestCaseRequest mocks base method
func (m *MockAppTestAPI) GetTestCaseRequest(arg0 *apptest.GetTestCaseInput) (*request.Request, *apptest.GetTestCaseOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestCaseRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.GetTestCaseOutput)
	return ret0, ret1
}

// GetTestCaseRequest indicates an expected call of GetTestCaseRequest
func (mr *MockAppTestAPIMockRecorder) GetTestCaseRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestCaseRequest", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestCaseRequest), arg0)
}

// GetTestCaseWithContext mocks base method
func (m *MockAppTestAPI) GetTestCaseWithContext(arg0 context.Context, arg1 *apptest.GetTestCaseInput, arg2 ...request.Option) (*apptest.GetTestCaseOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetTestCaseWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.GetTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestCaseWithContext indicates an expected call of GetTestCaseWithContext
func (mr *MockAppTestAPIMockRecorder) GetTestCaseWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestCaseWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestCaseWithContext), varargs...)
}

// GetTestConfiguration mocks base method
func (m *MockAppTestAPI) GetTestConfiguration(arg0 *apptest.GetTestConfigurationInput) (*apptest.GetTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestConfiguration", arg0)
	ret0, _ := ret[0].(*apptest.GetTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestConfiguration indicates an expected call of GetTestConfiguration
func (mr *MockAppTestAPIMockRecorder) GetTestConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestConfiguration", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestConfiguration), arg0)
}

// GetTestConfigurationRequest mocks base method
func (m *MockAppTestAPI) GetTestConfigurationRequest(arg0 *apptest.GetTestConfigurationInput) (*request.Request, *apptest.GetTestConfigurationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestConfigurationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.GetTestConfigurationOutput)
	return ret0, ret1
}

// GetTestConfigurationRequest indicates an expected call of GetTestConfigurationRequest
func (mr *MockAppTestAPIMockRecorder) GetTestConfigurationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestConfigurationRequest", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestConfigurationRequest), arg0)
}

// GetTestConfigurationWithContext mocks base method
func (m *MockAppTestAPI) GetTestConfigurationWithContext(arg0 context.Context, arg1 *apptest.GetTestConfigurationInput, arg2 ...request.Option) (*apptest.GetTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetTestConfigurationWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.GetTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestConfigurationWithContext indicates an expected call of GetTestConfigurationWithContext
func (mr *MockAppTestAPIMockRecorder) GetTestConfigurationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestConfigurationWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestConfigurationWithContext), varargs...)
}

// GetTestRunStep mocks base method
func (m *MockAppTestAPI) GetTestRunStep(arg0 *apptest.GetTestRunStepInput) (*apptest.GetTestRunStepOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestRunStep", arg0)
	ret0, _ := ret[0].(*apptest.GetTestRunStepOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestRunStep indicates an expected call of GetTestRunStep
func (mr *MockAppTestAPIMockRecorder) GetTestRunStep(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestRunStep", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestRunStep), arg0)
}

// GetTestRunStepRequest mocks base method
func (m *MockAppTestAPI) GetTestRunStepRequest(arg0 *apptest.GetTestRunStepInput) (*request.Request, *apptest.GetTestRunStepOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestRunStepRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.GetTestRunStepOutput)
	return ret0, ret1
}

// GetTestRunStepRequest indicates an expected call of GetTestRunStepRequest
func (mr *MockAppTestAPIMockRecorder) GetTestRunStepRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestRunStepRequest", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestRunStepRequest), arg0)
}

// GetTestRunStepWithContext mocks base method
func (m *MockAppTestAPI) GetTestRunStepWithContext(arg0 context.Context, arg1 *apptest.GetTestRunStepInput, arg2 ...request.Option) (*apptest.GetTestRunStepOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetTestRunStepWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.GetTestRunStepOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestRunStepWithContext indicates an expected call of GetTestRunStepWithContext
func (mr *MockAppTestAPIMockRecorder) GetTestRunStepWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestRunStepWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestRunStepWithContext), varargs...)
}

// GetTestSuite mocks base method
func (m *MockAppTestAPI) GetTestSuite(arg0 *apptest.GetTestSuiteInput) (*apptest.GetTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestSuite", arg0)
	ret0, _ := ret[0].(*apptest.GetTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestSuite indicates an expected call of GetTestSuite
func (mr *MockAppTestAPIMockRecorder) GetTestSuite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestSuite", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestSuite), arg0)
}

// GetTestSuiteRequest mocks base method
func (m *MockAppTestAPI) GetTestSuiteRequest(arg0 *apptest.GetTestSuiteInput) (*request.Request, *apptest.GetTestSuiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestSuiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.GetTestSuiteOutput)
	return ret0, ret1
}

// GetTestSuiteRequest indicates an expected call of GetTestSuiteRequest
func (mr *MockAppTestAPIMockRecorder) GetTestSuiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestSuiteRequest", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestSuiteRequest), arg0)
}

// GetTestSuiteWithContext mocks base method
func (m *MockAppTestAPI) GetTestSuiteWithContext(arg0 context.Context, arg1 *apptest.GetTestSuiteInput, arg2 ...request.Option) (*apptest.GetTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetTestSuiteWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.GetTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestSuiteWithContext indicates an expected call of GetTestSuiteWithContext
func (mr *MockAppTestAPIMockRecorder) GetTestSuiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestSuiteWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).GetTestSuiteWithContext), varargs...)
}

// ListTagsForResource mocks base method
func (m *MockAppTestAPI) ListTagsForResource(arg0 *apptest.ListTagsForResourceInput) (*apptest.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResource", arg0)
	ret0, _ := ret[0].(*apptest.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResource indicates an expected call of ListTagsForResource
func (mr *MockAppTestAPIMockRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResource", reflect.TypeOf((*MockAppTestAPI)(nil).ListTagsForResource), arg0)
}

// ListTagsForResourceRequest mocks base method
func (m *MockAppTestAPI) ListTagsForResourceRequest(arg0 *apptest.ListTagsForResourceInput) (*request.Request, *apptest.ListTagsForResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.ListTagsForResourceOutput)
	return ret0, ret1
}

// ListTagsForResourceRequest indicates an expected call of ListTagsForResourceRequest
func (mr *MockAppTestAPIMockRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceRequest", reflect.TypeOf((*MockAppTestAPI)(nil).ListTagsForResourceRequest), arg0)
}

// ListTagsForResourceWithContext mocks base method
func (m *MockAppTestAPI) ListTagsForResourceWithContext(arg0 context.Context, arg1 *apptest.ListTagsForResourceInput, arg2 ...request.Option) (*apptest.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsForResourceWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResourceWithContext indicates an expected call of ListTagsForResourceWithContext
func (mr *MockAppTestAPIMockRecorder) ListTagsForResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTagsForResourceWithContext), varargs...)
}

// ListTestCases mocks base method
func (m *MockAppTestAPI) ListTestCases(arg0 *apptest.ListTestCasesInput) (*apptest.ListTestCasesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestCases", arg0)
	ret0, _ := ret[0].(*apptest.ListTestCasesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestCases indicates an expected call of ListTestCases
func (mr *MockAppTestAPIMockRecorder) ListTestCases(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestCases", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestCases), arg0)
}

// ListTestCasesPages mocks base method
func (m *MockAppTestAPI) ListTestCasesPages(arg0 *apptest.ListTestCasesInput, arg1 func(*apptest.ListTestCasesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestCasesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestCasesPages indicates an expected call of ListTestCasesPages
func (mr *MockAppTestAPIMockRecorder) ListTestCasesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestCasesPages", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestCasesPages), arg0, arg1)
}

// ListTestCasesPagesWithContext mocks base method
func (m *MockAppTestAPI) ListTestCasesPagesWithContext(arg0 context.Context, arg1 *apptest.ListTestCasesInput, arg2 func(*apptest.ListTestCasesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestCasesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestCasesPagesWithContext indicates an expected call of ListTestCasesPagesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestCasesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestCasesPagesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestCasesPagesWithContext), varargs...)
}

// ListTestCasesRequest mocks base method
func (m *MockAppTestAPI) ListTestCasesRequest(arg0 *apptest.ListTestCasesInput) (*request.Request, *apptest.ListTestCasesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestCasesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.ListTestCasesOutput)
	return ret0, ret1
}

// ListTestCasesRequest indicates an expected call of ListTestCasesRequest
func (mr *MockAppTestAPIMockRecorder) ListTestCasesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestCasesRequest", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestCasesRequest), arg0)
}

// ListTestCasesWithContext mocks base method
func (m *MockAppTestAPI) ListTestCasesWithContext(arg0 context.Context, arg1 *apptest.ListTestCasesInput, arg2 ...request.Option) (*apptest.ListTestCasesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestCasesWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.ListTestCasesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestCasesWithContext indicates an expected call of ListTestCasesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestCasesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestCasesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestCasesWithContext), varargs...)
}

// ListTestConfigurations mocks base method
func (m *MockAppTestAPI) ListTestConfigurations(arg0 *apptest.ListTestConfigurationsInput) (*apptest.ListTestConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestConfigurations", arg0)
	ret0, _ := ret[0].(*apptest.ListTestConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestConfigurations indicates an expected call of ListTestConfigurations
func (mr *MockAppTestAPIMockRecorder) ListTestConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestConfigurations", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestConfigurations), arg0)
}

// ListTestConfigurationsPages mocks base method
func (m *MockAppTestAPI) ListTestConfigurationsPages(arg0 *apptest.ListTestConfigurationsInput, arg1 func(*apptest.ListTestConfigurationsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestConfigurationsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestConfigurationsPages indicates an expected call of ListTestConfigurationsPages
func (mr *MockAppTestAPIMockRecorder) ListTestConfigurationsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestConfigurationsPages", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestConfigurationsPages), arg0, arg1)
}

// ListTestConfigurationsPagesWithContext mocks base method
func (m *MockAppTestAPI) ListTestConfigurationsPagesWithContext(arg0 context.Context, arg1 *apptest.ListTestConfigurationsInput, arg2 func(*apptest.ListTestConfigurationsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestConfigurationsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestConfigurationsPagesWithContext indicates an expected call of ListTestConfigurationsPagesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestConfigurationsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestConfigurationsPagesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestConfigurationsPagesWithContext), varargs...)
}

// ListTestConfigurationsRequest mocks base method
func (m *MockAppTestAPI) ListTestConfigurationsRequest(arg0 *apptest.ListTestConfigurationsInput) (*request.Request, *apptest.ListTestConfigurationsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestConfigurationsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.ListTestConfigurationsOutput)
	return ret0, ret1
}

// ListTestConfigurationsRequest indicates an expected call of ListTestConfigurationsRequest
func (mr *MockAppTestAPIMockRecorder) ListTestConfigurationsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestConfigurationsRequest", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestConfigurationsRequest), arg0)
}

// ListTestConfigurationsWithContext mocks base method
func (m *MockAppTestAPI) ListTestConfigurationsWithContext(arg0 context.Context, arg1 *apptest.ListTestConfigurationsInput, arg2 ...request.Option) (*apptest.ListTestConfigurationsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestConfigurationsWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.ListTestConfigurationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestConfigurationsWithContext indicates an expected call of ListTestConfigurationsWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestConfigurationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestConfigurationsWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestConfigurationsWithContext), varargs...)
}

// ListTestRunSteps mocks base method
func (m *MockAppTestAPI) ListTestRunSteps(arg0 *apptest.ListTestRunStepsInput) (*apptest.ListTestRunStepsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunSteps", arg0)
	ret0, _ := ret[0].(*apptest.ListTestRunStepsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestRunSteps indicates an expected call of ListTestRunSteps
func (mr *MockAppTestAPIMockRecorder) ListTestRunSteps(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunSteps", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunSteps), arg0)
}

// ListTestRunStepsPages mocks base method
func (m *MockAppTestAPI) ListTestRunStepsPages(arg0 *apptest.ListTestRunStepsInput, arg1 func(*apptest.ListTestRunStepsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunStepsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestRunStepsPages indicates an expected call of ListTestRunStepsPages
func (mr *MockAppTestAPIMockRecorder) ListTestRunStepsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunStepsPages", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunStepsPages), arg0, arg1)
}

// ListTestRunStepsPagesWithContext mocks base method
func (m *MockAppTestAPI) ListTestRunStepsPagesWithContext(arg0 context.Context, arg1 *apptest.ListTestRunStepsInput, arg2 func(*apptest.ListTestRunStepsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestRunStepsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestRunStepsPagesWithContext indicates an expected call of ListTestRunStepsPagesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestRunStepsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunStepsPagesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunStepsPagesWithContext), varargs...)
}

// ListTestRunStepsRequest mocks base method
func (m *MockAppTestAPI) ListTestRunStepsRequest(arg0 *apptest.ListTestRunStepsInput) (*request.Request, *apptest.ListTestRunStepsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunStepsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.ListTestRunStepsOutput)
	return ret0, ret1
}

// ListTestRunStepsRequest indicates an expected call of ListTestRunStepsRequest
func (mr *MockAppTestAPIMockRecorder) ListTestRunStepsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunStepsRequest", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunStepsRequest), arg0)
}

// ListTestRunStepsWithContext mocks base method
func (m *MockAppTestAPI) ListTestRunStepsWithContext(arg0 context.Context, arg1 *apptest.ListTestRunStepsInput, arg2 ...request.Option) (*apptest.ListTestRunStepsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestRunStepsWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.ListTestRunStepsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestRunStepsWithContext indicates an expected call of ListTestRunStepsWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestRunStepsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunStepsWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunStepsWithContext), varargs...)
}

// ListTestRunTestCases mocks base method
func (m *MockAppTestAPI) ListTestRunTestCases(arg0 *apptest.ListTestRunTestCasesInput) (*apptest.ListTestRunTestCasesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunTestCases", arg0)
	ret0, _ := ret[0].(*apptest.ListTestRunTestCasesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestRunTestCases indicates an expected call of ListTestRunTestCases
func (mr *MockAppTestAPIMockRecorder) ListTestRunTestCases(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunTestCases", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunTestCases), arg0)
}

// ListTestRunTestCasesPages mocks base method
func (m *MockAppTestAPI) ListTestRunTestCasesPages(arg0 *apptest.ListTestRunTestCasesInput, arg1 func(*apptest.ListTestRunTestCasesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunTestCasesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestRunTestCasesPages indicates an expected call of ListTestRunTestCasesPages
func (mr *MockAppTestAPIMockRecorder) ListTestRunTestCasesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunTestCasesPages", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunTestCasesPages), arg0, arg1)
}

// ListTestRunTestCasesPagesWithContext mocks base method
func (m *MockAppTestAPI) ListTestRunTestCasesPagesWithContext(arg0 context.Context, arg1 *apptest.ListTestRunTestCasesInput, arg2 func(*apptest.ListTestRunTestCasesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestRunTestCasesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestRunTestCasesPagesWithContext indicates an expected call of ListTestRunTestCasesPagesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestRunTestCasesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunTestCasesPagesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunTestCasesPagesWithContext), varargs...)
}

// ListTestRunTestCasesRequest mocks base method
func (m *MockAppTestAPI) ListTestRunTestCasesRequest(arg0 *apptest.ListTestRunTestCasesInput) (*request.Request, *apptest.ListTestRunTestCasesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunTestCasesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.ListTestRunTestCasesOutput)
	return ret0, ret1
}

// ListTestRunTestCasesRequest indicates an expected call of ListTestRunTestCasesRequest
func (mr *MockAppTestAPIMockRecorder) ListTestRunTestCasesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunTestCasesRequest", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunTestCasesRequest), arg0)
}

// ListTestRunTestCasesWithContext mocks base method
func (m *MockAppTestAPI) ListTestRunTestCasesWithContext(arg0 context.Context, arg1 *apptest.ListTestRunTestCasesInput, arg2 ...request.Option) (*apptest.ListTestRunTestCasesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestRunTestCasesWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.ListTestRunTestCasesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestRunTestCasesWithContext indicates an expected call of ListTestRunTestCasesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestRunTestCasesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunTestCasesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunTestCasesWithContext), varargs...)
}

// ListTestRuns mocks base method
func (m *MockAppTestAPI) ListTestRuns(arg0 *apptest.ListTestRunsInput) (*apptest.ListTestRunsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRuns", arg0)
	ret0, _ := ret[0].(*apptest.ListTestRunsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestRuns indicates an expected call of ListTestRuns
func (mr *MockAppTestAPIMockRecorder) ListTestRuns(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRuns", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRuns), arg0)
}

// ListTestRunsPages mocks base method
func (m *MockAppTestAPI) ListTestRunsPages(arg0 *apptest.ListTestRunsInput, arg1 func(*apptest.ListTestRunsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestRunsPages indicates an expected call of ListTestRunsPages
func (mr *MockAppTestAPIMockRecorder) ListTestRunsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunsPages", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunsPages), arg0, arg1)
}

// ListTestRunsPagesWithContext mocks base method
func (m *MockAppTestAPI) ListTestRunsPagesWithContext(arg0 context.Context, arg1 *apptest.ListTestRunsInput, arg2 func(*apptest.ListTestRunsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestRunsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestRunsPagesWithContext indicates an expected call of ListTestRunsPagesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestRunsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunsPagesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunsPagesWithContext), varargs...)
}

// ListTestRunsRequest mocks base method
func (m *MockAppTestAPI) ListTestRunsRequest(arg0 *apptest.ListTestRunsInput) (*request.Request, *apptest.ListTestRunsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestRunsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.ListTestRunsOutput)
	return ret0, ret1
}

// ListTestRunsRequest indicates an expected call of ListTestRunsRequest
func (mr *MockAppTestAPIMockRecorder) ListTestRunsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunsRequest", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunsRequest), arg0)
}

// ListTestRunsWithContext mocks base method
func (m *MockAppTestAPI) ListTestRunsWithContext(arg0 context.Context, arg1 *apptest.ListTestRunsInput, arg2 ...request.Option) (*apptest.ListTestRunsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestRunsWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.ListTestRunsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestRunsWithContext indicates an expected call of ListTestRunsWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestRunsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestRunsWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestRunsWithContext), varargs...)
}

// ListTestSuites mocks base method
func (m *MockAppTestAPI) ListTestSuites(arg0 *apptest.ListTestSuitesInput) (*apptest.ListTestSuitesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestSuites", arg0)
	ret0, _ := ret[0].(*apptest.ListTestSuitesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestSuites indicates an expected call of ListTestSuites
func (mr *MockAppTestAPIMockRecorder) ListTestSuites(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestSuites", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestSuites), arg0)
}

// ListTestSuitesPages mocks base method
func (m *MockAppTestAPI) ListTestSuitesPages(arg0 *apptest.ListTestSuitesInput, arg1 func(*apptest.ListTestSuitesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestSuitesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestSuitesPages indicates an expected call of ListTestSuitesPages
func (mr *MockAppTestAPIMockRecorder) ListTestSuitesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestSuitesPages", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestSuitesPages), arg0, arg1)
}

// ListTestSuitesPagesWithContext mocks base method
func (m *MockAppTestAPI) ListTestSuitesPagesWithContext(arg0 context.Context, arg1 *apptest.ListTestSuitesInput, arg2 func(*apptest.ListTestSuitesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestSuitesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTestSuitesPagesWithContext indicates an expected call of ListTestSuitesPagesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestSuitesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestSuitesPagesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestSuitesPagesWithContext), varargs...)
}

// ListTestSuitesRequest mocks base method
func (m *MockAppTestAPI) ListTestSuitesRequest(arg0 *apptest.ListTestSuitesInput) (*request.Request, *apptest.ListTestSuitesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTestSuitesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.ListTestSuitesOutput)
	return ret0, ret1
}

// ListTestSuitesRequest indicates an expected call of ListTestSuitesRequest
func (mr *MockAppTestAPIMockRecorder) ListTestSuitesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestSuitesRequest", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestSuitesRequest), arg0)
}

// ListTestSuitesWithContext mocks base method
func (m *MockAppTestAPI) ListTestSuitesWithContext(arg0 context.Context, arg1 *apptest.ListTestSuitesInput, arg2 ...request.Option) (*apptest.ListTestSuitesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTestSuitesWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.ListTestSuitesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTestSuitesWithContext indicates an expected call of ListTestSuitesWithContext
func (mr *MockAppTestAPIMockRecorder) ListTestSuitesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTestSuitesWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).ListTestSuitesWithContext), varargs...)
}

// StartTestRun mocks base method
func (m *MockAppTestAPI) StartTestRun(arg0 *apptest.StartTestRunInput) (*apptest.StartTestRunOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartTestRun", arg0)
	ret0, _ := ret[0].(*apptest.StartTestRunOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartTestRun indicates an expected call of StartTestRun
func (mr *MockAppTestAPIMockRecorder) StartTestRun(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartTestRun", reflect.TypeOf((*MockAppTestAPI)(nil).StartTestRun), arg0)
}

// StartTestRunRequest mocks base method
func (m *MockAppTestAPI) StartTestRunRequest(arg0 *apptest.StartTestRunInput) (*request.Request, *apptest.StartTestRunOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartTestRunRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.StartTestRunOutput)
	return ret0, ret1
}

// StartTestRunRequest indicates an expected call of StartTestRunRequest
func (mr *MockAppTestAPIMockRecorder) StartTestRunRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartTestRunRequest", reflect.TypeOf((*MockAppTestAPI)(nil).StartTestRunRequest), arg0)
}

// StartTestRunWithContext mocks base method
func (m *MockAppTestAPI) StartTestRunWithContext(arg0 context.Context, arg1 *apptest.StartTestRunInput, arg2 ...request.Option) (*apptest.StartTestRunOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartTestRunWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.StartTestRunOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartTestRunWithContext indicates an expected call of StartTestRunWithContext
func (mr *MockAppTestAPIMockRecorder) StartTestRunWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartTestRunWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).StartTestRunWithContext), varargs...)
}

// TagResource mocks base method
func (m *MockAppTestAPI) TagResource(arg0 *apptest.TagResourceInput) (*apptest.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResource", arg0)
	ret0, _ := ret[0].(*apptest.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResource indicates an expected call of TagResource
func (mr *MockAppTestAPIMockRecorder) TagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResource", reflect.TypeOf((*MockAppTestAPI)(nil).TagResource), arg0)
}

// TagResourceRequest mocks base method
func (m *MockAppTestAPI) TagResourceRequest(arg0 *apptest.TagResourceInput) (*request.Request, *apptest.TagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.TagResourceOutput)
	return ret0, ret1
}

// TagResourceRequest indicates an expected call of TagResourceRequest
func (mr *MockAppTestAPIMockRecorder) TagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceRequest", reflect.TypeOf((*MockAppTestAPI)(nil).TagResourceRequest), arg0)
}

// TagResourceWithContext mocks base method
func (m *MockAppTestAPI) TagResourceWithContext(arg0 context.Context, arg1 *apptest.TagResourceInput, arg2 ...request.Option) (*apptest.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResourceWithContext indicates an expected call of TagResourceWithContext
func (mr *MockAppTestAPIMockRecorder) TagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).TagResourceWithContext), varargs...)
}

// UntagResource mocks base method
func (m *MockAppTestAPI) UntagResource(arg0 *apptest.UntagResourceInput) (*apptest.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResource", arg0)
	ret0, _ := ret[0].(*apptest.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResource indicates an expected call of UntagResource
func (mr *MockAppTestAPIMockRecorder) UntagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResource", reflect.TypeOf((*MockAppTestAPI)(nil).UntagResource), arg0)
}

// UntagResourceRequest mocks base method
func (m *MockAppTestAPI) UntagResourceRequest(arg0 *apptest.UntagResourceInput) (*request.Request, *apptest.UntagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.UntagResourceOutput)
	return ret0, ret1
}

// UntagResourceRequest indicates an expected call of UntagResourceRequest
func (mr *MockAppTestAPIMockRecorder) UntagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceRequest", reflect.TypeOf((*MockAppTestAPI)(nil).UntagResourceRequest), arg0)
}

// UntagResourceWithContext mocks base method
func (m *MockAppTestAPI) UntagResourceWithContext(arg0 context.Context, arg1 *apptest.UntagResourceInput, arg2 ...request.Option) (*apptest.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UntagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResourceWithContext indicates an expected call of UntagResourceWithContext
func (mr *MockAppTestAPIMockRecorder) UntagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).UntagResourceWithContext), varargs...)
}

// UpdateTestCase mocks base method
func (m *MockAppTestAPI) UpdateTestCase(arg0 *apptest.UpdateTestCaseInput) (*apptest.UpdateTestCaseOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTestCase", arg0)
	ret0, _ := ret[0].(*apptest.UpdateTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTestCase indicates an expected call of UpdateTestCase
func (mr *MockAppTestAPIMockRecorder) UpdateTestCase(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestCase", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestCase), arg0)
}

// UpdateTestCaseRequest mocks base method
func (m *MockAppTestAPI) UpdateTestCaseRequest(arg0 *apptest.UpdateTestCaseInput) (*request.Request, *apptest.UpdateTestCaseOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTestCaseRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.UpdateTestCaseOutput)
	return ret0, ret1
}

// UpdateTestCaseRequest indicates an expected call of UpdateTestCaseRequest
func (mr *MockAppTestAPIMockRecorder) UpdateTestCaseRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestCaseRequest", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestCaseRequest), arg0)
}

// UpdateTestCaseWithContext mocks base method
func (m *MockAppTestAPI) UpdateTestCaseWithContext(arg0 context.Context, arg1 *apptest.UpdateTestCaseInput, arg2 ...request.Option) (*apptest.UpdateTestCaseOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateTestCaseWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.UpdateTestCaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTestCaseWithContext indicates an expected call of UpdateTestCaseWithContext
func (mr *MockAppTestAPIMockRecorder) UpdateTestCaseWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestCaseWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestCaseWithContext), varargs...)
}

// UpdateTestConfiguration mocks base method
func (m *MockAppTestAPI) UpdateTestConfiguration(arg0 *apptest.UpdateTestConfigurationInput) (*apptest.UpdateTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTestConfiguration", arg0)
	ret0, _ := ret[0].(*apptest.UpdateTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTestConfiguration indicates an expected call of UpdateTestConfiguration
func (mr *MockAppTestAPIMockRecorder) UpdateTestConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestConfiguration", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestConfiguration), arg0)
}

// UpdateTestConfigurationRequest mocks base method
func (m *MockAppTestAPI) UpdateTestConfigurationRequest(arg0 *apptest.UpdateTestConfigurationInput) (*request.Request, *apptest.UpdateTestConfigurationOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTestConfigurationRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.UpdateTestConfigurationOutput)
	return ret0, ret1
}

// UpdateTestConfigurationRequest indicates an expected call of UpdateTestConfigurationRequest
func (mr *MockAppTestAPIMockRecorder) UpdateTestConfigurationRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestConfigurationRequest", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestConfigurationRequest), arg0)
}

// UpdateTestConfigurationWithContext mocks base method
func (m *MockAppTestAPI) UpdateTestConfigurationWithContext(arg0 context.Context, arg1 *apptest.UpdateTestConfigurationInput, arg2 ...request.Option) (*apptest.UpdateTestConfigurationOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateTestConfigurationWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.UpdateTestConfigurationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTestConfigurationWithContext indicates an expected call of UpdateTestConfigurationWithContext
func (mr *MockAppTestAPIMockRecorder) UpdateTestConfigurationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestConfigurationWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestConfigurationWithContext), varargs...)
}

// UpdateTestSuite mocks base method
func (m *MockAppTestAPI) UpdateTestSuite(arg0 *apptest.UpdateTestSuiteInput) (*apptest.UpdateTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTestSuite", arg0)
	ret0, _ := ret[0].(*apptest.UpdateTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTestSuite indicates an expected call of UpdateTestSuite
func (mr *MockAppTestAPIMockRecorder) UpdateTestSuite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestSuite", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestSuite), arg0)
}

// UpdateTestSuiteRequest mocks base method
func (m *MockAppTestAPI) UpdateTestSuiteRequest(arg0 *apptest.UpdateTestSuiteInput) (*request.Request, *apptest.UpdateTestSuiteOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTestSuiteRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*apptest.UpdateTestSuiteOutput)
	return ret0, ret1
}

// UpdateTestSuiteRequest indicates an expected call of UpdateTestSuiteRequest
func (mr *MockAppTestAPIMockRecorder) UpdateTestSuiteRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestSuiteRequest", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestSuiteRequest), arg0)
}

// UpdateTestSuiteWithContext mocks base method
func (m *MockAppTestAPI) UpdateTestSuiteWithContext(arg0 context.Context, arg1 *apptest.UpdateTestSuiteInput, arg2 ...request.Option) (*apptest.UpdateTestSuiteOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateTestSuiteWithContext", varargs...)
	ret0, _ := ret[0].(*apptest.UpdateTestSuiteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTestSuiteWithContext indicates an expected call of UpdateTestSuiteWithContext
func (mr *MockAppTestAPIMockRecorder) UpdateTestSuiteWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTestSuiteWithContext", reflect.TypeOf((*MockAppTestAPI)(nil).UpdateTestSuiteWithContext), varargs...)
}
