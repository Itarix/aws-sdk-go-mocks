// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/amplifyuibuilder/amplifyuibuilderiface (interfaces: AmplifyUIBuilderAPI)

// Package amplifyuibuildermock is a generated GoMock package.
package amplifyuibuildermock

import (
	context "context"
	request "github.com/aws/aws-sdk-go/aws/request"
	amplifyuibuilder "github.com/aws/aws-sdk-go/service/amplifyuibuilder"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAmplifyUIBuilderAPI is a mock of AmplifyUIBuilderAPI interface
type MockAmplifyUIBuilderAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAmplifyUIBuilderAPIMockRecorder
}

// MockAmplifyUIBuilderAPIMockRecorder is the mock recorder for MockAmplifyUIBuilderAPI
type MockAmplifyUIBuilderAPIMockRecorder struct {
	mock *MockAmplifyUIBuilderAPI
}

// NewMockAmplifyUIBuilderAPI creates a new mock instance
func NewMockAmplifyUIBuilderAPI(ctrl *gomock.Controller) *MockAmplifyUIBuilderAPI {
	mock := &MockAmplifyUIBuilderAPI{ctrl: ctrl}
	mock.recorder = &MockAmplifyUIBuilderAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAmplifyUIBuilderAPI) EXPECT() *MockAmplifyUIBuilderAPIMockRecorder {
	return m.recorder
}

// CreateComponent mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateComponent(arg0 *amplifyuibuilder.CreateComponentInput) (*amplifyuibuilder.CreateComponentOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateComponent", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.CreateComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateComponent indicates an expected call of CreateComponent
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateComponent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateComponent", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateComponent), arg0)
}

// CreateComponentRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateComponentRequest(arg0 *amplifyuibuilder.CreateComponentInput) (*request.Request, *amplifyuibuilder.CreateComponentOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateComponentRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.CreateComponentOutput)
	return ret0, ret1
}

// CreateComponentRequest indicates an expected call of CreateComponentRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateComponentRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateComponentRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateComponentRequest), arg0)
}

// CreateComponentWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateComponentWithContext(arg0 context.Context, arg1 *amplifyuibuilder.CreateComponentInput, arg2 ...request.Option) (*amplifyuibuilder.CreateComponentOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateComponentWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.CreateComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateComponentWithContext indicates an expected call of CreateComponentWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateComponentWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateComponentWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateComponentWithContext), varargs...)
}

// CreateForm mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateForm(arg0 *amplifyuibuilder.CreateFormInput) (*amplifyuibuilder.CreateFormOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateForm", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.CreateFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateForm indicates an expected call of CreateForm
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateForm(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateForm", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateForm), arg0)
}

// CreateFormRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateFormRequest(arg0 *amplifyuibuilder.CreateFormInput) (*request.Request, *amplifyuibuilder.CreateFormOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFormRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.CreateFormOutput)
	return ret0, ret1
}

// CreateFormRequest indicates an expected call of CreateFormRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateFormRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFormRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateFormRequest), arg0)
}

// CreateFormWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateFormWithContext(arg0 context.Context, arg1 *amplifyuibuilder.CreateFormInput, arg2 ...request.Option) (*amplifyuibuilder.CreateFormOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateFormWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.CreateFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFormWithContext indicates an expected call of CreateFormWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateFormWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFormWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateFormWithContext), varargs...)
}

// CreateTheme mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateTheme(arg0 *amplifyuibuilder.CreateThemeInput) (*amplifyuibuilder.CreateThemeOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTheme", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.CreateThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTheme indicates an expected call of CreateTheme
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateTheme(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTheme", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateTheme), arg0)
}

// CreateThemeRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateThemeRequest(arg0 *amplifyuibuilder.CreateThemeInput) (*request.Request, *amplifyuibuilder.CreateThemeOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateThemeRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.CreateThemeOutput)
	return ret0, ret1
}

// CreateThemeRequest indicates an expected call of CreateThemeRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateThemeRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateThemeRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateThemeRequest), arg0)
}

// CreateThemeWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) CreateThemeWithContext(arg0 context.Context, arg1 *amplifyuibuilder.CreateThemeInput, arg2 ...request.Option) (*amplifyuibuilder.CreateThemeOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateThemeWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.CreateThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateThemeWithContext indicates an expected call of CreateThemeWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) CreateThemeWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateThemeWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).CreateThemeWithContext), varargs...)
}

// DeleteComponent mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteComponent(arg0 *amplifyuibuilder.DeleteComponentInput) (*amplifyuibuilder.DeleteComponentOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteComponent", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.DeleteComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteComponent indicates an expected call of DeleteComponent
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteComponent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteComponent", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteComponent), arg0)
}

// DeleteComponentRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteComponentRequest(arg0 *amplifyuibuilder.DeleteComponentInput) (*request.Request, *amplifyuibuilder.DeleteComponentOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteComponentRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.DeleteComponentOutput)
	return ret0, ret1
}

// DeleteComponentRequest indicates an expected call of DeleteComponentRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteComponentRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteComponentRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteComponentRequest), arg0)
}

// DeleteComponentWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteComponentWithContext(arg0 context.Context, arg1 *amplifyuibuilder.DeleteComponentInput, arg2 ...request.Option) (*amplifyuibuilder.DeleteComponentOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteComponentWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.DeleteComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteComponentWithContext indicates an expected call of DeleteComponentWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteComponentWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteComponentWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteComponentWithContext), varargs...)
}

// DeleteForm mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteForm(arg0 *amplifyuibuilder.DeleteFormInput) (*amplifyuibuilder.DeleteFormOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteForm", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.DeleteFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteForm indicates an expected call of DeleteForm
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteForm(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteForm", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteForm), arg0)
}

// DeleteFormRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteFormRequest(arg0 *amplifyuibuilder.DeleteFormInput) (*request.Request, *amplifyuibuilder.DeleteFormOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFormRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.DeleteFormOutput)
	return ret0, ret1
}

// DeleteFormRequest indicates an expected call of DeleteFormRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteFormRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFormRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteFormRequest), arg0)
}

// DeleteFormWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteFormWithContext(arg0 context.Context, arg1 *amplifyuibuilder.DeleteFormInput, arg2 ...request.Option) (*amplifyuibuilder.DeleteFormOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteFormWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.DeleteFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFormWithContext indicates an expected call of DeleteFormWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteFormWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFormWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteFormWithContext), varargs...)
}

// DeleteTheme mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteTheme(arg0 *amplifyuibuilder.DeleteThemeInput) (*amplifyuibuilder.DeleteThemeOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTheme", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.DeleteThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTheme indicates an expected call of DeleteTheme
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteTheme(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTheme", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteTheme), arg0)
}

// DeleteThemeRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteThemeRequest(arg0 *amplifyuibuilder.DeleteThemeInput) (*request.Request, *amplifyuibuilder.DeleteThemeOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteThemeRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.DeleteThemeOutput)
	return ret0, ret1
}

// DeleteThemeRequest indicates an expected call of DeleteThemeRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteThemeRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteThemeRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteThemeRequest), arg0)
}

// DeleteThemeWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) DeleteThemeWithContext(arg0 context.Context, arg1 *amplifyuibuilder.DeleteThemeInput, arg2 ...request.Option) (*amplifyuibuilder.DeleteThemeOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteThemeWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.DeleteThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteThemeWithContext indicates an expected call of DeleteThemeWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) DeleteThemeWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteThemeWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).DeleteThemeWithContext), varargs...)
}

// ExchangeCodeForToken mocks base method
func (m *MockAmplifyUIBuilderAPI) ExchangeCodeForToken(arg0 *amplifyuibuilder.ExchangeCodeForTokenInput) (*amplifyuibuilder.ExchangeCodeForTokenOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExchangeCodeForToken", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ExchangeCodeForTokenOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExchangeCodeForToken indicates an expected call of ExchangeCodeForToken
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExchangeCodeForToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExchangeCodeForToken", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExchangeCodeForToken), arg0)
}

// ExchangeCodeForTokenRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ExchangeCodeForTokenRequest(arg0 *amplifyuibuilder.ExchangeCodeForTokenInput) (*request.Request, *amplifyuibuilder.ExchangeCodeForTokenOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExchangeCodeForTokenRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ExchangeCodeForTokenOutput)
	return ret0, ret1
}

// ExchangeCodeForTokenRequest indicates an expected call of ExchangeCodeForTokenRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExchangeCodeForTokenRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExchangeCodeForTokenRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExchangeCodeForTokenRequest), arg0)
}

// ExchangeCodeForTokenWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ExchangeCodeForTokenWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ExchangeCodeForTokenInput, arg2 ...request.Option) (*amplifyuibuilder.ExchangeCodeForTokenOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExchangeCodeForTokenWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ExchangeCodeForTokenOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExchangeCodeForTokenWithContext indicates an expected call of ExchangeCodeForTokenWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExchangeCodeForTokenWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExchangeCodeForTokenWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExchangeCodeForTokenWithContext), varargs...)
}

// ExportComponents mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportComponents(arg0 *amplifyuibuilder.ExportComponentsInput) (*amplifyuibuilder.ExportComponentsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportComponents", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ExportComponentsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportComponents indicates an expected call of ExportComponents
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportComponents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportComponents", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportComponents), arg0)
}

// ExportComponentsPages mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportComponentsPages(arg0 *amplifyuibuilder.ExportComponentsInput, arg1 func(*amplifyuibuilder.ExportComponentsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportComponentsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportComponentsPages indicates an expected call of ExportComponentsPages
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportComponentsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportComponentsPages", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportComponentsPages), arg0, arg1)
}

// ExportComponentsPagesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportComponentsPagesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ExportComponentsInput, arg2 func(*amplifyuibuilder.ExportComponentsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExportComponentsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportComponentsPagesWithContext indicates an expected call of ExportComponentsPagesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportComponentsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportComponentsPagesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportComponentsPagesWithContext), varargs...)
}

// ExportComponentsRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportComponentsRequest(arg0 *amplifyuibuilder.ExportComponentsInput) (*request.Request, *amplifyuibuilder.ExportComponentsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportComponentsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ExportComponentsOutput)
	return ret0, ret1
}

// ExportComponentsRequest indicates an expected call of ExportComponentsRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportComponentsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportComponentsRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportComponentsRequest), arg0)
}

// ExportComponentsWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportComponentsWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ExportComponentsInput, arg2 ...request.Option) (*amplifyuibuilder.ExportComponentsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExportComponentsWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ExportComponentsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportComponentsWithContext indicates an expected call of ExportComponentsWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportComponentsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportComponentsWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportComponentsWithContext), varargs...)
}

// ExportForms mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportForms(arg0 *amplifyuibuilder.ExportFormsInput) (*amplifyuibuilder.ExportFormsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportForms", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ExportFormsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportForms indicates an expected call of ExportForms
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportForms(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportForms", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportForms), arg0)
}

// ExportFormsPages mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportFormsPages(arg0 *amplifyuibuilder.ExportFormsInput, arg1 func(*amplifyuibuilder.ExportFormsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportFormsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportFormsPages indicates an expected call of ExportFormsPages
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportFormsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportFormsPages", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportFormsPages), arg0, arg1)
}

// ExportFormsPagesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportFormsPagesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ExportFormsInput, arg2 func(*amplifyuibuilder.ExportFormsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExportFormsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportFormsPagesWithContext indicates an expected call of ExportFormsPagesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportFormsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportFormsPagesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportFormsPagesWithContext), varargs...)
}

// ExportFormsRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportFormsRequest(arg0 *amplifyuibuilder.ExportFormsInput) (*request.Request, *amplifyuibuilder.ExportFormsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportFormsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ExportFormsOutput)
	return ret0, ret1
}

// ExportFormsRequest indicates an expected call of ExportFormsRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportFormsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportFormsRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportFormsRequest), arg0)
}

// ExportFormsWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportFormsWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ExportFormsInput, arg2 ...request.Option) (*amplifyuibuilder.ExportFormsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExportFormsWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ExportFormsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportFormsWithContext indicates an expected call of ExportFormsWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportFormsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportFormsWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportFormsWithContext), varargs...)
}

// ExportThemes mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportThemes(arg0 *amplifyuibuilder.ExportThemesInput) (*amplifyuibuilder.ExportThemesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportThemes", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ExportThemesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportThemes indicates an expected call of ExportThemes
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportThemes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportThemes", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportThemes), arg0)
}

// ExportThemesPages mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportThemesPages(arg0 *amplifyuibuilder.ExportThemesInput, arg1 func(*amplifyuibuilder.ExportThemesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportThemesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportThemesPages indicates an expected call of ExportThemesPages
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportThemesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportThemesPages", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportThemesPages), arg0, arg1)
}

// ExportThemesPagesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportThemesPagesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ExportThemesInput, arg2 func(*amplifyuibuilder.ExportThemesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExportThemesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportThemesPagesWithContext indicates an expected call of ExportThemesPagesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportThemesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportThemesPagesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportThemesPagesWithContext), varargs...)
}

// ExportThemesRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportThemesRequest(arg0 *amplifyuibuilder.ExportThemesInput) (*request.Request, *amplifyuibuilder.ExportThemesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportThemesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ExportThemesOutput)
	return ret0, ret1
}

// ExportThemesRequest indicates an expected call of ExportThemesRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportThemesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportThemesRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportThemesRequest), arg0)
}

// ExportThemesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ExportThemesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ExportThemesInput, arg2 ...request.Option) (*amplifyuibuilder.ExportThemesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ExportThemesWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ExportThemesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportThemesWithContext indicates an expected call of ExportThemesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ExportThemesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportThemesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ExportThemesWithContext), varargs...)
}

// GetCodegenJob mocks base method
func (m *MockAmplifyUIBuilderAPI) GetCodegenJob(arg0 *amplifyuibuilder.GetCodegenJobInput) (*amplifyuibuilder.GetCodegenJobOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCodegenJob", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.GetCodegenJobOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCodegenJob indicates an expected call of GetCodegenJob
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetCodegenJob(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCodegenJob", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetCodegenJob), arg0)
}

// GetCodegenJobRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) GetCodegenJobRequest(arg0 *amplifyuibuilder.GetCodegenJobInput) (*request.Request, *amplifyuibuilder.GetCodegenJobOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCodegenJobRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.GetCodegenJobOutput)
	return ret0, ret1
}

// GetCodegenJobRequest indicates an expected call of GetCodegenJobRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetCodegenJobRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCodegenJobRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetCodegenJobRequest), arg0)
}

// GetCodegenJobWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) GetCodegenJobWithContext(arg0 context.Context, arg1 *amplifyuibuilder.GetCodegenJobInput, arg2 ...request.Option) (*amplifyuibuilder.GetCodegenJobOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetCodegenJobWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.GetCodegenJobOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCodegenJobWithContext indicates an expected call of GetCodegenJobWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetCodegenJobWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCodegenJobWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetCodegenJobWithContext), varargs...)
}

// GetComponent mocks base method
func (m *MockAmplifyUIBuilderAPI) GetComponent(arg0 *amplifyuibuilder.GetComponentInput) (*amplifyuibuilder.GetComponentOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComponent", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.GetComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetComponent indicates an expected call of GetComponent
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetComponent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComponent", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetComponent), arg0)
}

// GetComponentRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) GetComponentRequest(arg0 *amplifyuibuilder.GetComponentInput) (*request.Request, *amplifyuibuilder.GetComponentOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComponentRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.GetComponentOutput)
	return ret0, ret1
}

// GetComponentRequest indicates an expected call of GetComponentRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetComponentRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComponentRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetComponentRequest), arg0)
}

// GetComponentWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) GetComponentWithContext(arg0 context.Context, arg1 *amplifyuibuilder.GetComponentInput, arg2 ...request.Option) (*amplifyuibuilder.GetComponentOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetComponentWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.GetComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetComponentWithContext indicates an expected call of GetComponentWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetComponentWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComponentWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetComponentWithContext), varargs...)
}

// GetForm mocks base method
func (m *MockAmplifyUIBuilderAPI) GetForm(arg0 *amplifyuibuilder.GetFormInput) (*amplifyuibuilder.GetFormOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetForm", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.GetFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetForm indicates an expected call of GetForm
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetForm(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetForm", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetForm), arg0)
}

// GetFormRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) GetFormRequest(arg0 *amplifyuibuilder.GetFormInput) (*request.Request, *amplifyuibuilder.GetFormOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFormRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.GetFormOutput)
	return ret0, ret1
}

// GetFormRequest indicates an expected call of GetFormRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetFormRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFormRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetFormRequest), arg0)
}

// GetFormWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) GetFormWithContext(arg0 context.Context, arg1 *amplifyuibuilder.GetFormInput, arg2 ...request.Option) (*amplifyuibuilder.GetFormOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetFormWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.GetFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFormWithContext indicates an expected call of GetFormWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetFormWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFormWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetFormWithContext), varargs...)
}

// GetMetadata mocks base method
func (m *MockAmplifyUIBuilderAPI) GetMetadata(arg0 *amplifyuibuilder.GetMetadataInput) (*amplifyuibuilder.GetMetadataOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.GetMetadataOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetadata indicates an expected call of GetMetadata
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetMetadata(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetMetadata), arg0)
}

// GetMetadataRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) GetMetadataRequest(arg0 *amplifyuibuilder.GetMetadataInput) (*request.Request, *amplifyuibuilder.GetMetadataOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadataRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.GetMetadataOutput)
	return ret0, ret1
}

// GetMetadataRequest indicates an expected call of GetMetadataRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetMetadataRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadataRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetMetadataRequest), arg0)
}

// GetMetadataWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) GetMetadataWithContext(arg0 context.Context, arg1 *amplifyuibuilder.GetMetadataInput, arg2 ...request.Option) (*amplifyuibuilder.GetMetadataOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetMetadataWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.GetMetadataOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetadataWithContext indicates an expected call of GetMetadataWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetMetadataWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadataWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetMetadataWithContext), varargs...)
}

// GetTheme mocks base method
func (m *MockAmplifyUIBuilderAPI) GetTheme(arg0 *amplifyuibuilder.GetThemeInput) (*amplifyuibuilder.GetThemeOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTheme", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.GetThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTheme indicates an expected call of GetTheme
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetTheme(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTheme", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetTheme), arg0)
}

// GetThemeRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) GetThemeRequest(arg0 *amplifyuibuilder.GetThemeInput) (*request.Request, *amplifyuibuilder.GetThemeOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetThemeRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.GetThemeOutput)
	return ret0, ret1
}

// GetThemeRequest indicates an expected call of GetThemeRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetThemeRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetThemeRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetThemeRequest), arg0)
}

// GetThemeWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) GetThemeWithContext(arg0 context.Context, arg1 *amplifyuibuilder.GetThemeInput, arg2 ...request.Option) (*amplifyuibuilder.GetThemeOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetThemeWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.GetThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetThemeWithContext indicates an expected call of GetThemeWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) GetThemeWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetThemeWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).GetThemeWithContext), varargs...)
}

// ListCodegenJobs mocks base method
func (m *MockAmplifyUIBuilderAPI) ListCodegenJobs(arg0 *amplifyuibuilder.ListCodegenJobsInput) (*amplifyuibuilder.ListCodegenJobsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCodegenJobs", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ListCodegenJobsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCodegenJobs indicates an expected call of ListCodegenJobs
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListCodegenJobs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCodegenJobs", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListCodegenJobs), arg0)
}

// ListCodegenJobsPages mocks base method
func (m *MockAmplifyUIBuilderAPI) ListCodegenJobsPages(arg0 *amplifyuibuilder.ListCodegenJobsInput, arg1 func(*amplifyuibuilder.ListCodegenJobsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCodegenJobsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListCodegenJobsPages indicates an expected call of ListCodegenJobsPages
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListCodegenJobsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCodegenJobsPages", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListCodegenJobsPages), arg0, arg1)
}

// ListCodegenJobsPagesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListCodegenJobsPagesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListCodegenJobsInput, arg2 func(*amplifyuibuilder.ListCodegenJobsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListCodegenJobsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListCodegenJobsPagesWithContext indicates an expected call of ListCodegenJobsPagesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListCodegenJobsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCodegenJobsPagesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListCodegenJobsPagesWithContext), varargs...)
}

// ListCodegenJobsRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ListCodegenJobsRequest(arg0 *amplifyuibuilder.ListCodegenJobsInput) (*request.Request, *amplifyuibuilder.ListCodegenJobsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCodegenJobsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ListCodegenJobsOutput)
	return ret0, ret1
}

// ListCodegenJobsRequest indicates an expected call of ListCodegenJobsRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListCodegenJobsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCodegenJobsRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListCodegenJobsRequest), arg0)
}

// ListCodegenJobsWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListCodegenJobsWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListCodegenJobsInput, arg2 ...request.Option) (*amplifyuibuilder.ListCodegenJobsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListCodegenJobsWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ListCodegenJobsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCodegenJobsWithContext indicates an expected call of ListCodegenJobsWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListCodegenJobsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCodegenJobsWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListCodegenJobsWithContext), varargs...)
}

// ListComponents mocks base method
func (m *MockAmplifyUIBuilderAPI) ListComponents(arg0 *amplifyuibuilder.ListComponentsInput) (*amplifyuibuilder.ListComponentsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListComponents", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ListComponentsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListComponents indicates an expected call of ListComponents
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListComponents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListComponents", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListComponents), arg0)
}

// ListComponentsPages mocks base method
func (m *MockAmplifyUIBuilderAPI) ListComponentsPages(arg0 *amplifyuibuilder.ListComponentsInput, arg1 func(*amplifyuibuilder.ListComponentsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListComponentsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListComponentsPages indicates an expected call of ListComponentsPages
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListComponentsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListComponentsPages", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListComponentsPages), arg0, arg1)
}

// ListComponentsPagesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListComponentsPagesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListComponentsInput, arg2 func(*amplifyuibuilder.ListComponentsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListComponentsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListComponentsPagesWithContext indicates an expected call of ListComponentsPagesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListComponentsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListComponentsPagesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListComponentsPagesWithContext), varargs...)
}

// ListComponentsRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ListComponentsRequest(arg0 *amplifyuibuilder.ListComponentsInput) (*request.Request, *amplifyuibuilder.ListComponentsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListComponentsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ListComponentsOutput)
	return ret0, ret1
}

// ListComponentsRequest indicates an expected call of ListComponentsRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListComponentsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListComponentsRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListComponentsRequest), arg0)
}

// ListComponentsWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListComponentsWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListComponentsInput, arg2 ...request.Option) (*amplifyuibuilder.ListComponentsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListComponentsWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ListComponentsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListComponentsWithContext indicates an expected call of ListComponentsWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListComponentsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListComponentsWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListComponentsWithContext), varargs...)
}

// ListForms mocks base method
func (m *MockAmplifyUIBuilderAPI) ListForms(arg0 *amplifyuibuilder.ListFormsInput) (*amplifyuibuilder.ListFormsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListForms", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ListFormsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListForms indicates an expected call of ListForms
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListForms(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListForms", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListForms), arg0)
}

// ListFormsPages mocks base method
func (m *MockAmplifyUIBuilderAPI) ListFormsPages(arg0 *amplifyuibuilder.ListFormsInput, arg1 func(*amplifyuibuilder.ListFormsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFormsPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListFormsPages indicates an expected call of ListFormsPages
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListFormsPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFormsPages", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListFormsPages), arg0, arg1)
}

// ListFormsPagesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListFormsPagesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListFormsInput, arg2 func(*amplifyuibuilder.ListFormsOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListFormsPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListFormsPagesWithContext indicates an expected call of ListFormsPagesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListFormsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFormsPagesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListFormsPagesWithContext), varargs...)
}

// ListFormsRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ListFormsRequest(arg0 *amplifyuibuilder.ListFormsInput) (*request.Request, *amplifyuibuilder.ListFormsOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFormsRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ListFormsOutput)
	return ret0, ret1
}

// ListFormsRequest indicates an expected call of ListFormsRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListFormsRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFormsRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListFormsRequest), arg0)
}

// ListFormsWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListFormsWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListFormsInput, arg2 ...request.Option) (*amplifyuibuilder.ListFormsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListFormsWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ListFormsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFormsWithContext indicates an expected call of ListFormsWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListFormsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFormsWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListFormsWithContext), varargs...)
}

// ListThemes mocks base method
func (m *MockAmplifyUIBuilderAPI) ListThemes(arg0 *amplifyuibuilder.ListThemesInput) (*amplifyuibuilder.ListThemesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListThemes", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.ListThemesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListThemes indicates an expected call of ListThemes
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListThemes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListThemes", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListThemes), arg0)
}

// ListThemesPages mocks base method
func (m *MockAmplifyUIBuilderAPI) ListThemesPages(arg0 *amplifyuibuilder.ListThemesInput, arg1 func(*amplifyuibuilder.ListThemesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListThemesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListThemesPages indicates an expected call of ListThemesPages
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListThemesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListThemesPages", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListThemesPages), arg0, arg1)
}

// ListThemesPagesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListThemesPagesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListThemesInput, arg2 func(*amplifyuibuilder.ListThemesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListThemesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListThemesPagesWithContext indicates an expected call of ListThemesPagesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListThemesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListThemesPagesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListThemesPagesWithContext), varargs...)
}

// ListThemesRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) ListThemesRequest(arg0 *amplifyuibuilder.ListThemesInput) (*request.Request, *amplifyuibuilder.ListThemesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListThemesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.ListThemesOutput)
	return ret0, ret1
}

// ListThemesRequest indicates an expected call of ListThemesRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListThemesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListThemesRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListThemesRequest), arg0)
}

// ListThemesWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) ListThemesWithContext(arg0 context.Context, arg1 *amplifyuibuilder.ListThemesInput, arg2 ...request.Option) (*amplifyuibuilder.ListThemesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListThemesWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.ListThemesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListThemesWithContext indicates an expected call of ListThemesWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) ListThemesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListThemesWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).ListThemesWithContext), varargs...)
}

// PutMetadataFlag mocks base method
func (m *MockAmplifyUIBuilderAPI) PutMetadataFlag(arg0 *amplifyuibuilder.PutMetadataFlagInput) (*amplifyuibuilder.PutMetadataFlagOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutMetadataFlag", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.PutMetadataFlagOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutMetadataFlag indicates an expected call of PutMetadataFlag
func (mr *MockAmplifyUIBuilderAPIMockRecorder) PutMetadataFlag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutMetadataFlag", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).PutMetadataFlag), arg0)
}

// PutMetadataFlagRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) PutMetadataFlagRequest(arg0 *amplifyuibuilder.PutMetadataFlagInput) (*request.Request, *amplifyuibuilder.PutMetadataFlagOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutMetadataFlagRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.PutMetadataFlagOutput)
	return ret0, ret1
}

// PutMetadataFlagRequest indicates an expected call of PutMetadataFlagRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) PutMetadataFlagRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutMetadataFlagRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).PutMetadataFlagRequest), arg0)
}

// PutMetadataFlagWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) PutMetadataFlagWithContext(arg0 context.Context, arg1 *amplifyuibuilder.PutMetadataFlagInput, arg2 ...request.Option) (*amplifyuibuilder.PutMetadataFlagOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PutMetadataFlagWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.PutMetadataFlagOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutMetadataFlagWithContext indicates an expected call of PutMetadataFlagWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) PutMetadataFlagWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutMetadataFlagWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).PutMetadataFlagWithContext), varargs...)
}

// RefreshToken mocks base method
func (m *MockAmplifyUIBuilderAPI) RefreshToken(arg0 *amplifyuibuilder.RefreshTokenInput) (*amplifyuibuilder.RefreshTokenOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshToken", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.RefreshTokenOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshToken indicates an expected call of RefreshToken
func (mr *MockAmplifyUIBuilderAPIMockRecorder) RefreshToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).RefreshToken), arg0)
}

// RefreshTokenRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) RefreshTokenRequest(arg0 *amplifyuibuilder.RefreshTokenInput) (*request.Request, *amplifyuibuilder.RefreshTokenOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshTokenRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.RefreshTokenOutput)
	return ret0, ret1
}

// RefreshTokenRequest indicates an expected call of RefreshTokenRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) RefreshTokenRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshTokenRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).RefreshTokenRequest), arg0)
}

// RefreshTokenWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) RefreshTokenWithContext(arg0 context.Context, arg1 *amplifyuibuilder.RefreshTokenInput, arg2 ...request.Option) (*amplifyuibuilder.RefreshTokenOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RefreshTokenWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.RefreshTokenOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshTokenWithContext indicates an expected call of RefreshTokenWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) RefreshTokenWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshTokenWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).RefreshTokenWithContext), varargs...)
}

// StartCodegenJob mocks base method
func (m *MockAmplifyUIBuilderAPI) StartCodegenJob(arg0 *amplifyuibuilder.StartCodegenJobInput) (*amplifyuibuilder.StartCodegenJobOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartCodegenJob", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.StartCodegenJobOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartCodegenJob indicates an expected call of StartCodegenJob
func (mr *MockAmplifyUIBuilderAPIMockRecorder) StartCodegenJob(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartCodegenJob", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).StartCodegenJob), arg0)
}

// StartCodegenJobRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) StartCodegenJobRequest(arg0 *amplifyuibuilder.StartCodegenJobInput) (*request.Request, *amplifyuibuilder.StartCodegenJobOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartCodegenJobRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.StartCodegenJobOutput)
	return ret0, ret1
}

// StartCodegenJobRequest indicates an expected call of StartCodegenJobRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) StartCodegenJobRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartCodegenJobRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).StartCodegenJobRequest), arg0)
}

// StartCodegenJobWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) StartCodegenJobWithContext(arg0 context.Context, arg1 *amplifyuibuilder.StartCodegenJobInput, arg2 ...request.Option) (*amplifyuibuilder.StartCodegenJobOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StartCodegenJobWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.StartCodegenJobOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartCodegenJobWithContext indicates an expected call of StartCodegenJobWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) StartCodegenJobWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartCodegenJobWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).StartCodegenJobWithContext), varargs...)
}

// UpdateComponent mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateComponent(arg0 *amplifyuibuilder.UpdateComponentInput) (*amplifyuibuilder.UpdateComponentOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateComponent", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.UpdateComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateComponent indicates an expected call of UpdateComponent
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateComponent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateComponent", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateComponent), arg0)
}

// UpdateComponentRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateComponentRequest(arg0 *amplifyuibuilder.UpdateComponentInput) (*request.Request, *amplifyuibuilder.UpdateComponentOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateComponentRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.UpdateComponentOutput)
	return ret0, ret1
}

// UpdateComponentRequest indicates an expected call of UpdateComponentRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateComponentRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateComponentRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateComponentRequest), arg0)
}

// UpdateComponentWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateComponentWithContext(arg0 context.Context, arg1 *amplifyuibuilder.UpdateComponentInput, arg2 ...request.Option) (*amplifyuibuilder.UpdateComponentOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateComponentWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.UpdateComponentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateComponentWithContext indicates an expected call of UpdateComponentWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateComponentWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateComponentWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateComponentWithContext), varargs...)
}

// UpdateForm mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateForm(arg0 *amplifyuibuilder.UpdateFormInput) (*amplifyuibuilder.UpdateFormOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateForm", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.UpdateFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateForm indicates an expected call of UpdateForm
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateForm(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateForm", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateForm), arg0)
}

// UpdateFormRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateFormRequest(arg0 *amplifyuibuilder.UpdateFormInput) (*request.Request, *amplifyuibuilder.UpdateFormOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFormRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.UpdateFormOutput)
	return ret0, ret1
}

// UpdateFormRequest indicates an expected call of UpdateFormRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateFormRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFormRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateFormRequest), arg0)
}

// UpdateFormWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateFormWithContext(arg0 context.Context, arg1 *amplifyuibuilder.UpdateFormInput, arg2 ...request.Option) (*amplifyuibuilder.UpdateFormOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateFormWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.UpdateFormOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateFormWithContext indicates an expected call of UpdateFormWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateFormWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFormWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateFormWithContext), varargs...)
}

// UpdateTheme mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateTheme(arg0 *amplifyuibuilder.UpdateThemeInput) (*amplifyuibuilder.UpdateThemeOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTheme", arg0)
	ret0, _ := ret[0].(*amplifyuibuilder.UpdateThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTheme indicates an expected call of UpdateTheme
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateTheme(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTheme", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateTheme), arg0)
}

// UpdateThemeRequest mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateThemeRequest(arg0 *amplifyuibuilder.UpdateThemeInput) (*request.Request, *amplifyuibuilder.UpdateThemeOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateThemeRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*amplifyuibuilder.UpdateThemeOutput)
	return ret0, ret1
}

// UpdateThemeRequest indicates an expected call of UpdateThemeRequest
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateThemeRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateThemeRequest", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateThemeRequest), arg0)
}

// UpdateThemeWithContext mocks base method
func (m *MockAmplifyUIBuilderAPI) UpdateThemeWithContext(arg0 context.Context, arg1 *amplifyuibuilder.UpdateThemeInput, arg2 ...request.Option) (*amplifyuibuilder.UpdateThemeOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateThemeWithContext", varargs...)
	ret0, _ := ret[0].(*amplifyuibuilder.UpdateThemeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateThemeWithContext indicates an expected call of UpdateThemeWithContext
func (mr *MockAmplifyUIBuilderAPIMockRecorder) UpdateThemeWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateThemeWithContext", reflect.TypeOf((*MockAmplifyUIBuilderAPI)(nil).UpdateThemeWithContext), varargs...)
}
